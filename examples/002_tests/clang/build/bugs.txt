Found 1470 issues

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodePadder.cpp:24: error: USE_AFTER_FREE
  pointer `Policy` last assigned on line 23 was freed by call to `delete()` at line 24, column 5 and is dereferenced or freed at line 24, column 5.
  22.   MCCodePadder::~MCCodePadder() {
  23.     for (auto *Policy : CodePaddingPolicies)
  24. >     delete Policy;
  25.   }
  26.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcTargetMachine.cpp:24: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::SparcV8TargetMachine>*) is never used.
  22.   extern "C" void LLVMInitializeSparcTarget() {
  23.     // Register the target.
  24. >   RegisterTargetMachine<SparcV8TargetMachine> X(getTheSparcTarget());
  25.     RegisterTargetMachine<SparcV9TargetMachine> Y(getTheSparcV9Target());
  26.     RegisterTargetMachine<SparcelTargetMachine> Z(getTheSparcelTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcTargetMachine.cpp:25: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::SparcV9TargetMachine>*) is never used.
  23.     // Register the target.
  24.     RegisterTargetMachine<SparcV8TargetMachine> X(getTheSparcTarget());
  25. >   RegisterTargetMachine<SparcV9TargetMachine> Y(getTheSparcV9Target());
  26.     RegisterTargetMachine<SparcelTargetMachine> Z(getTheSparcelTarget());
  27.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcTargetMachine.cpp:26: error: DEAD_STORE
  The value written to &Z (type llvm::RegisterTargetMachine<llvm::SparcelTargetMachine>*) is never used.
  24.     RegisterTargetMachine<SparcV8TargetMachine> X(getTheSparcTarget());
  25.     RegisterTargetMachine<SparcV9TargetMachine> Y(getTheSparcV9Target());
  26. >   RegisterTargetMachine<SparcelTargetMachine> Z(getTheSparcelTarget());
  27.   }
  28.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/WebAssemblyDisassemblerEmitter.cpp:55: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `CGIP->second` was dereferenced at line 33 and is tested for null at line 55, column 9.
  53.       if (!IsStackBased)
  54.         continue;
  55. >     if (CGIP.second) {
  56.         // We already have an instruction for this slot, so decide which one
  57.         // should be the canonical one. This determines which variant gets

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430TargetMachine.cpp:25: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::MSP430TargetMachine>*) is never used.
  23.   extern "C" void LLVMInitializeMSP430Target() {
  24.     // Register the target.
  25. >   RegisterTargetMachine<MSP430TargetMachine> X(getTheMSP430Target());
  26.   }
  27.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/SwiftCallingConv.cpp:27: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression n` of type unsigned int at line 27, column 10.
  25.   
  26.   static bool isPowerOf2(unsigned n) {
  27. >   return n == (n & -n);
  28.   }
  29.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp:31: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::BPFTargetMachine>*) is never used.
  29.   extern "C" void LLVMInitializeBPFTarget() {
  30.     // Register the target.
  31. >   RegisterTargetMachine<BPFTargetMachine> X(getTheBPFleTarget());
  32.     RegisterTargetMachine<BPFTargetMachine> Y(getTheBPFbeTarget());
  33.     RegisterTargetMachine<BPFTargetMachine> Z(getTheBPFTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp:32: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::BPFTargetMachine>*) is never used.
  30.     // Register the target.
  31.     RegisterTargetMachine<BPFTargetMachine> X(getTheBPFleTarget());
  32. >   RegisterTargetMachine<BPFTargetMachine> Y(getTheBPFbeTarget());
  33.     RegisterTargetMachine<BPFTargetMachine> Z(getTheBPFTarget());
  34.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp:33: error: DEAD_STORE
  The value written to &Z (type llvm::RegisterTargetMachine<llvm::BPFTargetMachine>*) is never used.
  31.     RegisterTargetMachine<BPFTargetMachine> X(getTheBPFleTarget());
  32.     RegisterTargetMachine<BPFTargetMachine> Y(getTheBPFbeTarget());
  33. >   RegisterTargetMachine<BPFTargetMachine> Z(getTheBPFTarget());
  34.   
  35.     PassRegistry &PR = *PassRegistry::getPassRegistry();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodePadder.cpp:41: error: NULL_DEREFERENCE
  pointer `returned by getCurrentFragment` could be null and is dereferenced at line 41, column 3.
  39.   
  40.     bool InsertionPoint = basicBlockRequiresInsertionPoint(Context);
  41. >   assert((!InsertionPoint ||
  42.             OS->getCurrentFragment()->getKind() != MCFragment::FT_Align) &&
  43.            "Cannot insert padding nops right after an alignment fragment as it "

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXInstrInfo.cpp:68: error: UNINITIALIZED_VALUE
  The value read from Op was never initialized.
  66.       llvm_unreachable("Bad register copy");
  67.     }
  68. >   BuildMI(MBB, I, DL, get(Op), DestReg)
  69.         .addReg(SrcReg, getKillRegState(KillSrc));
  70.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp:34: error: DEAD_STORE
  The value written to &registered_target (type llvm::RegisterTargetMachine<llvm::LanaiTargetMachine>*) is never used.
  32.   extern "C" void LLVMInitializeLanaiTarget() {
  33.     // Register the target.
  34. >   RegisterTargetMachine<LanaiTargetMachine> registered_target(
  35.         getTheLanaiTarget());
  36.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp:38: error: DEAD_STORE
  The value written to &AddrSpc (type unsigned int) is never used.
  36.   
  37.     llvm::LLVMContext& Ctx = CGM.getLLVMContext();
  38. >   uint32_t AddrSpc = CGM.getContext().getTargetAddressSpace(
  39.         CGM.getContext().getOpenCLTypeAddrSpace(T));
  40.     switch (cast<BuiltinType>(T)->getKind()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp:37: error: DEAD_STORE
  The value written to &Ctx (type llvm::LLVMContext&) is never used.
  35.            "Not an OpenCL specific type!");
  36.   
  37. >   llvm::LLVMContext& Ctx = CGM.getLLVMContext();
  38.     uint32_t AddrSpc = CGM.getContext().getTargetAddressSpace(
  39.         CGM.getContext().getOpenCLTypeAddrSpace(T));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/IntervalPartition.cpp:35: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 35, column 5 and is dereferenced or freed at line 35, column 5.
  33.   void IntervalPartition::releaseMemory() {
  34.     for (unsigned i = 0, e = Intervals.size(); i != e; ++i)
  35. >     delete Intervals[i];
  36.     IntervalMap.clear();
  37.     Intervals.clear();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenTypes.cpp:43: error: USE_AFTER_FREE
  pointer `returned by operator*` was freed by call to `delete()` at line 43, column 5 and is dereferenced or freed at line 43, column 5.
  41.     for (llvm::FoldingSet<CGFunctionInfo>::iterator
  42.          I = FunctionInfos.begin(), E = FunctionInfos.end(); I != E; )
  43. >     delete &*I++;
  44.   }
  45.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp:45: error: DEAD_STORE
  The value written to &IsAndroid (type _Bool) is never used.
  43.     llvm::Triple::EnvironmentType TargetEnvironment =
  44.         TargetTriple.getEnvironment();
  45. >   bool IsAndroid = TargetTriple.isAndroid();
  46.     bool IsMipsR6 = TargetTriple.getSubArch() == llvm::Triple::MipsSubArch_r6;
  47.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp:46: error: DEAD_STORE
  The value written to &IsMipsR6 (type _Bool) is never used.
  44.         TargetTriple.getEnvironment();
  45.     bool IsAndroid = TargetTriple.isAndroid();
  46. >   bool IsMipsR6 = TargetTriple.getSubArch() == llvm::Triple::MipsSubArch_r6;
  47.   
  48.     // For most architectures, just use whatever we have rather than trying to be

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp:43: error: DEAD_STORE
  The value written to &TargetEnvironment (type int) is never used.
  41.                                         const llvm::Triple &TargetTriple,
  42.                                         StringRef SysRoot) {
  43. >   llvm::Triple::EnvironmentType TargetEnvironment =
  44.         TargetTriple.getEnvironment();
  45.     bool IsAndroid = TargetTriple.isAndroid();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Option/Arg.cpp:43: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete[]()` at line 43, column 7 and is dereferenced or freed at line 43, column 7.
  41.     if (OwnsValues) {
  42.       for (unsigned i = 0, e = Values.size(); i != e; ++i)
  43. >       delete[] Values[i];
  44.     }
  45.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430FrameLowering.cpp:63: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression NumBytes` of type unsigned long long at line 63, column 5.
  61.       // guaranteed to be the last slot by processFunctionBeforeFrameFinalized.
  62.       // Update the frame offset adjustment.
  63. >     MFI.setOffsetAdjustment(-NumBytes);
  64.   
  65.       // Save FP into the appropriate stack slot...

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/UnreachableBlockElim.cpp:46: error: DEAD_STORE
  The value written to &BB (type llvm::BasicBlock*) is never used.
  44.   
  45.     // Mark all reachable blocks.
  46. >   for (BasicBlock *BB : depth_first_ext(&F, Reachable))
  47.       (void)BB/* Mark all reachable blocks */;
  48.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Dominators.cpp:45: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 43 could be null and is dereferenced at line 45, column 32.
  43.     const Instruction *TI = Start->getTerminator();
  44.     unsigned NumEdgesToEnd = 0;
  45. >   for (unsigned int i = 0, n = TI->getNumSuccessors(); i < n; ++i) {
  46.       if (TI->getSuccessor(i) == End)
  47.         ++NumEdgesToEnd;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.cpp:75: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Ctx` was dereferenced at line 74 and is tested for null at line 75, column 8.
  73.     // Set up the MCContext for creating symbols and MCExpr's.
  74.     MCContext *Ctx = new MCContext(MAI, MRI, nullptr);
  75. >   if (!Ctx)
  76.       return nullptr;
  77.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFInstrInfo.cpp:78: error: UNINITIALIZED_VALUE
  The value read from LdOpc was never initialized.
  76.     unsigned IterationNum = CopyLen >> Log2_64(Alignment);
  77.     for(unsigned I = 0; I < IterationNum; ++I) {
  78. >     BuildMI(*BB, MI, dl, get(LdOpc))
  79.               .addReg(ScratchReg, RegState::Define).addReg(SrcReg)
  80.               .addImm(I * Alignment);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFInstrInfo.cpp:81: error: UNINITIALIZED_VALUE
  The value read from StOpc was never initialized.
  79.               .addReg(ScratchReg, RegState::Define).addReg(SrcReg)
  80.               .addImm(I * Alignment);
  81. >     BuildMI(*BB, MI, dl, get(StOpc))
  82.               .addReg(ScratchReg, RegState::Kill).addReg(DstReg)
  83.               .addImm(I * Alignment);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:50: error: DEAD_STORE
  The value written to &A (type llvm::RegisterTargetMachine<llvm::MipsebTargetMachine>*) is never used.
  48.     RegisterTargetMachine<MipsebTargetMachine> X(getTheMipsTarget());
  49.     RegisterTargetMachine<MipselTargetMachine> Y(getTheMipselTarget());
  50. >   RegisterTargetMachine<MipsebTargetMachine> A(getTheMips64Target());
  51.     RegisterTargetMachine<MipselTargetMachine> B(getTheMips64elTarget());
  52.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:51: error: DEAD_STORE
  The value written to &B (type llvm::RegisterTargetMachine<llvm::MipselTargetMachine>*) is never used.
  49.     RegisterTargetMachine<MipselTargetMachine> Y(getTheMipselTarget());
  50.     RegisterTargetMachine<MipsebTargetMachine> A(getTheMips64Target());
  51. >   RegisterTargetMachine<MipselTargetMachine> B(getTheMips64elTarget());
  52.   
  53.     PassRegistry *PR = PassRegistry::getPassRegistry();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:48: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::MipsebTargetMachine>*) is never used.
  46.   extern "C" void LLVMInitializeMipsTarget() {
  47.     // Register the target.
  48. >   RegisterTargetMachine<MipsebTargetMachine> X(getTheMipsTarget());
  49.     RegisterTargetMachine<MipselTargetMachine> Y(getTheMipselTarget());
  50.     RegisterTargetMachine<MipsebTargetMachine> A(getTheMips64Target());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:49: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::MipselTargetMachine>*) is never used.
  47.     // Register the target.
  48.     RegisterTargetMachine<MipsebTargetMachine> X(getTheMipsTarget());
  49. >   RegisterTargetMachine<MipselTargetMachine> Y(getTheMipselTarget());
  50.     RegisterTargetMachine<MipsebTargetMachine> A(getTheMips64Target());
  51.     RegisterTargetMachine<MipselTargetMachine> B(getTheMips64elTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp:48: error: DEAD_STORE
  The value written to &Mode (type unsigned int) is never used.
  46.   
  47.     Status(unsigned Mask, unsigned Mode) : Mask(Mask), Mode(Mode) {
  48. >     Mode &= Mask;
  49.     };
  50.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXImageOptimizer.cpp:63: error: DEAD_STORE
  The value written to &Instr (type llvm::Instruction&) is never used.
  61.       for (BasicBlock::iterator I = (*BI).begin(), E = (*BI).end();
  62.            I != E; ++I) {
  63. >       Instruction &Instr = *I;
  64.         if (CallInst *CI = dyn_cast<CallInst>(I)) {
  65.           Function *CalledF = CI->getCalledFunction();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp:66: error: MEMORY_LEAK
  `DV` is not reachable after line 66, column 3.
  64.     release(DVRef);
  65.     DVRef = DV;
  66. >   return DV;
  67.   }
  68.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SafeStackLayout.cpp:105: error: DEAD_STORE
  The value written to &LastRegionEnd (type unsigned int) is never used.
  103.                         << End << ", range " << Obj.Range << "\n");
  104.       Regions.emplace_back(LastRegionEnd, End, Obj.Range);
  105. >     LastRegionEnd = End;
  106.     }
  107.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LatencyPriorityQueue.cpp:64: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `OnlyAvailablePred` was dereferenced at line 61 and is tested for null at line 64, column 11.
  62.         // We found an available, but not scheduled, predecessor.  If it's the
  63.         // only one we have found, keep track of it... otherwise give up.
  64. >       if (OnlyAvailablePred && OnlyAvailablePred != &Pred)
  65.           return nullptr;
  66.         OnlyAvailablePred = &Pred;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/ConstantRange.cpp:61: error: DEAD_STORE
  The value written to &W (type unsigned int) is never used.
  59.       return CR;
  60.   
  61. >   uint32_t W = CR.getBitWidth();
  62.     switch (Pred) {
  63.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp:72: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 71 could be null and is dereferenced at line 72, column 15.
  70.           if (MI.getOperand(i - 1).isReg()) {
  71.             MachineInstr *DefMI = MRI->getVRegDef(MI.getOperand(i - 1).getReg());
  72. >           if (DefMI->getParent() == NewMBB ||
  73.                 !OrigMBB->isSuccessor(Successor)) {
  74.               MO.setMBB(NewMBB);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/CallGraph.cpp:65: error: NULL_DEREFERENCE
  pointer `F` could be null and is dereferenced at line 65, column 8.
  63.     // If this function has external linkage or has its address taken, anything
  64.     // could call it.
  65. >   if (!F->hasLocalLinkage() || F->hasAddressTaken())
  66.       ExternalCallingNode->addCalledFunction(CallSite(), Node);
  67.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp:108: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `PrevLPI` was dereferenced at line 111 and is tested for null at line 108, column 26.
  106.       const LandingPadInfo *LPI = *I;
  107.       const std::vector<int> &TypeIds = LPI->TypeIds;
  108. >     unsigned NumShared = PrevLPI ? sharedTypeIDs(LPI, PrevLPI) : 0;
  109.       unsigned SizeSiteActions = 0; // Total size of all entries for a landingpad
  110.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:67: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 4` of type unsigned int at line 67, column 12.
  65.     // around that does use it, and that needs to continue to work.
  66.     if (STI.isDarwinABI())
  67. >     return STI.isPPC64() ? -8U : -4U;
  68.   
  69.     // SVR4 ABI: First slot in the general register save area.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:70: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 4` of type unsigned int at line 70, column 10.
  68.   
  69.     // SVR4 ABI: First slot in the general register save area.
  70. >   return STI.isPPC64() ? -8U : -4U;
  71.   }
  72.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:67: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 8` of type unsigned int at line 67, column 12.
  65.     // around that does use it, and that needs to continue to work.
  66.     if (STI.isDarwinABI())
  67. >     return STI.isPPC64() ? -8U : -4U;
  68.   
  69.     // SVR4 ABI: First slot in the general register save area.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:70: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 8` of type unsigned int at line 70, column 10.
  68.   
  69.     // SVR4 ABI: First slot in the general register save area.
  70. >   return STI.isPPC64() ? -8U : -4U;
  71.   }
  72.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Rewrite/Rewriter.cpp:73: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Size` of type unsigned int at line 73, column 3.
  71.   
  72.     // Add a delta so that future changes are offset correctly.
  73. >   AddReplaceDelta(OrigOffset, -Size);
  74.   
  75.     if (removeLineIfEmpty) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp:63: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::X86TargetMachine>*) is never used.
  61.   extern "C" void LLVMInitializeX86Target() {
  62.     // Register the target.
  63. >   RegisterTargetMachine<X86TargetMachine> X(getTheX86_32Target());
  64.     RegisterTargetMachine<X86TargetMachine> Y(getTheX86_64Target());
  65.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp:64: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::X86TargetMachine>*) is never used.
  62.     // Register the target.
  63.     RegisterTargetMachine<X86TargetMachine> X(getTheX86_32Target());
  64. >   RegisterTargetMachine<X86TargetMachine> Y(getTheX86_64Target());
  65.   
  66.     PassRegistry &PR = *PassRegistry::getPassRegistry();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/MachOUniversal.cpp:68: error: NULL_DEREFERENCE
  pointer `Parent` last accessed on line 64 could be null and is dereferenced at line 68, column 26.
  66.                          "called when Parent is a nullptr");
  67.   
  68. >   StringRef ParentData = Parent->getData();
  69.     StringRef ObjectData;
  70.     uint32_t cputype;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Lanai/LanaiMCInstLower.cpp:89: error: UNINITIALIZED_VALUE
  The value read from Kind was never initialized.
  87.       Expr = MCBinaryExpr::createAdd(
  88.           Expr, MCConstantExpr::create(MO.getOffset(), Ctx), Ctx);
  89. >   Expr = LanaiMCExpr::create(Kind, Expr, Ctx);
  90.     return MCOperand::createExpr(Expr);
  91.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.cpp:71: error: NULL_DEREFERENCE
  pointer `NA.Addr` last assigned on line 70 could be null and is dereferenced at line 71, column 20.
  69.   raw_ostream &operator<< (raw_ostream &OS, const Print<NodeId> &P) {
  70.     auto NA = P.G.addr<NodeBase*>(P.Obj);
  71. >   uint16_t Attrs = NA.Addr->getAttrs();
  72.     uint16_t Kind = NodeAttrs::kind(Attrs);
  73.     uint16_t Flags = NodeAttrs::flags(Attrs);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsRegisterBankInfo.cpp:82: error: DEAD_STORE
  The value written to &OperandsMapping (type llvm::RegisterBankInfo::ValueMapping*) is never used.
  80.   
  81.     unsigned NumOperands = MI.getNumOperands();
  82. >   const ValueMapping *OperandsMapping = &Mips::ValueMappings[Mips::GPRIdx];
  83.   
  84.     switch (Opc) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InsertPrefetch.cpp:73: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Samples` was dereferenced at line 73 and is tested for null at line 73, column 21.
  71.                                           const MachineInstr &MI) {
  72.     if (const auto &Loc = MI.getDebugLoc())
  73. >     if (const auto *Samples = TopSamples->findFunctionSamples(Loc))
  74.         return Samples->findCallTargetMapAt(FunctionSamples::getOffset(Loc),
  75.                                             Loc->getBaseDiscriminator());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/CFG.cpp:75: error: NULL_DEREFERENCE
  pointer `Term` last assigned on line 73 could be null and is dereferenced at line 75, column 16.
  73.     const Instruction *Term = BB->getTerminator();
  74.   #ifndef NDEBUG
  75. >   unsigned e = Term->getNumSuccessors();
  76.   #endif
  77.     for (unsigned i = 0; ; ++i) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/TokenAnnotator.h:74: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 74, column 7 and is dereferenced or freed at line 74, column 7.
  72.     ~AnnotatedLine() {
  73.       for (unsigned i = 0, e = Children.size(); i != e; ++i) {
  74. >       delete Children[i];
  75.       }
  76.       FormatToken *Current = First;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodePadder.cpp:82: error: NULL_DEREFERENCE
  pointer `returned by getCurrentFragment` could be null and is dereferenced at line 82, column 3.
  80.   
  81.     bool InsertionPoint = instructionRequiresInsertionPoint(Inst);
  82. >   assert((!InsertionPoint ||
  83.             OS->getCurrentFragment()->getKind() != MCFragment::FT_Align) &&
  84.            "Cannot insert padding nops right after an alignment fragment as it "

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetMachine.cpp:76: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::NVPTXTargetMachine32>*) is never used.
  74.   extern "C" void LLVMInitializeNVPTXTarget() {
  75.     // Register the target.
  76. >   RegisterTargetMachine<NVPTXTargetMachine32> X(getTheNVPTXTarget32());
  77.     RegisterTargetMachine<NVPTXTargetMachine64> Y(getTheNVPTXTarget64());
  78.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetMachine.cpp:77: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::NVPTXTargetMachine64>*) is never used.
  75.     // Register the target.
  76.     RegisterTargetMachine<NVPTXTargetMachine32> X(getTheNVPTXTarget32());
  77. >   RegisterTargetMachine<NVPTXTargetMachine64> Y(getTheNVPTXTarget64());
  78.   
  79.     // FIXME: This pass is really intended to be invoked during IR optimization,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp:98: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Amount` of type unsigned int at line 98, column 9.
  96.         unsigned Opc = Old.getOpcode();
  97.         if (Opc == ARM::ADJCALLSTACKDOWN || Opc == ARM::tADJCALLSTACKDOWN) {
  98. >         emitSPUpdate(MBB, I, TII, dl, *RegInfo, -Amount);
  99.         } else {
  100.           assert(Opc == ARM::ADJCALLSTACKUP || Opc == ARM::tADJCALLSTACKUP);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp:82: error: NULL_DEREFERENCE
  pointer `DefInsn` last assigned on line 79 could be null and is dereferenced at line 82, column 3.
  80.   
  81.     LLVM_DEBUG(dbgs() << "  Def of Mov Src:");
  82. >   LLVM_DEBUG(DefInsn->dump());
  83.   
  84.     if (!DefInsn)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaStmtAttr.cpp:182: error: UNINITIALIZED_VALUE
  The value read from State was never initialized.
  180.     }
  181.   
  182. >   return LoopHintAttr::CreateImplicit(S.Context, Spelling, Option, State,
  183.                                         ValueExpr, A.getRange());
  184.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp:149: error: DEAD_STORE
  The value written to &FrameIndex (type int) is never used.
  147.             TySize *= CUI->getZExtValue();   // Get total allocated size.
  148.             if (TySize == 0) TySize = 1; // Don't create zero-sized stack objects.
  149. >           int FrameIndex = INT_MAX;
  150.             auto Iter = CatchObjects.find(AI);
  151.             if (Iter != CatchObjects.end() && TLI->needsFixedCatchObjects()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp:83: error: DEAD_STORE
  The value written to &A (type llvm::RegisterTargetMachine<llvm::ARMLETargetMachine>*) is never used.
  81.     // Register the target.
  82.     RegisterTargetMachine<ARMLETargetMachine> X(getTheARMLETarget());
  83. >   RegisterTargetMachine<ARMLETargetMachine> A(getTheThumbLETarget());
  84.     RegisterTargetMachine<ARMBETargetMachine> Y(getTheARMBETarget());
  85.     RegisterTargetMachine<ARMBETargetMachine> B(getTheThumbBETarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp:85: error: DEAD_STORE
  The value written to &B (type llvm::RegisterTargetMachine<llvm::ARMBETargetMachine>*) is never used.
  83.     RegisterTargetMachine<ARMLETargetMachine> A(getTheThumbLETarget());
  84.     RegisterTargetMachine<ARMBETargetMachine> Y(getTheARMBETarget());
  85. >   RegisterTargetMachine<ARMBETargetMachine> B(getTheThumbBETarget());
  86.   
  87.     PassRegistry &Registry = *PassRegistry::getPassRegistry();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp:82: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::ARMLETargetMachine>*) is never used.
  80.   extern "C" void LLVMInitializeARMTarget() {
  81.     // Register the target.
  82. >   RegisterTargetMachine<ARMLETargetMachine> X(getTheARMLETarget());
  83.     RegisterTargetMachine<ARMLETargetMachine> A(getTheThumbLETarget());
  84.     RegisterTargetMachine<ARMBETargetMachine> Y(getTheARMBETarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp:84: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::ARMBETargetMachine>*) is never used.
  82.     RegisterTargetMachine<ARMLETargetMachine> X(getTheARMLETarget());
  83.     RegisterTargetMachine<ARMLETargetMachine> A(getTheThumbLETarget());
  84. >   RegisterTargetMachine<ARMBETargetMachine> Y(getTheARMBETarget());
  85.     RegisterTargetMachine<ARMBETargetMachine> B(getTheThumbBETarget());
  86.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineFrameInfo.cpp:96: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression NumFixedObjects` of type unsigned int at line 96, column 3.
  94.                                /*isSpillSlot=*/false, /*Alloca=*/nullptr,
  95.                                IsAliased));
  96. >   return -++NumFixedObjects;
  97.   }
  98.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:88: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 12` of type unsigned int at line 88, column 16.
  86.     return STI.isPPC64()
  87.                ? -16U
  88. >              : STI.getTargetMachine().isPositionIndependent() ? -12U : -8U;
  89.   }
  90.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:83: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 16` of type unsigned int at line 83, column 12.
  81.   static unsigned computeBasePointerSaveOffset(const PPCSubtarget &STI) {
  82.     if (STI.isDarwinABI())
  83. >     return STI.isPPC64() ? -16U : -8U;
  84.   
  85.     // SVR4 ABI: First slot in the general register save area.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:86: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 16` of type unsigned int at line 86, column 10.
  84.   
  85.     // SVR4 ABI: First slot in the general register save area.
  86. >   return STI.isPPC64()
  87.                ? -16U
  88.                : STI.getTargetMachine().isPositionIndependent() ? -12U : -8U;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:83: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 8` of type unsigned int at line 83, column 12.
  81.   static unsigned computeBasePointerSaveOffset(const PPCSubtarget &STI) {
  82.     if (STI.isDarwinABI())
  83. >     return STI.isPPC64() ? -16U : -8U;
  84.   
  85.     // SVR4 ABI: First slot in the general register save area.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:88: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 8` of type unsigned int at line 88, column 16.
  86.     return STI.isPPC64()
  87.                ? -16U
  88. >              : STI.getTargetMachine().isPositionIndependent() ? -12U : -8U;
  89.   }
  90.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:94: error: NULL_DEREFERENCE
  pointer `SS` could be null and is dereferenced at line 94, column 57.
  92.     // unresolved "typename" type.
  93.     if (CurClass->isDependentContext() && !EnteringContext) {
  94. >     QualType T = Context.getDependentNameType(ETK_None, SS.getScopeRep(), &II);
  95.       return ParsedType::make(T);
  96.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/MachOUniversal.cpp:89: error: NULL_DEREFERENCE
  pointer `Parent` last accessed on line 85 could be null and is dereferenced at line 89, column 26.
  87.                          "called when Parent is a nullptr");
  88.   
  89. >   StringRef ParentData = Parent->getData();
  90.     StringRef ObjectData;
  91.     if (Parent->getMagic() == MachO::FAT_MAGIC)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/DemandedBits.cpp:89: error: DEAD_STORE
  The value written to &BitWidth (type unsigned int) is never used.
  87.       const APInt &AOut, APInt &AB, KnownBits &Known, KnownBits &Known2,
  88.       bool &KnownBitsComputed) {
  89. >   unsigned BitWidth = AB.getBitWidth();
  90.   
  91.     // We're called once per operand, but for some instructions, we need to

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIFixupVectorISel.cpp:98: error: NULL_DEREFERENCE
  pointer `DefInst` last assigned on line 97 could be null and is dereferenced at line 98, column 13.
  96.         continue;
  97.       MachineInstr *DefInst = MRI.getUniqueVRegDef(WOp->getReg());
  98. >     switch (DefInst->getOpcode()) {
  99.       default:
  100.         continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/Combiner.cpp:103: error: DEAD_STORE
  The value written to &MORE (type llvm::MachineOptimizationRemarkEmitter*) is never used.
  101.     LLVM_DEBUG(dbgs() << "Generic MI Combiner for: " << MF.getName() << '\n');
  102.   
  103. >   MachineOptimizationRemarkEmitter MORE(MF, /*MBFI=*/nullptr);
  104.   
  105.     bool MFChanged = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/MLxExpansionPass.cpp:96: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 94 could be null and is dereferenced at line 96, column 9.
  94.     MachineInstr *DefMI = MRI->getVRegDef(Reg);
  95.     while (true) {
  96. >     if (DefMI->getParent() != MBB)
  97.         break;
  98.       if (DefMI->isCopyLike()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineLoopInfo.cpp:101: error: NULL_DEREFERENCE
  pointer `returned by getTerminator` could be null and is dereferenced at line 101, column 14.
  99.     if (MachineBasicBlock *HeadMBB = getHeader())
  100.       if (const BasicBlock *HeadBB = HeadMBB->getBasicBlock())
  101. >       return HeadBB->getTerminator()->getDebugLoc();
  102.   
  103.     return DebugLoc();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineLoopInfo.cpp:94: error: NULL_DEREFERENCE
  pointer `returned by getTerminator` could be null and is dereferenced at line 94, column 25.
  92.     if (MachineBasicBlock *PHeadMBB = getLoopPreheader())
  93.       if (const BasicBlock *PHeadBB = PHeadMBB->getBasicBlock())
  94. >       if (DebugLoc DL = PHeadBB->getTerminator()->getDebugLoc())
  95.           return DL;
  96.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430InstrInfo.cpp:102: error: UNINITIALIZED_VALUE
  The value read from Opc was never initialized.
  100.       llvm_unreachable("Impossible reg-to-reg copy");
  101.   
  102. >   BuildMI(MBB, I, DL, get(Opc), DestReg)
  103.       .addReg(SrcReg, getKillRegState(KillSrc));
  104.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineBlockFrequencyInfo.cpp:93: error: NULL_DEREFERENCE
  pointer `returned by getFunction` could be null and is dereferenced at line 93, column 13.
  91.   
  92.     static NodeRef getEntryNode(const MachineBlockFrequencyInfo *G) {
  93. >     return &G->getFunction()->front();
  94.     }
  95.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp:103: error: NULL_DEREFERENCE
  pointer `BBL` last assigned on line 99 could be null and is dereferenced at line 103, column 13.
  101.         BBL = BBL->getParentLoop();
  102.       if (BBL == &L)
  103. >       BBL = BBL->getParentLoop();
  104.       if (!BBL)
  105.         continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp:97: error: DEAD_STORE
  The value written to &A (type llvm::RegisterTargetMachine<llvm::PPCTargetMachine>*) is never used.
  95.   extern "C" void LLVMInitializePowerPCTarget() {
  96.     // Register the targets
  97. >   RegisterTargetMachine<PPCTargetMachine> A(getThePPC32Target());
  98.     RegisterTargetMachine<PPCTargetMachine> B(getThePPC64Target());
  99.     RegisterTargetMachine<PPCTargetMachine> C(getThePPC64LETarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp:98: error: DEAD_STORE
  The value written to &B (type llvm::RegisterTargetMachine<llvm::PPCTargetMachine>*) is never used.
  96.     // Register the targets
  97.     RegisterTargetMachine<PPCTargetMachine> A(getThePPC32Target());
  98. >   RegisterTargetMachine<PPCTargetMachine> B(getThePPC64Target());
  99.     RegisterTargetMachine<PPCTargetMachine> C(getThePPC64LETarget());
  100.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp:99: error: DEAD_STORE
  The value written to &C (type llvm::RegisterTargetMachine<llvm::PPCTargetMachine>*) is never used.
  97.     RegisterTargetMachine<PPCTargetMachine> A(getThePPC32Target());
  98.     RegisterTargetMachine<PPCTargetMachine> B(getThePPC64Target());
  99. >   RegisterTargetMachine<PPCTargetMachine> C(getThePPC64LETarget());
  100.   
  101.     PassRegistry &PR = *PassRegistry::getPassRegistry();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp:175: error: UNINITIALIZED_VALUE
  The value read from n4 was never initialized.
  173.           break;
  174.         // Change n3 to the next blank space after colon + integer pair.
  175. >       n3 = n4;
  176.       }
  177.     } else {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp:136: error: UNINITIALIZED_VALUE
  The value read from c was never initialized.
  134.       *i += begin-original_begin;
  135.   
  136. >     if (!llvm::sys::locale::isPrint(c)) {
  137.         // If next character is valid UTF-8, but not printable
  138.         SmallString<16> expandedCP("<U+>");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonMCInstLower.cpp:114: error: DEAD_STORE
  The value written to &MCO (type llvm::MCOperand*) is never used.
  112.     for (unsigned i = 0, e = MI->getNumOperands(); i < e; i++) {
  113.       const MachineOperand &MO = MI->getOperand(i);
  114. >     MCOperand MCO;
  115.       bool MustExtend = MO.getTargetFlags() & HexagonII::HMOTF_ConstExtended;
  116.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonMCInstLower.cpp:115: error: DEAD_STORE
  The value written to &MustExtend (type _Bool) is never used.
  113.       const MachineOperand &MO = MI->getOperand(i);
  114.       MCOperand MCO;
  115. >     bool MustExtend = MO.getTargetFlags() & HexagonII::HMOTF_ConstExtended;
  116.   
  117.       switch (MO.getType()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineFrameInfo.cpp:108: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression NumFixedObjects` of type unsigned int at line 108, column 3.
  106.                                /*IsSpillSlot=*/true, /*Alloca=*/nullptr,
  107.                                /*IsAliased=*/false));
  108. >   return -++NumFixedObjects;
  109.   }
  110.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodeView.cpp:121: error: NULL_DEREFERENCE
  pointer `Info` last assigned on line 123 could be null and is dereferenced at line 121, column 10.
  119.     // Walk up the call chain adding this function id to the InlinedAtMap of all
  120.     // transitive callers until we hit a real function.
  121. >   while (Info->isInlinedCallSite()) {
  122.       InlinedAt = Info->InlinedAt;
  123.       Info = getCVFunctionInfo(Info->getParentFuncId());

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/AffectedRangeManager.cpp:134: error: NULL_DEREFERENCE
  pointer `Line->First` last accessed on line 119 could be null and is dereferenced at line 134, column 20.
  132.     // affected line?
  133.     bool LineMoved = PreviousLine && PreviousLine->Affected &&
  134. >                    Line->First->NewlinesBefore == 0;
  135.   
  136.     bool IsContinuedComment =

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/AffectedRangeManager.cpp:137: error: NULL_DEREFERENCE
  pointer `Line->First` last accessed on line 119 could be null and is dereferenced at line 137, column 7.
  135.   
  136.     bool IsContinuedComment =
  137. >       Line->First->is(tok::comment) && Line->First->Next == nullptr &&
  138.         Line->First->NewlinesBefore < 2 && PreviousLine &&
  139.         PreviousLine->Affected && PreviousLine->Last->is(tok::comment);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineBlockFrequencyInfo.cpp:103: error: NULL_DEREFERENCE
  pointer `returned by getFunction` could be null and is dereferenced at line 103, column 27.
  101.   
  102.     static nodes_iterator nodes_begin(const MachineBlockFrequencyInfo *G) {
  103. >     return nodes_iterator(G->getFunction()->begin());
  104.     }
  105.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BlockFrequencyInfo.cpp:104: error: NULL_DEREFERENCE
  pointer `returned by getFunction` could be null and is dereferenced at line 104, column 13.
  102.   
  103.     static NodeRef getEntryNode(const BlockFrequencyInfo *G) {
  104. >     return &G->getFunction()->front();
  105.     }
  106.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXPeephole.cpp:112: error: NULL_DEREFERENCE
  pointer `Prev` last assigned on line 109 could be null and is dereferenced at line 112, column 48.
  110.   
  111.     MachineInstrBuilder MIB =
  112. >       BuildMI(MF, Root.getDebugLoc(), TII->get(Prev.getOpcode()),
  113.                 Root.getOperand(0).getReg())
  114.             .addReg(NVPTX::VRFrameLocal)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineLoopInfo.cpp:131: error: NULL_DEREFERENCE
  pointer `Preheader` last assigned on line 119 could be null and is dereferenced at line 131, column 31.
  129.     // Check if the preheader candidate is a successor of any other loop
  130.     // headers. We want to avoid having two loop setups in the same block.
  131. >   for (MachineBasicBlock *S : Preheader->successors()) {
  132.       if (S == HB)
  133.         continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineBlockFrequencyInfo.cpp:107: error: NULL_DEREFERENCE
  pointer `returned by getFunction` could be null and is dereferenced at line 107, column 27.
  105.   
  106.     static nodes_iterator nodes_end(const MachineBlockFrequencyInfo *G) {
  107. >     return nodes_iterator(G->getFunction()->end());
  108.     }
  109.   };

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:116: error: DEAD_STORE
  The value written to &RB (type clang::RewriteBuffer&) is never used.
  114.     assert (C <= FileEnd);
  115.   
  116. >   RewriteBuffer &RB = R.getEditBuffer(FID);
  117.   
  118.     unsigned ColNo = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp:132: error: NULL_DEREFERENCE
  pointer `OpRC` last assigned on line 125 could be null and is dereferenced at line 132, column 8.
  130.     for (MachineOperand &CurrMO : MI->operands()) {
  131.       if (!CurrMO.isReg() || CurrMO.isDef() || CurrMO.isUndef() ||
  132. >       !OpRC->contains(CurrMO.getReg()))
  133.         continue;
  134.       // We found a true dependency - replace the undef register with the true

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFLiveness.cpp:127: error: NULL_DEREFERENCE
  pointer `SNA.Addr` last assigned on line 126 could be null and is dereferenced at line 127, column 19.
  125.     NodeId Start = RefA.Id;
  126.     auto SNA = DFG.addr<RefNode*>(Start);
  127. >   if (NodeId RD = SNA.Addr->getReachingDef())
  128.       DefQ.insert(RD);
  129.     if (TopShadows) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFLiveness.cpp:143: error: NULL_DEREFERENCE
  pointer `TA.Addr` last assigned on line 142 could be null and is dereferenced at line 143, column 9.
  141.     for (unsigned i = 0; i < DefQ.size(); ++i) {
  142.       auto TA = DFG.addr<DefNode*>(DefQ[i]);
  143. >     if (TA.Addr->getFlags() & NodeAttrs::PhiRef)
  144.         continue;
  145.       // Stop at the covering/overwriting def of the initial register reference.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp:108: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::XCoreTargetMachine>*) is never used.
  106.   // Force static initialization.
  107.   extern "C" void LLVMInitializeXCoreTarget() {
  108. >   RegisterTargetMachine<XCoreTargetMachine> X(getTheXCoreTarget());
  109.   }
  110.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:111: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 111, column 5 and is dereferenced or freed at line 111, column 5.
  109.     // Free the live intervals themselves.
  110.     for (unsigned i = 0, e = VirtRegIntervals.size(); i != e; ++i)
  111. >     delete VirtRegIntervals[TargetRegisterInfo::index2VirtReg(i)];
  112.     VirtRegIntervals.clear();
  113.     RegMaskSlots.clear();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp:156: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression (NumBytes-ArgRegsSaveSize)` of type unsigned int at line 156, column 7.
  154.     if (!AFI->hasStackFrame()) {
  155.       if (NumBytes - ArgRegsSaveSize != 0) {
  156. >       emitSPUpdate(MBB, MBBI, TII, dl, *RegInfo, -(NumBytes - ArgRegsSaveSize),
  157.                      MachineInstr::FrameSetup);
  158.         CFAOffset -= NumBytes - ArgRegsSaveSize;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp:144: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression ArgRegsSaveSize` of type unsigned int at line 144, column 5.
  142.   
  143.     if (ArgRegsSaveSize) {
  144. >     emitSPUpdate(MBB, MBBI, TII, dl, *RegInfo, -ArgRegsSaveSize,
  145.                    MachineInstr::FrameSetup);
  146.       CFAOffset -= ArgRegsSaveSize;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp:190: error: NULL_DEREFERENCE
  pointer `SFC` last assigned on line 189 could be null and is dereferenced at line 190, column 47.
  188.         // top frame of the analysis.
  189.         const StackFrameContext *SFC = LCtx->getStackFrame();
  190. >       if (const LocationContext *CallerLCtx = SFC->getParent()) {
  191.           auto RTC = (*SFC->getCallSiteBlock())[SFC->getIndex()]
  192.                          .getAs<CFGCXXRecordTypedCall>();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BlockFrequencyInfo.cpp:114: error: NULL_DEREFERENCE
  pointer `returned by getFunction` could be null and is dereferenced at line 114, column 27.
  112.   
  113.     static nodes_iterator nodes_begin(const BlockFrequencyInfo *G) {
  114. >     return nodes_iterator(G->getFunction()->begin());
  115.     }
  116.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Edit/Commit.cpp:127: error: UNINITIALIZED_VALUE
  The value read from Len was never initialized.
  125.     }
  126.   
  127. >   addRemove(range.getBegin(), Offs, Len);
  128.     addInsert(range.getBegin(), Offs, text, false);
  129.     return true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp:120: error: NULL_DEREFERENCE
  pointer `RegOp` last assigned on line 118 could be null and is dereferenced at line 120, column 10.
  118.     const MachineOperand *RegOp = TII->getNamedOperand(RegInstr,
  119.                                                        AMDGPU::OpName::simm16);
  120. >   return RegOp->getImm() & AMDGPU::Hwreg::ID_MASK_;
  121.   }
  122.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/ARCMigrate/TransGCAttrs.cpp:138: error: NULL_DEREFERENCE
  pointer `D` could be null and is dereferenced at line 138, column 36.
  136.       }
  137.   
  138. >     return isMigratable(cast<Decl>(D->getDeclContext()));
  139.     }
  140.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BlockFrequencyInfo.cpp:118: error: NULL_DEREFERENCE
  pointer `returned by getFunction` could be null and is dereferenced at line 118, column 27.
  116.   
  117.     static nodes_iterator nodes_end(const BlockFrequencyInfo *G) {
  118. >     return nodes_iterator(G->getFunction()->end());
  119.     }
  120.   };

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/Targets.cpp:120: error: DEAD_STORE
  The value written to &os (type int) is never used.
  118.   TargetInfo *AllocateTarget(const llvm::Triple &Triple,
  119.                              const TargetOptions &Opts) {
  120. >   llvm::Triple::OSType os = Triple.getOS();
  121.   
  122.     switch (Triple.getArch()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp:152: error: DEAD_STORE
  The value written to &InstrCount (type unsigned int) is never used.
  150.             emitInstrCountChangedRemark(P, M, Delta, InstrCount,
  151.                                         FunctionToInstrCount);
  152. >           InstrCount = SCCCount;
  153.           }
  154.         }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp:150: error: UNINITIALIZED_VALUE
  The value read from InstrCount was never initialized.
  148.             int64_t Delta =
  149.                 static_cast<int64_t>(SCCCount) - static_cast<int64_t>(InstrCount);
  150. >           emitInstrCountChangedRemark(P, M, Delta, InstrCount,
  151.                                         FunctionToInstrCount);
  152.             InstrCount = SCCCount;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86Subtarget.cpp:144: error: NULL_DEREFERENCE
  pointer `GV` could be null and is dereferenced at line 144, column 9.
  142.   
  143.     if (isTargetCOFF()) {
  144. >     if (GV->hasDLLImportStorageClass())
  145.         return X86II::MO_DLLIMPORT;
  146.       return X86II::MO_COFFSTUB;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/PseudoLoweringEmitter.cpp:134: error: NULL_DEREFERENCE
  pointer `OpDef` last assigned on line 130 could be null and is dereferenced at line 134, column 22.
  132.       PrintFatalError(Rec->getLoc(), Rec->getName() +
  133.                     " has unexpected operator type!");
  134. >   Record *Operator = OpDef->getDef();
  135.     if (!Operator->isSubClassOf("Instruction"))
  136.       PrintFatalError(Rec->getLoc(), "Pseudo result '" + Operator->getName() +

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp:146: error: NULL_DEREFERENCE
  pointer `returned by getTargetStreamer` could be null and is dereferenced at line 146, column 5.
  144.     // HSA emits NT_AMDGPU_HSA_CODE_OBJECT_VERSION for code objects v2.
  145.     if (TM.getTargetTriple().getOS() == Triple::AMDHSA)
  146. >     getTargetStreamer()->EmitDirectiveHSACodeObjectVersion(2, 1);
  147.   
  148.     // HSA and PAL emit NT_AMDGPU_HSA_ISA for code objects v2.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/ModuleMap.cpp:141: error: MEMORY_LEAK
  `Context` is not reachable after line 141, column 11.
  139.       Module *Sub = lookupModuleQualified(Id[I].first, Context);
  140.       if (!Sub) {
  141. >       if (Complain)
  142.           Diags.Report(Id[I].second, diag::err_mmap_missing_module_qualified)
  143.           << Id[I].first << Context->getFullModuleName()

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/ModuleMap.cpp:132: error: NULL_DEREFERENCE
  pointer `Mod` could be null and is dereferenced at line 132, column 25.
  130.       if (Complain)
  131.         Diags.Report(Id[0].second, diag::err_mmap_missing_module_unqualified)
  132. >       << Id[0].first << Mod->getFullModuleName();
  133.   
  134.       return nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/HeaderSearch.cpp:130: error: NULL_DEREFERENCE
  pointer `ModuleMap` last assigned on line 128 could be null and is dereferenced at line 130, column 48.
  128.     const FileEntry *ModuleMap =
  129.         getModuleMap().getModuleMapFileForUniquing(Module);
  130. >   return getCachedModuleFileName(Module->Name, ModuleMap->getName());
  131.   }
  132.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/MemoryLocation.cpp:136: error: DEAD_STORE
  The value written to &DL (type llvm::DataLayout const &) is never used.
  134.     // We may be able to produce an exact size for known intrinsics.
  135.     if (const IntrinsicInst *II = dyn_cast<IntrinsicInst>(Call)) {
  136. >     const DataLayout &DL = II->getModule()->getDataLayout();
  137.   
  138.       switch (II->getIntrinsicID()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitDouble.cpp:129: error: STATIC_INITIALIZATION_ORDER_FIASCO
  Initializer of anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Hexagon_HexagonSplitDouble.cpp::HexagonSplitDoubleRegs::DoubleRC accesses global variable from a different translation unit: llvm::Hexagon::DoubleRegsRegClass|.
  127.   char HexagonSplitDoubleRegs::ID;
  128.   int HexagonSplitDoubleRegs::Counter = 0;
  129. > const TargetRegisterClass *const HexagonSplitDoubleRegs::DoubleRC =
  130.       &Hexagon::DoubleRegsRegClass;
  131.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/UnreachableBlockElim.cpp:141: error: DEAD_STORE
  The value written to &BB (type llvm::MachineBasicBlock*) is never used.
  139.   
  140.     // Mark all reachable blocks.
  141. >   for (MachineBasicBlock *BB : depth_first_ext(&F, Reachable))
  142.       (void)BB/* Mark all reachable blocks */;
  143.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/Lexer.cpp:135: error: NULL_DEREFERENCE
  pointer `PP` could be null and is dereferenced at line 135, column 15.
  133.   Lexer::Lexer(FileID FID, const llvm::MemoryBuffer *InputFile, Preprocessor &PP)
  134.       : PreprocessorLexer(&PP, FID),
  135. >       FileLoc(PP.getSourceManager().getLocForStartOfFile(FID)),
  136.         LangOpts(PP.getLangOpts()) {
  137.     InitLexer(InputFile->getBufferStart(), InputFile->getBufferStart(),

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/Module.cpp:142: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Current` was dereferenced at line 139 and is tested for null at line 142, column 38.
  140.       return true;
  141.   
  142. >   for (const Module *Current = this; Current; Current = Current->Parent) {
  143.       if (Current->ShadowingModule) {
  144.         ShadowingModule = Current->ShadowingModule;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BranchProbabilityInfo.cpp:138: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 137 could be null and is dereferenced at line 138, column 7.
  136.   BranchProbabilityInfo::updatePostDominatedByUnreachable(const BasicBlock *BB) {
  137.     const Instruction *TI = BB->getTerminator();
  138. >   if (TI->getNumSuccessors() == 0) {
  139.       if (isa<UnreachableInst>(TI) ||
  140.           // If this block is terminated by a call to

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaAttr.cpp:160: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `CSec` could be dangling and is dereferenced or freed at line 160, column 5.
  158.   
  159.     if (Action == PragmaClangSectionAction::PCSA_Clear) {
  160. >     CSec->Valid = false;
  161.       return;
  162.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaAttr.cpp:164: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `CSec` could be dangling and is dereferenced or freed at line 164, column 3.
  162.     }
  163.   
  164. >   CSec->Valid = true;
  165.     CSec->SectionName = SecName;
  166.     CSec->PragmaLocation = PragmaLoc;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:148: error: DEAD_STORE
  The value written to &MF (type llvm::MachineFunction&) is never used.
  146.       return nullptr;
  147.   
  148. >   MachineFunction &MF = *MI.getParent()->getParent();
  149.     uint64_t TSFlags = MI.getDesc().TSFlags;
  150.     bool isPre = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp:148: error: DEAD_STORE
  The value written to &IsFlagSetting (type _Bool) is never used.
  146.       return false;
  147.   
  148. >   bool IsFlagSetting = true;
  149.     unsigned MIOpc = MI.getOpcode();
  150.     MachineInstr *NewCmp = nullptr, *NewBr = nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp:149: error: DEAD_STORE
  The value written to &MIOpc (type unsigned int) is never used.
  147.   
  148.     bool IsFlagSetting = true;
  149. >   unsigned MIOpc = MI.getOpcode();
  150.     MachineInstr *NewCmp = nullptr, *NewBr = nullptr;
  151.     switch (DefMI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/MLxExpansionPass.cpp:151: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 148 could be null and is dereferenced at line 151, column 9.
  149.     while (true) {
  150.   outer_continue:
  151. >     if (DefMI->getParent() != MBB)
  152.         break;
  153.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:153: error: DEAD_STORE
  The value written to &AvailableRegs (type llvm::TargetRegisterClass const &) is never used.
  151.       return 0;
  152.   
  153. >   const TargetRegisterClass &AvailableRegs = *TRI->getGPRsForTailCall(*MF);
  154.   
  155.     if (MBBI == MBB.end())

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/Mips16InstrInfo.cpp:147: error: DEAD_STORE
  The value written to &MBB (type llvm::MachineBasicBlock&) is never used.
  145.   
  146.   bool Mips16InstrInfo::expandPostRAPseudo(MachineInstr &MI) const {
  147. >   MachineBasicBlock &MBB = *MI.getParent();
  148.     switch (MI.getDesc().getOpcode()) {
  149.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFAsmPrinter.cpp:149: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_BPF_BPFAsmPrinter.cpp::BPFAsmPrinter>*) is never used.
  147.   // Force static initialization.
  148.   extern "C" void LLVMInitializeBPFAsmPrinter() {
  149. >   RegisterAsmPrinter<BPFAsmPrinter> X(getTheBPFleTarget());
  150.     RegisterAsmPrinter<BPFAsmPrinter> Y(getTheBPFbeTarget());
  151.     RegisterAsmPrinter<BPFAsmPrinter> Z(getTheBPFTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFAsmPrinter.cpp:150: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_BPF_BPFAsmPrinter.cpp::BPFAsmPrinter>*) is never used.
  148.   extern "C" void LLVMInitializeBPFAsmPrinter() {
  149.     RegisterAsmPrinter<BPFAsmPrinter> X(getTheBPFleTarget());
  150. >   RegisterAsmPrinter<BPFAsmPrinter> Y(getTheBPFbeTarget());
  151.     RegisterAsmPrinter<BPFAsmPrinter> Z(getTheBPFTarget());
  152.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFAsmPrinter.cpp:151: error: DEAD_STORE
  The value written to &Z (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_BPF_BPFAsmPrinter.cpp::BPFAsmPrinter>*) is never used.
  149.     RegisterAsmPrinter<BPFAsmPrinter> X(getTheBPFleTarget());
  150.     RegisterAsmPrinter<BPFAsmPrinter> Y(getTheBPFbeTarget());
  151. >   RegisterAsmPrinter<BPFAsmPrinter> Z(getTheBPFTarget());
  152.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp:205: error: DEAD_STORE
  The value written to &HandledScratchWaveOffsetReg (type _Bool) is never used.
  203.       if (!MRI.isPhysRegUsed(Reg) && MRI.isAllocatable(Reg)) {
  204.         if (!HandledScratchWaveOffsetReg) {
  205. >         HandledScratchWaveOffsetReg = true;
  206.   
  207.           MRI.replaceRegWith(ScratchWaveOffsetReg, Reg);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.cpp:356: error: UNINITIALIZED_VALUE
  The value read from insnContext was never initialized.
  354.     }
  355.   
  356. >   return insnContext;
  357.   }
  358.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:163: error: NULL_DEREFERENCE
  pointer `DI` last assigned on line 162 could be null and is dereferenced at line 163, column 3.
  161.       return;
  162.     auto &DI = *CGF->getDebugInfo();
  163. >   DI.EmitInlineFunctionEnd(CGF->Builder);
  164.     DI.EmitLocation(CGF->Builder, SavedLocation);
  165.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp:161: error: DEAD_STORE
  The value written to &X (type llvm::RegisterTargetMachine<llvm::R600TargetMachine>*) is never used.
  159.   extern "C" void LLVMInitializeAMDGPUTarget() {
  160.     // Register the target
  161. >   RegisterTargetMachine<R600TargetMachine> X(getTheAMDGPUTarget());
  162.     RegisterTargetMachine<GCNTargetMachine> Y(getTheGCNTarget());
  163.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp:162: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterTargetMachine<llvm::GCNTargetMachine>*) is never used.
  160.     // Register the target
  161.     RegisterTargetMachine<R600TargetMachine> X(getTheAMDGPUTarget());
  162. >   RegisterTargetMachine<GCNTargetMachine> Y(getTheGCNTarget());
  163.   
  164.     PassRegistry *PR = PassRegistry::getPassRegistry();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/TokenConcatenation.cpp:206: error: DEAD_STORE
  The value written to &FirstChar (type char) is never used.
  204.       // If the token does not need to know the first character, don't get it.
  205.     } else {
  206. >     FirstChar = GetFirstChar(PP, Tok);
  207.     }
  208.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/LoopPass.cpp:231: error: UNINITIALIZED_VALUE
  The value read from InstrCount was never initialized.
  229.               int64_t Delta = static_cast<int64_t>(NewSize) -
  230.                               static_cast<int64_t>(FunctionSize);
  231. >             emitInstrCountChangedRemark(P, M, Delta, InstrCount,
  232.                                           FunctionToInstrCount, &F);
  233.               InstrCount = static_cast<int64_t>(InstrCount) + Delta;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BranchProbabilityInfo.cpp:170: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 169 could be null and is dereferenced at line 170, column 7.
  168.     assert(!PostDominatedByColdCall.count(BB));
  169.     const Instruction *TI = BB->getTerminator();
  170. >   if (TI->getNumSuccessors() == 0)
  171.       return;
  172.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonFixupHwLoops.cpp:192: error: UNINITIALIZED_VALUE
  The value read from newOp was never initialized.
  190.       llvm_unreachable("Invalid Hardware Loop Instruction.");
  191.     }
  192. >   MIB = BuildMI(*MBB, MII, DL, TII->get(newOp));
  193.   
  194.     for (unsigned i = 0; i < MII->getNumOperands(); ++i)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:171: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getFileOffset` of type unsigned int at line 171, column 14.
  169.     SourceLocation getStartOfFileOrMacro(SourceLocation Loc) {
  170.       if (Loc.isMacroID())
  171. >       return Loc.getLocWithOffset(-SM.getFileOffset(Loc));
  172.       return SM.getLocForStartOfFile(SM.getFileID(Loc));
  173.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp:209: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `InvokeUnwindDest` last assigned on line 198 could be dangling and is dereferenced or freed at line 209, column 30.
  207.         FuncInfo.InvokeStateMap[II] = BaseState;
  208.       } else {
  209. >       Instruction *PadInst = InvokeUnwindDest->getFirstNonPHI();
  210.         assert(FuncInfo.EHPadStateMap.count(PadInst) && "EH Pad has no state!");
  211.         FuncInfo.InvokeStateMap[II] = FuncInfo.EHPadStateMap[PadInst];

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp:209: error: NULL_DEREFERENCE
  pointer `InvokeUnwindDest` last assigned on line 198 could be null and is dereferenced at line 209, column 30.
  207.         FuncInfo.InvokeStateMap[II] = BaseState;
  208.       } else {
  209. >       Instruction *PadInst = InvokeUnwindDest->getFirstNonPHI();
  210.         assert(FuncInfo.EHPadStateMap.count(PadInst) && "EH Pad has no state!");
  211.         FuncInfo.InvokeStateMap[II] = FuncInfo.EHPadStateMap[PadInst];

/Users/abisbano/Binaries/llvm/llvm-project/clang/tools/driver/driver.cpp:191: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `End` was dereferenced at line 179 and is tested for null at line 191, column 10.
  189.     while (*S) {
  190.       const char *End = ::strchr(S, ' ');
  191. >     if (!End)
  192.         End = S + strlen(S);
  193.       if (End != S)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp:207: error: DEAD_STORE
  The value written to &SuspendBlock (type llvm::BasicBlock*) is never used.
  205.           CGF.createBasicBlock(Prefix + Twine(".suspend.bool"));
  206.       CGF.Builder.CreateCondBr(SuspendRet, RealSuspendBlock, ReadyBlock);
  207. >     SuspendBlock = RealSuspendBlock;
  208.       CGF.EmitBlock(RealSuspendBlock);
  209.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:204: error: DEAD_STORE
  The value written to &Done (type _Bool) is never used.
  202.       case '$': {
  203.         ++LastEmitted;   // Consume '$' character.
  204. >       bool Done = true;
  205.   
  206.         // Handle escapes.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:183: error: DEAD_STORE
  The value written to &NumOperands (type unsigned int) is never used.
  181.   
  182.     const char *LastEmitted = AsmStr; // One past the last character emitted.
  183. >   unsigned NumOperands = MI->getNumOperands();
  184.   
  185.     while (*LastEmitted) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.cpp:188: error: NULL_DEREFERENCE
  pointer `BA.Addr` last assigned on line 187 could be null and is dereferenced at line 188, column 21.
  186.     for (auto I : Nodes) {
  187.       auto BA = DFG.addr<NodeBase*>(I);
  188. >     uint16_t Type = BA.Addr->getType();
  189.       if (Type == NodeAttrs::Ref) {
  190.         DRNs.push_back(DFG.addr<RefNode*>(I));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp:200: error: NULL_DEREFERENCE
  pointer `MBB` could be null and is dereferenced at line 200, column 58.
  198.       // We want our funclet's entry point to be aligned such that no nops will be
  199.       // present after the label.
  200. >     Asm->EmitAlignment(std::max(Asm->MF->getAlignment(), MBB.getAlignment()),
  201.                          &F);
  202.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp:221: error: NULL_DEREFERENCE
  pointer `PerFn` last assigned on line 215 could be null and is dereferenced by call to `getCFIPersonalitySymbol` at line 221, column 9.
  219.         PerFn = dyn_cast<Function>(F.getPersonalityFn()->stripPointerCasts());
  220.       const MCSymbol *PersHandlerSym =
  221. >         TLOF.getCFIPersonalitySymbol(PerFn, Asm->TM, MMI);
  222.   
  223.       // Do not emit a .seh_handler directives for cleanup funclets.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/TokenLexer.cpp:198: error: NULL_DEREFERENCE
  pointer `VAOPTTokens` last assigned on line 188 could be null and is dereferenced at line 198, column 9.
  196.     for (unsigned int CurTokenIdx = 0; CurTokenIdx != NumVAOptTokens;
  197.          ++CurTokenIdx) {
  198. >     if (VAOPTTokens[CurTokenIdx].is(tok::hashhash)) {
  199.         assert(CurTokenIdx != 0 &&
  200.                "Can not have __VAOPT__ contents begin with a ##");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/DivergenceAnalysis.cpp:184: error: NULL_DEREFERENCE
  pointer `RegionLoop` last accessed on line 184 could be null and is dereferenced at line 184, column 51.
  182.   
  183.   bool DivergenceAnalysis::inRegion(const BasicBlock &BB) const {
  184. >   return (!RegionLoop && BB.getParent() == &F) || RegionLoop->contains(&BB);
  185.   }
  186.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp:187: error: NULL_DEREFERENCE
  pointer `MI` last assigned on line 186 could be null and is dereferenced at line 187, column 7.
  185.                                              const MachineRegisterInfo &MRI) {
  186.     MachineInstr *MI = MRI.getVRegDef(VReg);
  187. >   if (MI->getOpcode() != TargetOpcode::G_CONSTANT)
  188.       return None;
  189.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:189: error: DEAD_STORE
  The value written to &TF (type unsigned int) is never used.
  187.                                    raw_ostream &O) {
  188.     const MachineOperand &MO = MI->getOperand(OpNum);
  189. >   unsigned TF = MO.getTargetFlags();
  190.   
  191.     switch (MO.getType()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp:235: error: NULL_DEREFERENCE
  pointer `MOSymbol` last assigned on line 225 could be null and is dereferenced at line 235, column 28.
  233.         llvm_unreachable("Unknown operand type!");
  234.   
  235. >     StringRef SymbolName = MOSymbol->getName();
  236.       std::string LitaName = ".CONST_" + SymbolName.str();
  237.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430AsmPrinter.cpp:189: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_MSP430_MSP430AsmPrinter.cpp::MSP430AsmPrinter>*) is never used.
  187.   // Force static initialization.
  188.   extern "C" void LLVMInitializeMSP430AsmPrinter() {
  189. >   RegisterAsmPrinter<MSP430AsmPrinter> X(getTheMSP430Target());
  190.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp:198: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `BestRC` was dereferenced at line 198 and is tested for null at line 198, column 32.
  196.     for (const TargetRegisterClass* RC : regclasses()) {
  197.       if ((VT == MVT::Other || isTypeLegalForClass(*RC, VT)) &&
  198. >         RC->contains(reg) && (!BestRC || BestRC->hasSubClass(RC)))
  199.         BestRC = RC;
  200.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:197: error: MEMORY_LEAK
  `leader` is not reachable after line 197, column 12.
  195.       while (l != l->leader)
  196.         l = l->leader;
  197. >     return leader = l;
  198.     }
  199.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h:196: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 196, column 7.
  194.     static bool isSameClassPhysRegCopy(unsigned Opcode) {
  195.       unsigned CopyOpcodes[] =
  196. >       { PPC::OR, PPC::OR8, PPC::FMR, PPC::VOR, PPC::XXLOR, PPC::XXLORf,
  197.           PPC::XSCPSGNDP, PPC::MCRF, PPC::QVFMR, PPC::QVFMRs, PPC::QVFMRb,
  198.           PPC::CROR, PPC::EVOR, -1U };

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:203: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression (((AllocBefore+7)/8)+((BitWidth+7)/8))` of type unsigned long long at line 203, column 5.
  201.       OffsetByte = -(AllocBefore / 8 + 1);
  202.     else
  203. >     OffsetByte = -((AllocBefore + 7) / 8 + (BitWidth + 7) / 8);
  204.     OffsetBit = AllocBefore % 8;
  205.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:201: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression ((AllocBefore/8)+1)` of type unsigned long long at line 201, column 5.
  199.       unsigned BitWidth, int64_t &OffsetByte, uint64_t &OffsetBit) {
  200.     if (BitWidth == 1)
  201. >     OffsetByte = -(AllocBefore / 8 + 1);
  202.     else
  203.       OffsetByte = -((AllocBefore + 7) / 8 + (BitWidth + 7) / 8);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstructionSelector.cpp:203: error: NULL_DEREFERENCE
  pointer `RegBank` last assigned on line 202 could be null and is dereferenced by call to `getRegClass` at line 203, column 10.
  201.                                       MachineRegisterInfo &MRI) const {
  202.     const RegisterBank &RegBank = *RBI.getRegBank(Reg, MRI, TRI);
  203. >   return getRegClass(Ty, RegBank);
  204.   }
  205.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/Loads.cpp:215: error: DEAD_STORE
  The value written to &Base (type llvm::Value*) is never used.
  213.   
  214.     int64_t ByteOffset = 0;
  215. >   Value *Base = V;
  216.     Base = GetPointerBaseWithConstantOffset(V, ByteOffset, DL);
  217.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp:203: error: NULL_DEREFERENCE
  pointer `MI` last assigned on line 202 could be null and is dereferenced at line 203, column 36.
  201.                                          const MachineRegisterInfo &MRI) {
  202.     MachineInstr *MI = MRI.getVRegDef(VReg);
  203. >   if (TargetOpcode::G_FCONSTANT != MI->getOpcode())
  204.       return nullptr;
  205.     return MI->getOperand(1).getFPImm();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp:230: error: DEAD_STORE
  The value written to &Invalid (type _Bool) is never used.
  228.     SourceLocation TemplateKWLoc;
  229.     UnqualifiedId Id;
  230. >   bool Invalid = true;
  231.     ExprResult Result;
  232.     if (Tok.is(tok::kw_this)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86WinAllocaExpander.cpp:272: error: DEAD_STORE
  The value written to &AmountReg (type unsigned int) is never used.
  270.         break;
  271.       if (AmountDef->isCopy() && AmountDef->getOperand(1).isReg())
  272. >       AmountReg = AmountDef->getOperand(1).isReg();
  273.       AmountDef->eraseFromParent();
  274.       break;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Arch/RISCV.cpp:224: error: DEAD_STORE
  The value written to &HasRV64 (type _Bool) is never used.
  222.       }
  223.   
  224. >     bool HasRV64 = MArch.startswith("rv64") ? true : false;
  225.   
  226.       // The canonical order specified in ISA manual.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Arch/RISCV.cpp:309: error: DEAD_STORE
  The value written to &StdExtsItr (type char const *) is never used.
  307.   
  308.         // Move to next char to prevent repeated letter.
  309. >       ++StdExtsItr;
  310.   
  311.         if (std::next(I) != E) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BranchProbabilityInfo.cpp:206: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 204 could be null and is dereferenced at line 206, column 3.
  204.     const Instruction *TI = BB->getTerminator();
  205.     (void) TI;
  206. >   assert(TI->getNumSuccessors() > 1 && "expected more than one successor!");
  207.     assert(!isa<InvokeInst>(TI) &&
  208.            "Invokes should have already been handled by calcInvokeHeuristics");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h:207: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 207, column 9 and is dereferenced or freed at line 207, column 9.
  205.         // delete any children we're about to lose pointers to.
  206.         for (unsigned i = NC, e = Children.size(); i != e; ++i)
  207. >         delete Children[i];
  208.       }
  209.       Children.resize(NC);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp:216: error: NULL_DEREFERENCE
  pointer `returned by getTargetStreamer` could be null and is dereferenced at line 216, column 5.
  214.       amd_kernel_code_t KernelCode;
  215.       getAmdKernelCode(KernelCode, CurrentProgramInfo, *MF);
  216. >     getTargetStreamer()->EmitAMDKernelCodeT(KernelCode);
  217.     }
  218.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Analysis/ThreadSafetyTIL.cpp:215: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Candidate` was dereferenced at line 213 and is tested for null at line 215, column 9.
  213.       if (Pred->BlockID >= BlockID) continue;
  214.       // If we don't yet have a candidate for dominator yet, take this one.
  215. >     if (Candidate == nullptr) {
  216.         Candidate = Pred;
  217.         continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp:211: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 210 could be null and is dereferenced at line 211, column 28.
  209.                                          const MachineRegisterInfo &MRI) {
  210.     auto *DefMI = MRI.getVRegDef(Reg);
  211. >   auto DstTy = MRI.getType(DefMI->getOperand(0).getReg());
  212.     if (!DstTy.isValid())
  213.       return nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMMachineFunctionInfo.h:214: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 214, column 7.
  212.         return I->second;
  213.       else
  214. >       return -1U;
  215.     }
  216.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Option/ArgList.cpp:214: error: USE_AFTER_FREE
  pointer `A` last assigned on line 213 was freed by call to `delete()` at line 214, column 5 and is dereferenced or freed at line 214, column 5.
  212.     // An InputArgList always owns its arguments.
  213.     for (Arg *A : *this)
  214. >     delete A;
  215.   }
  216.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp:228: error: NULL_DEREFERENCE
  pointer `DA.Addr` last assigned on line 228 could be null and is dereferenced at line 228, column 7.
  226.       const auto &ReachingDefs = P.first;
  227.       if (ReachingDefs.size() > 1) {
  228. >       LLVM_DEBUG({
  229.           dbgs() << "*** Multiple Reaching Defs found!!! ***\n";
  230.           for (auto DI : ReachingDefs) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/MLxExpansionPass.cpp:220: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 219 could be null and is dereferenced at line 220, column 31.
  218.   
  219.     MachineInstr *DefMI = getAccDefMI(MI);
  220. >   if (TII->isFpMLxInstruction(DefMI->getOpcode())) {
  221.       // r0 = vmla
  222.       // r3 = vmla r0, r1, r2

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopDataPrefetch.cpp:235: error: UNINITIALIZED_VALUE
  The value read from Metrics.NumInsts was never initialized.
  233.       Metrics.analyzeBasicBlock(BB, *TTI, EphValues);
  234.     }
  235. >   unsigned LoopSize = Metrics.NumInsts;
  236.     if (!LoopSize)
  237.       LoopSize = 1;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsMCInstLower.cpp:245: error: UNINITIALIZED_VALUE
  The value read from Kind was never initialized.
  243.       const MCExpr *Expr =
  244.           MCSymbolRefExpr::create(MI->getOperand(1).getMBB()->getSymbol(), *Ctx);
  245. >     const MipsMCExpr *MipsExpr = MipsMCExpr::create(Kind, Expr, *Ctx);
  246.       OutMI.addOperand(MCOperand::createExpr(MipsExpr));
  247.     } else if (MI->getNumOperands() == 3) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsMCInstLower.cpp:249: error: UNINITIALIZED_VALUE
  The value read from Kind was never initialized.
  247.     } else if (MI->getNumOperands() == 3) {
  248.       // Create %hi($tgt-$baltgt).
  249. >     OutMI.addOperand(createSub(MI->getOperand(1).getMBB(),
  250.                                  MI->getOperand(2).getMBB(), Kind));
  251.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:222: error: DEAD_STORE
  The value written to &TRI (type llvm::PPCRegisterInfo const *) is never used.
  220.     MachineInstr* ToErase = nullptr;
  221.     std::map<MachineInstr *, bool> TOCSaves;
  222. >   const TargetRegisterInfo *TRI = &TII->getRegisterInfo();
  223.     NumFunctionsEnteredInMIPeephole++;
  224.     if (ConvertRegReg) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp:232: error: NULL_DEREFERENCE
  pointer `returned by getTargetStreamer` could be null and is dereferenced at line 232, column 20.
  230.       return;
  231.   
  232. >   auto &Streamer = getTargetStreamer()->getStreamer();
  233.     auto &Context = Streamer.getContext();
  234.     auto &ObjectFileInfo = *Context.getObjectFileInfo();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Frontend/FrontendAction.cpp:278: error: UNINITIALIZED_VALUE
  The value read from LineNo was never initialized.
  276.   
  277.     if (IsModuleMap)
  278. >     CI.getSourceManager().AddLineNote(
  279.           LineNoLoc, LineNo, SourceMgr.getLineTableFilenameID(InputFile), false,
  280.           false, SrcMgr::C_User_ModuleMap);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:237: error: NULL_DEREFERENCE
  .
  235.     for (Function *F : SCCNodes) {
  236.       // Call the callable parameter to look up AA results for this function.
  237. >     AAResults &AAR = AARGetter(*F);
  238.   
  239.       // Non-exact function definitions may not be selected at link time, and an

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/WorkList.cpp:240: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression NumVisited` of type unsigned int at line 240, column 49.
  238.       }
  239.   
  240. >     queue.push(std::make_pair(U, std::make_pair(-NumVisited, ++Counter)));
  241.     }
  242.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/IntrinsicLowering.cpp:241: error: DEAD_STORE
  The value written to &CS (type llvm::CallSite*) is never used.
  239.     assert(Callee && "Cannot lower an indirect call!");
  240.   
  241. >   CallSite CS(CI);
  242.     switch (Callee->getIntrinsicID()) {
  243.     case Intrinsic::not_intrinsic:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/IntrinsicLowering.cpp:236: error: DEAD_STORE
  The value written to &Context (type llvm::LLVMContext&) is never used.
  234.   void IntrinsicLowering::LowerIntrinsicCall(CallInst *CI) {
  235.     IRBuilder<> Builder(CI);
  236. >   LLVMContext &Context = CI->getContext();
  237.   
  238.     const Function *Callee = CI->getCalledFunction();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Analysis/ThreadSafetyTIL.cpp:242: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Candidate` was dereferenced at line 240 and is tested for null at line 242, column 9.
  240.       if (Succ->BlockID <= BlockID) continue;
  241.       // If we don't yet have a candidate for post-dominator yet, take this one.
  242. >     if (Candidate == nullptr) {
  243.         Candidate = Succ;
  244.         continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonNewValueJump.cpp:295: error: NULL_DEREFERENCE
  pointer `def` last assigned on line 294 could be null and is dereferenced at line 295, column 11.
  293.       if (secondReg && !TargetRegisterInfo::isPhysicalRegister(cmpOp2)) {
  294.         MachineInstr *def = MRI.getVRegDef(cmpOp2);
  295. >       if (def->getOpcode() == TargetOpcode::COPY)
  296.           return false;
  297.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:260: error: DEAD_STORE
  The value written to &Val (type llvm::APFloat const &) is never used.
  258.     case MachineOperand::MO_FPImmediate: {
  259.       const ConstantFP *Cnt = MO.getFPImm();
  260. >     const APFloat &Val = Cnt->getValueAPF();
  261.   
  262.       switch (Cnt->getType()->getTypeID()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/LiteralSupport.cpp:260: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 260, column 7.
  258.       for (++I; NumHexDigits != 0; ++I, --NumHexDigits) {
  259.         unsigned Value = llvm::hexDigitValue(*I);
  260. >       assert(Value != -1U);
  261.   
  262.         CodePoint <<= 4;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/CodeGenMapTable.cpp:250: error: NULL_DEREFERENCE
  pointer `RecVal` last assigned on line 245 could be null and is dereferenced at line 250, column 27.
  248.                           RowField->getAsString() + " found in \"" +
  249.                           CurInstr->getName() + "\" instruction description.");
  250. >       Init *CurInstrVal = RecVal->getValue();
  251.         KeyValue.push_back(CurInstrVal);
  252.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Lanai/LanaiAsmPrinter.cpp:241: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Lanai_LanaiAsmPrinter.cpp::LanaiAsmPrinter>*) is never used.
  239.   // Force static initialization.
  240.   extern "C" void LLVMInitializeLanaiAsmPrinter() {
  241. >   RegisterAsmPrinter<LanaiAsmPrinter> X(getTheLanaiTarget());
  242.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp:248: error: DEAD_STORE
  The value written to &FPDiff (type unsigned int) is never used.
  246.     const X86FrameLowering *TFI = getFrameLowering(MF);
  247.   
  248. >   unsigned FPDiff = TFI->hasFP(MF) ? 1 : 0;
  249.     switch (RC->getID()) {
  250.     default:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLambda.cpp:252: error: NULL_DEREFERENCE
  pointer `returned by getCurLambda` could be null and is dereferenced by call to `getGenericLambdaTemplateParameterList()` at line 252, column 26.
  250.     while (!(DC->isFunctionOrMethod() || DC->isRecord() || DC->isFileContext()))
  251.       DC = DC->getParent();
  252. >   bool IsGenericLambda = getGenericLambdaTemplateParameterList(getCurLambda(),
  253.                                                                  *this);
  254.     // Start constructing the lambda class.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmLexer.cpp:253: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `FirstNonDec` was dereferenced at line 250 and is tested for null at line 253, column 12.
  251.         ++LookAhead;
  252.       } else {
  253. >       if (!FirstNonDec)
  254.           FirstNonDec = LookAhead;
  255.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmLexer.cpp:264: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `FirstNonDec` was dereferenced at line 250 and is tested for null at line 264, column 22.
  262.     }
  263.     bool isHex = LexHex && (*LookAhead == 'h' || *LookAhead == 'H');
  264. >   CurPtr = isHex || !FirstNonDec ? LookAhead : FirstNonDec;
  265.     if (isHex)
  266.       return 16;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BranchProbabilityInfo.cpp:249: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 248 could be null and is dereferenced at line 249, column 3.
  247.   bool BranchProbabilityInfo::calcMetadataWeights(const BasicBlock *BB) {
  248.     const Instruction *TI = BB->getTerminator();
  249. >   assert(TI->getNumSuccessors() > 1 && "expected more than one successor!");
  250.     if (!(isa<BranchInst>(TI) || isa<SwitchInst>(TI) || isa<IndirectBrInst>(TI)))
  251.       return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp:253: error: DEAD_STORE
  The value written to &STI (type llvm::ARMSubtarget const &) is never used.
  251.   ARMBaseRegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,
  252.                                            MachineFunction &MF) const {
  253. >   const ARMSubtarget &STI = MF.getSubtarget<ARMSubtarget>();
  254.     const ARMFrameLowering *TFI = getFrameLowering(MF);
  255.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp:254: error: DEAD_STORE
  The value written to &TFI (type llvm::ARMFrameLowering const *) is never used.
  252.                                            MachineFunction &MF) const {
  253.     const ARMSubtarget &STI = MF.getSubtarget<ARMSubtarget>();
  254. >   const ARMFrameLowering *TFI = getFrameLowering(MF);
  255.   
  256.     switch (RC->getID()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFISelDAGToDAG.cpp:309: error: UNINITIALIZED_VALUE
  The value read from new_val.d was never initialized.
  307.       val = new_val.i;
  308.     else {
  309. >     val = new_val.d;
  310.     }
  311.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFISelDAGToDAG.cpp:307: error: UNINITIALIZED_VALUE
  The value read from new_val.i was never initialized.
  305.       val = new_val.s;
  306.     else if (size == 4)
  307. >     val = new_val.i;
  308.     else {
  309.       val = new_val.d;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFISelDAGToDAG.cpp:305: error: UNINITIALIZED_VALUE
  The value read from new_val.s was never initialized.
  303.       val = new_val.c[0];
  304.     else if (size == 2)
  305. >     val = new_val.s;
  306.     else if (size == 4)
  307.       val = new_val.i;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsMCInstLower.cpp:287: error: UNINITIALIZED_VALUE
  The value read from Kind was never initialized.
  285.       const MCExpr *Expr =
  286.           MCSymbolRefExpr::create(MI->getOperand(2).getMBB()->getSymbol(), *Ctx);
  287. >     const MipsMCExpr *MipsExpr = MipsMCExpr::create(Kind, Expr, *Ctx);
  288.       OutMI.addOperand(MCOperand::createExpr(MipsExpr));
  289.     } else if (MI->getNumOperands() == 4) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsMCInstLower.cpp:291: error: UNINITIALIZED_VALUE
  The value read from Kind was never initialized.
  289.     } else if (MI->getNumOperands() == 4) {
  290.       // Create %lo($tgt-$baltgt) or %hi($tgt-$baltgt).
  291. >     OutMI.addOperand(createSub(MI->getOperand(2).getMBB(),
  292.                                  MI->getOperand(3).getMBB(), Kind));
  293.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveRangeEdit.cpp:362: error: UNINITIALIZED_VALUE
  The value read from Dest was never initialized.
  360.       // allocations of the func are done.
  361.       if (isOrigDef && DeadRemats && TII.isTriviallyReMaterializable(*MI, AA)) {
  362. >       LiveInterval &NewLI = createEmptyIntervalFrom(Dest, false);
  363.         VNInfo *VNI = NewLI.getNextValue(Idx, LIS.getVNInfoAllocator());
  364.         NewLI.addSegment(LiveInterval::Segment(Idx, Idx.getDeadSlot(), VNI));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveRangeEdit.cpp:368: error: UNINITIALIZED_VALUE
  The value read from Dest was never initialized.
  366.         DeadRemats->insert(MI);
  367.         const TargetRegisterInfo &TRI = *MRI.getTargetRegisterInfo();
  368. >       MI->substituteRegister(Dest, NewLI.reg, 0, TRI);
  369.         MI->getOperand(0).setIsDead(true);
  370.       } else {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp:274: error: DEAD_STORE
  The value written to &MappedInst (type llvm::MCInst&) is never used.
  272.   void HexagonAsmPrinter::HexagonProcessInstruction(MCInst &Inst,
  273.                                                     const MachineInstr &MI) {
  274. >   MCInst &MappedInst = static_cast <MCInst &>(Inst);
  275.     const MCRegisterInfo *RI = OutStreamer->getContext().getRegisterInfo();
  276.     const MachineFunction &MF = *MI.getParent()->getParent();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp:275: error: DEAD_STORE
  The value written to &RI (type llvm::MCRegisterInfo const *) is never used.
  273.                                                     const MachineInstr &MI) {
  274.     MCInst &MappedInst = static_cast <MCInst &>(Inst);
  275. >   const MCRegisterInfo *RI = OutStreamer->getContext().getRegisterInfo();
  276.     const MachineFunction &MF = *MI.getParent()->getParent();
  277.     auto &HRI = *MF.getSubtarget<HexagonSubtarget>().getRegisterInfo();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp:278: error: DEAD_STORE
  The value written to &VectorSize (type unsigned int) is never used.
  276.     const MachineFunction &MF = *MI.getParent()->getParent();
  277.     auto &HRI = *MF.getSubtarget<HexagonSubtarget>().getRegisterInfo();
  278. >   unsigned VectorSize = HRI.getRegSizeInBits(Hexagon::HvxVRRegClass) / 8;
  279.   
  280.     switch (Inst.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodeView.cpp:289: error: NULL_DEREFERENCE
  pointer `SiteInfo` last assigned on line 279 could be null and is dereferenced at line 289, column 18.
  287.           // Check if the current location is inlined in this function. If it is,
  288.           // synthesize a statement .cv_loc at the original inlined call site.
  289. >         auto I = SiteInfo->InlinedAtMap.find(LocationFuncId);
  290.           if (I != SiteInfo->InlinedAtMap.end()) {
  291.             MCCVFunctionInfo::LineInfo &IA = I->second;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp:302: error: UNINITIALIZED_VALUE
  The value read from Metrics.NumInsts was never initialized.
  300.         Metrics.analyzeBasicBlock(*I, TTI, EphValues);
  301.   
  302. >     Props.SizeEstimation = Metrics.NumInsts;
  303.       Props.CanBeUnswitchedCount = MaxSize / (Props.SizeEstimation);
  304.       Props.WasUnswitchedCount = 0;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/SortJavaScriptImports.cpp:293: error: NULL_DEREFERENCE
  pointer `Line->First` last accessed on line 286 could be null and is dereferenced at line 293, column 17.
  291.           // of the import that immediately follows them by using the previously
  292.           // set Start.
  293. >         Start = Line->First->Tok.getLocation();
  294.         if (!Current) {
  295.           // Only comments on this line. Could be the first non-import line.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/ELFAsmParser.cpp:333: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 333, column 7.
  331.         break;
  332.       default:
  333. >       return -1U;
  334.       }
  335.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86CondBrFolding.cpp:326: error: UNINITIALIZED_VALUE
  The value read from NewCC was never initialized.
  324.       }
  325.       BuildMI(*RootMBB, UncondBrI, RootMBB->findDebugLoc(UncondBrI),
  326. >             TII->get(GetCondBranchFromCond(NewCC)))
  327.           .addMBB(RootMBBInfo->FBB);
  328.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp:308: error: UNINITIALIZED_VALUE
  The value read from Mask was never initialized.
  306.         llvm_unreachable("Unknown op in convertLogicOp");
  307.     }
  308. >   converted(&I, Op0, Mask, true);
  309.   }
  310.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/FormatToken.cpp:297: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `BestFormat` was dereferenced at line 296 and is tested for null at line 297, column 11.
  295.          I != E; ++I) {
  296.       if (I->TotalWidth <= RemainingCharacters || I->Columns == 1) {
  297. >       if (BestFormat && I->LineCount > BestFormat->LineCount)
  298.           break;
  299.         BestFormat = &*I;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:319: error: DEAD_STORE
  The value written to &Done (type _Bool) is never used.
  317.       case '$': {
  318.         ++LastEmitted;   // Consume '$' character.
  319. >       bool Done = true;
  320.   
  321.         // Handle escapes.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:296: error: DEAD_STORE
  The value written to &NumOperands (type unsigned int) is never used.
  294.     int CurVariant = -1;            // The number of the {.|.|.} region we are in.
  295.     const char *LastEmitted = AsmStr; // One past the last character emitted.
  296. >   unsigned NumOperands = MI->getNumOperands();
  297.   
  298.     OS << '\t';

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/WorkList.cpp:298: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression NumVisited` of type unsigned int at line 298, column 49.
  296.         NumVisited = NumReached[BE->getBlock()]++;
  297.   
  298. >     queue.push(std::make_pair(U, std::make_pair(-NumVisited, ++Counter)));
  299.     }
  300.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:355: error: DEAD_STORE
  The value written to &NewPred (type int) is never used.
  353.   
  354.     // Find new predicate for integer comparison.
  355. >   CmpInst::Predicate NewPred = CmpInst::BAD_ICMP_PREDICATE;
  356.     switch (Compare->getPredicate()) {
  357.     default: return false;  // Unknown comparison.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:333: error: UNINITIALIZED_VALUE
  The value read from Opc was never initialized.
  331.       return 0;
  332.   
  333. >   emitInst(Opc, ResultReg).addReg(LHSReg).addReg(RHSReg);
  334.     return ResultReg;
  335.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp:329: error: UNINITIALIZED_VALUE
  The value read from Offset was never initialized.
  327.       Offset += SlotSize;
  328.   
  329. >   State.addLoc(CCValAssign::getMem(ValNo, ValVT, Offset, LocVT, LocInfo));
  330.     return true;
  331.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/XCore/XCoreAsmPrinter.cpp:298: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_XCore_XCoreAsmPrinter.cpp::XCoreAsmPrinter>*) is never used.
  296.   // Force static initialization.
  297.   extern "C" void LLVMInitializeXCoreAsmPrinter() {
  298. >   RegisterAsmPrinter<XCoreAsmPrinter> X(getTheXCoreTarget());
  299.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:312: error: DEAD_STORE
  The value written to &D (type clang::driver::Driver const &) is never used.
  310.                                 const ArgList &Args, ArgStringList &CmdArgs,
  311.                                 bool ForAS) {
  312. >   const Driver &D = TC.getDriver();
  313.     std::vector<StringRef> Features;
  314.     switch (Triple.getArch()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:319: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  317.           FuncInfo.MBBMap[I->getParent()] == FuncInfo.MBB) {
  318.         Opcode = I->getOpcode();
  319. >       U = I;
  320.       }
  321.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:323: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  321.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {
  322.       Opcode = C->getOpcode();
  323. >     U = C;
  324.     }
  325.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp:328: error: NULL_DEREFERENCE
  pointer `DefInstr` last assigned on line 327 could be null and is dereferenced at line 328, column 13.
  326.   
  327.       MachineInstr *DefInstr = MRI.getVRegDef(Reg);
  328. >     switch (DefInstr->getOpcode()) {
  329.       default:
  330.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:321: error: DEAD_STORE
  The value written to &HasAVX (type _Bool) is never used.
  319.                                     unsigned Alignment) {
  320.     bool HasSSE41 = Subtarget->hasSSE41();
  321. >   bool HasAVX = Subtarget->hasAVX();
  322.     bool HasAVX2 = Subtarget->hasAVX2();
  323.     bool HasAVX512 = Subtarget->hasAVX512();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:322: error: DEAD_STORE
  The value written to &HasAVX2 (type _Bool) is never used.
  320.     bool HasSSE41 = Subtarget->hasSSE41();
  321.     bool HasAVX = Subtarget->hasAVX();
  322. >   bool HasAVX2 = Subtarget->hasAVX2();
  323.     bool HasAVX512 = Subtarget->hasAVX512();
  324.     bool HasVLX = Subtarget->hasVLX();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:323: error: DEAD_STORE
  The value written to &HasAVX512 (type _Bool) is never used.
  321.     bool HasAVX = Subtarget->hasAVX();
  322.     bool HasAVX2 = Subtarget->hasAVX2();
  323. >   bool HasAVX512 = Subtarget->hasAVX512();
  324.     bool HasVLX = Subtarget->hasVLX();
  325.     bool IsNonTemporal = MMO && MMO->isNonTemporal();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:320: error: DEAD_STORE
  The value written to &HasSSE41 (type _Bool) is never used.
  318.                                     MachineMemOperand *MMO, unsigned &ResultReg,
  319.                                     unsigned Alignment) {
  320. >   bool HasSSE41 = Subtarget->hasSSE41();
  321.     bool HasAVX = Subtarget->hasAVX();
  322.     bool HasAVX2 = Subtarget->hasAVX2();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:324: error: DEAD_STORE
  The value written to &HasVLX (type _Bool) is never used.
  322.     bool HasAVX2 = Subtarget->hasAVX2();
  323.     bool HasAVX512 = Subtarget->hasAVX512();
  324. >   bool HasVLX = Subtarget->hasVLX();
  325.     bool IsNonTemporal = MMO && MMO->isNonTemporal();
  326.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:325: error: DEAD_STORE
  The value written to &IsNonTemporal (type _Bool) is never used.
  323.     bool HasAVX512 = Subtarget->hasAVX512();
  324.     bool HasVLX = Subtarget->hasVLX();
  325. >   bool IsNonTemporal = MMO && MMO->isNonTemporal();
  326.   
  327.     // Get opcode and regclass of the output for the given load instruction.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp:345: error: NULL_DEREFERENCE
  pointer `MBB` could be null and is dereferenced at line 345, column 43.
  343.     // terminator.
  344.     if (Restore == &MBB) {
  345. >     for (const MachineInstr &Terminator : MBB.terminators()) {
  346.         if (!useOrDefCSROrFI(Terminator, RS))
  347.           continue;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/ModuleMap.cpp:323: error: USE_AFTER_FREE
  pointer `*returned by getValue` was freed by call to `delete()` at line 323, column 5 and is dereferenced or freed at line 323, column 5.
  321.   ModuleMap::~ModuleMap() {
  322.     for (auto &M : Modules)
  323. >     delete M.getValue();
  324.     for (auto *M : ShadowModules)
  325.       delete M;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:341: error: DEAD_STORE
  The value written to &Ctx (type llvm::LLVMContext&) is never used.
  339.     LLT LLTy = MRI.getType(MI.getOperand(0).getReg());
  340.     unsigned Size = LLTy.getSizeInBits();
  341. >   auto &Ctx = MIRBuilder.getMF().getFunction().getContext();
  342.   
  343.     MIRBuilder.setInstr(MI);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:340: error: DEAD_STORE
  The value written to &Size (type unsigned int) is never used.
  338.   LegalizerHelper::libcall(MachineInstr &MI) {
  339.     LLT LLTy = MRI.getType(MI.getOperand(0).getReg());
  340. >   unsigned Size = LLTy.getSizeInBits();
  341.     auto &Ctx = MIRBuilder.getMF().getFunction().getContext();
  342.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/IfConversion.cpp:389: error: DEAD_STORE
  The value written to &NumDups (type unsigned int) is never used.
  387.         BBInfo &BBI = Token->BBI;
  388.         IfcvtKind Kind = Token->Kind;
  389. >       unsigned NumDups = Token->NumDups;
  390.         unsigned NumDups2 = Token->NumDups2;
  391.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/IfConversion.cpp:390: error: DEAD_STORE
  The value written to &NumDups2 (type unsigned int) is never used.
  388.         IfcvtKind Kind = Token->Kind;
  389.         unsigned NumDups = Token->NumDups;
  390. >       unsigned NumDups2 = Token->NumDups2;
  391.   
  392.         // If the block has been evicted out of the queue or it has already been

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/ELFAsmParser.cpp:346: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 346, column 7.
  344.   
  345.       if (!getLexer().is(AsmToken::Identifier))
  346. >       return -1U;
  347.   
  348.       StringRef flagId = getTok().getIdentifier();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/ELFAsmParser.cpp:358: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 358, column 7.
  356.         flags |= ELF::SHF_TLS;
  357.       else
  358. >       return -1U;
  359.   
  360.       Lex(); // Eat the flag.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMLegalizerInfo.cpp:347: error: DEAD_STORE
  The value written to &Ctx (type llvm::LLVMContext&) is never used.
  345.   
  346.     MIRBuilder.setInstr(MI);
  347. >   LLVMContext &Ctx = MIRBuilder.getMF().getFunction().getContext();
  348.   
  349.     switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp:367: error: UNINITIALIZED_VALUE
  The value read from NewOpcode was never initialized.
  365.   
  366.       MachineInstr *NewMI =
  367. >         BuildMI(*MFI, I, MI.getDebugLoc(), TII->get(NewOpcode))
  368.               .add(MI.getOperand(0))
  369.               .add(MI.getOperand(1 + X86::AddrBaseReg));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:348: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getArgRegsSaveSize` of type unsigned int at line 348, column 3.
  346.     // This is a conservative estimation: Assume the frame pointer being r7 and
  347.     // pc("r15") up to r8 getting spilled before (= 8 registers).
  348. >   return -AFI.getArgRegsSaveSize() - (8 * 4);
  349.   }
  350.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp:356: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `LastSeenReg` was dereferenced at line 356 and is tested for null at line 356, column 9.
  354.       // The only way LessRecordRegister can return equal is if they're the same
  355.       // string. Use simple equality instead.
  356. >     if (LastSeenReg && Reg->getName() == LastSeenReg->getName())
  357.         PrintWarning(Reg->getLoc(), Twine("DWARF numbers for register ") +
  358.                                         getQualifiedName(Reg) +

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:358: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `FirstReloc` could be dangling and is dereferenced or freed at line 358, column 12.
  356.         return 0;
  357.       // -1 to exclude this first relocation entry.
  358. >     return FirstReloc->VirtualAddress - 1;
  359.     }
  360.     return Sec->NumberOfRelocations;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/ELF.cpp:407: error: UNINITIALIZED_VALUE
  The value read from GroupOffsetDelta was never initialized.
  405.       for (uint64_t I = 0; I != NumRelocsInGroup; ++I) {
  406.         Elf_Rela R;
  407. >       Offset += GroupedByOffsetDelta ? GroupOffsetDelta : ReadSLEB();
  408.         R.r_offset = Offset;
  409.         R.r_info = GroupedByInfo ? GroupRInfo : ReadSLEB();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/ELF.cpp:409: error: UNINITIALIZED_VALUE
  The value read from GroupRInfo was never initialized.
  407.         Offset += GroupedByOffsetDelta ? GroupOffsetDelta : ReadSLEB();
  408.         R.r_offset = Offset;
  409. >       R.r_info = GroupedByInfo ? GroupRInfo : ReadSLEB();
  410.         if (GroupHasAddend && !GroupedByAddend)
  411.           Addend += ReadSLEB();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:356: error: NULL_DEREFERENCE
  pointer `returned by getTerminator` could be null and is dereferenced at line 356, column 9.
  354.       }
  355.   
  356. >     if (BB->getTerminator()->mayThrow()) {
  357.         BBSideEffects[BB] = true;
  358.         return true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:350: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  348.   bool TargetLowering::ShrinkDemandedConstant(SDValue Op, const APInt &Demanded,
  349.                                               TargetLoweringOpt &TLO) const {
  350. >   SelectionDAG &DAG = TLO.DAG;
  351.     SDLoc DL(Op);
  352.     unsigned Opcode = Op.getOpcode();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BranchProbabilityInfo.cpp:352: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 350 could be null and is dereferenced at line 352, column 3.
  350.     const Instruction *TI = BB->getTerminator();
  351.     (void) TI;
  352. >   assert(TI->getNumSuccessors() > 1 && "expected more than one successor!");
  353.     assert(!isa<InvokeInst>(TI) &&
  354.            "Invokes should have already been handled by calcInvokeHeuristics");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp:352: error: DEAD_STORE
  The value written to &RC (type llvm::TargetRegisterClass const *) is never used.
  350.   bool AArch64SIMDInstrOpt::optimizeVectElement(MachineInstr &MI) {
  351.     const MCInstrDesc *MulMCID, *DupMCID;
  352. >   const TargetRegisterClass *RC = &AArch64::FPR128RegClass;
  353.   
  354.     switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:392: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression ArgRegsSaveSize` of type unsigned int at line 392, column 5.
  390.     // Allocate the vararg register save area.
  391.     if (ArgRegsSaveSize) {
  392. >     emitSPUpdate(isARM, MBB, MBBI, dl, TII, -ArgRegsSaveSize,
  393.                    MachineInstr::FrameSetup);
  394.       DefCFAOffsetCandidates.addInst(std::prev(MBBI), ArgRegsSaveSize, true);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:365: error: NULL_DEREFERENCE
  pointer `CI` last assigned on line 354 could be null and is dereferenced at line 365, column 54.
  363.     else if (Pred == CmpInst::FCMP_FALSE)
  364.       MIRBuilder.buildCopy(
  365. >         Res, getOrCreateVReg(*Constant::getNullValue(CI->getType())));
  366.     else if (Pred == CmpInst::FCMP_TRUE)
  367.       MIRBuilder.buildCopy(

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:368: error: NULL_DEREFERENCE
  pointer `CI` last assigned on line 354 could be null and is dereferenced at line 368, column 57.
  366.     else if (Pred == CmpInst::FCMP_TRUE)
  367.       MIRBuilder.buildCopy(
  368. >         Res, getOrCreateVReg(*Constant::getAllOnesValue(CI->getType())));
  369.     else {
  370.       MIRBuilder.buildInstr(TargetOpcode::G_FCMP, {Res}, {Pred, Op0, Op1},

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.cpp:376: error: DEAD_STORE
  The value written to &VectorLatchBB (type llvm::BasicBlock*) is never used.
  374.     BasicBlock *VectorHeaderBB = VectorPreHeaderBB->getSingleSuccessor();
  375.     assert(VectorHeaderBB && "Loop preheader does not have a single successor.");
  376. >   BasicBlock *VectorLatchBB = VectorHeaderBB;
  377.   
  378.     // 1. Make room to generate basic-blocks inside loop body if needed.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseTentative.cpp:376: error: DEAD_STORE
  The value written to &QuestionColonDepth (type unsigned int) is never used.
  374.                         StopBeforeMatch);
  375.             if (P.Tok.is(tok::question))
  376. >             ++QuestionColonDepth;
  377.             else if (P.Tok.is(tok::colon)) {
  378.               if (QuestionColonDepth)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseTentative.cpp:379: error: DEAD_STORE
  The value written to &QuestionColonDepth (type unsigned int) is never used.
  377.             else if (P.Tok.is(tok::colon)) {
  378.               if (QuestionColonDepth)
  379. >               --QuestionColonDepth;
  380.               else {
  381.                 CanBeCondition = CanBeInitStatement = false;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:399: error: UNINITIALIZED_VALUE
  The value read from StartBitOffset was never initialized.
  397.         // Bitfields get the offset of their storage but come afterward and remain
  398.         // there after a stable sort.
  399. >       Members.push_back(MemberInfo(bitsToCharUnits(StartBitOffset),
  400.                                      MemberInfo::Field, nullptr, *Field));
  401.       }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:454: error: UNINITIALIZED_VALUE
  The value read from StartBitOffset was never initialized.
  452.       // Otherwise, try to add bitfields to the run.
  453.       if (!StartFieldAsSingleRun && Field != FieldEnd &&
  454. >         !IsBetterAsSingleFieldRun(Tail - StartBitOffset, StartBitOffset) &&
  455.           (!Field->isZeroLengthBitField(Context) ||
  456.            (!Context.getTargetInfo().useZeroLengthBitfieldAlignment() &&

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:469: error: UNINITIALIZED_VALUE
  The value read from StartBitOffset was never initialized.
  467.       // the bitfields in the run.  Bitfields get the offset of their storage but
  468.       // come afterward and remain there after a stable sort.
  469. >     Members.push_back(StorageInfo(bitsToCharUnits(StartBitOffset), Type));
  470.       for (; Run != Field; ++Run)
  471.         Members.push_back(MemberInfo(bitsToCharUnits(StartBitOffset),

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:471: error: UNINITIALIZED_VALUE
  The value read from StartBitOffset was never initialized.
  469.       Members.push_back(StorageInfo(bitsToCharUnits(StartBitOffset), Type));
  470.       for (; Run != Field; ++Run)
  471. >       Members.push_back(MemberInfo(bitsToCharUnits(StartBitOffset),
  472.                                      MemberInfo::Field, nullptr, *Run));
  473.       Run = FieldEnd;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/BasicBlock.cpp:378: error: NULL_DEREFERENCE
  pointer `FirstNonPHI` last assigned on line 372 could be null and is dereferenced at line 378, column 7.
  376.     // CleanupBlockInst are pretty easy to split.  However, SplitBlockPredecessors
  377.     // cannot handle such things just yet.
  378. >   if (FirstNonPHI->isEHPad())
  379.       return false;
  380.     return true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp:411: error: UNINITIALIZED_VALUE
  The value read from result was never initialized.
  409.     }
  410.     needHelper = true;
  411. >   return result;
  412.   }
  413.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLambda.cpp:382: error: NULL_DEREFERENCE
  pointer `returned by getCurLambda` could be null and is dereferenced by call to `getGenericLambdaTemplateParameterList()` at line 382, column 13.
  380.     QualType MethodType = MethodTypeInfo->getType();
  381.     TemplateParameterList *TemplateParams =
  382. >             getGenericLambdaTemplateParameterList(getCurLambda(), *this);
  383.     // If a lambda appears in a dependent context or is a generic lambda (has
  384.     // template parameters) and has an 'auto' return type, deduce it to a

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp:383: error: DEAD_STORE
  The value written to &EmitPercent (type _Bool) is never used.
  381.                                 char Mode, raw_ostream &O) {
  382.     unsigned Reg = MO.getReg();
  383. >   bool EmitPercent = true;
  384.   
  385.     if (!X86::GR8RegClass.contains(Reg) &&

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:468: error: DEAD_STORE
  The value written to &ReadTokens (type unsigned int) is never used.
  466.               // list, but C++11 attributes are expected after blocks.
  467.               NextTok = Tokens->getNextToken();
  468. >             ++ReadTokens;
  469.               ProbablyBracedList = NextTok->isNot(tok::l_square);
  470.             }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp:413: error: DEAD_STORE
  The value written to &AI (type llvm::Argument*) is never used.
  411.         Builder.CreateBitCast(PersonalityFn, TargetFuncTy->getPointerTo());
  412.     auto AI = Trampoline->arg_begin();
  413. >   Value *Args[5] = {LSDA, &*AI++, &*AI++, &*AI++, &*AI++};
  414.     CallInst *Call = Builder.CreateCall(TargetFuncTy, CastPersonality, Args);
  415.     // Can't use musttail due to prototype mismatch, but we can use tail.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp:393: error: DEAD_STORE
  The value written to &DefaultSafety (type unsigned int const ) is never used.
  391.                                                 MachineFunction &MF) const {
  392.     const PPCFrameLowering *TFI = getFrameLowering(MF);
  393. >   const unsigned DefaultSafety = 1;
  394.   
  395.     switch (RC->getID()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp:392: error: DEAD_STORE
  The value written to &TFI (type llvm::PPCFrameLowering const *) is never used.
  390.   unsigned PPCRegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,
  391.                                                 MachineFunction &MF) const {
  392. >   const PPCFrameLowering *TFI = getFrameLowering(MF);
  393.     const unsigned DefaultSafety = 1;
  394.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp:434: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression StackSize` of type unsigned long long at line 434, column 3.
  432.   
  433.     // Adjust stack.
  434. >   TII.adjustStackPtr(SP, -StackSize, MBB, MBBI);
  435.   
  436.     // emit ".cfi_def_cfa_offset StackSize"

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp:438: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression StackSize` of type unsigned long long at line 438, column 7.
  436.     // emit ".cfi_def_cfa_offset StackSize"
  437.     unsigned CFIIndex = MF.addFrameInst(
  438. >       MCCFIInstruction::createDefCfaOffset(nullptr, -StackSize));
  439.     BuildMI(MBB, MBBI, dl, TII.get(TargetOpcode::CFI_INSTRUCTION))
  440.         .addCFIIndex(CFIIndex);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:424: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `StringTableSizePtr` could be dangling and is dereferenced or freed at line 424, column 21.
  422.     if (std::error_code EC = getObject(StringTableSizePtr, Data, StringTableAddr))
  423.       return EC;
  424. >   StringTableSize = *StringTableSizePtr;
  425.     if (std::error_code EC =
  426.             getObject(StringTable, Data, StringTableAddr, StringTableSize))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitDouble.cpp:406: error: NULL_DEREFERENCE
  pointer `DefI` last assigned on line 405 could be null and is dereferenced at line 406, column 11.
  404.   
  405.     const MachineInstr *DefI = MRI->getVRegDef(Reg);
  406. >   switch (DefI->getOpcode()) {
  407.       case Hexagon::A2_tfrpi:
  408.       case Hexagon::CONST64:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:412: error: DEAD_STORE
  The value written to &HasOffReg (type _Bool) is never used.
  410.     bool HasImmOffset = false;
  411.     bool HasShift = false;
  412. >   bool HasOffReg = true;
  413.     bool isLdStMul = false;
  414.     unsigned Opc = Entry.NarrowOpc1;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:409: error: DEAD_STORE
  The value written to &Scale (type unsigned int) is never used.
  407.       return false;
  408.   
  409. >   unsigned Scale = 1;
  410.     bool HasImmOffset = false;
  411.     bool HasShift = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.cpp:465: error: DEAD_STORE
  The value written to &additionalOperands (type unsigned int) is never used.
  463.       ++additionalOperands;
  464.     if (HasEVEX_K)
  465. >     ++additionalOperands;
  466.   #endif
  467.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/RISCVCompressInstEmitter.cpp:418: error: NULL_DEREFERENCE
  pointer `OpDef` last assigned on line 413 could be null and is dereferenced at line 418, column 22.
  416.                       Rec->getName() + " has unexpected operator type!");
  417.     // Checking we are transforming from compressed to uncompressed instructions.
  418. >   Record *Operator = OpDef->getDef();
  419.     if (!Operator->isSubClassOf("RVInst"))
  420.       PrintFatalError(Rec->getLoc(), "Input instruction '" + Operator->getName() +

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:435: error: UNINITIALIZED_VALUE
  The value read from FailureOrder was never initialized.
  433.           break;
  434.         }
  435. >     if (isStrongerThan(FailureOrder, SuccessOrder)) {
  436.         // Don't assert on undefined behavior "failure argument shall be no
  437.         // stronger than the success argument".

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:441: error: UNINITIALIZED_VALUE
  The value read from FailureOrder was never initialized.
  439.             llvm::AtomicCmpXchgInst::getStrongestFailureOrdering(SuccessOrder);
  440.       }
  441. >     emitAtomicCmpXchg(CGF, E, IsWeak, Dest, Ptr, Val1, Val2, Size, SuccessOrder,
  442.                         FailureOrder, Scope);
  443.       return;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp:409: error: DEAD_STORE
  The value written to &MBB (type llvm::MachineBasicBlock&) is never used.
  407.   
  408.   bool MipsSEInstrInfo::expandPostRAPseudo(MachineInstr &MI) const {
  409. >   MachineBasicBlock &MBB = *MI.getParent();
  410.     bool isMicroMips = Subtarget.inMicroMipsMode();
  411.     unsigned Opc;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp:410: error: DEAD_STORE
  The value written to &isMicroMips (type _Bool) is never used.
  408.   bool MipsSEInstrInfo::expandPostRAPseudo(MachineInstr &MI) const {
  409.     MachineBasicBlock &MBB = *MI.getParent();
  410. >   bool isMicroMips = Subtarget.inMicroMipsMode();
  411.     unsigned Opc;
  412.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:427: error: NULL_DEREFERENCE
  pointer `returned by getTerminator` could be null and is dereferenced at line 427, column 15.
  425.       if (const BasicBlock *PBB = PMBB->getBasicBlock()) {
  426.         if (MDNode *LoopID =
  427. >               PBB->getTerminator()->getMetadata(LLVMContext::MD_loop)) {
  428.           if (GetUnrollMetadata(LoopID, "llvm.loop.unroll.disable"))
  429.             return true;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:444: error: UNINITIALIZED_VALUE
  The value read from DiagID was never initialized.
  442.     // code.
  443.     if (LocCookie.isValid()) {
  444. >     Diags.Report(LocCookie, DiagID).AddString(Message);
  445.   
  446.       if (D.getLoc().isValid()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:462: error: UNINITIALIZED_VALUE
  The value read from DiagID was never initialized.
  460.     // If Loc is invalid, we still need to report the issue, it just gets no
  461.     // location info.
  462. >   Diags.Report(Loc, DiagID).AddString(Message);
  463.   }
  464.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodeView.cpp:417: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Data` of type unsigned int at line 417, column 5.
  415.   static uint32_t encodeSignedNumber(uint32_t Data) {
  416.     if (Data >> 31)
  417. >     return ((-Data) << 1) | 1;
  418.     return Data << 1;
  419.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:418: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 417 could be null and is dereferenced at line 418, column 10.
  416.     while (TargetRegisterInfo::isVirtualRegister(VReg)) {
  417.       const MachineInstr *DefMI = MRI.getVRegDef(VReg);
  418. >     if (!DefMI->isFullCopy())
  419.         return VReg;
  420.       VReg = DefMI->getOperand(1).getReg();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitDouble.cpp:428: error: NULL_DEREFERENCE
  pointer `DefI` last assigned on line 427 could be null and is dereferenced by call to `profit` at line 428, column 17.
  426.     for (unsigned DR : Part) {
  427.       MachineInstr *DefI = MRI->getVRegDef(DR);
  428. >     int32_t P = profit(DefI);
  429.       if (P == std::numeric_limits<int>::min())
  430.         return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp:476: error: UNINITIALIZED_VALUE
  The value read from NewChain was never initialized.
  474.         if (NewChain != OC_OpChainMixed) {
  475.           // Update the current operator chain type before we search up the chain.
  476. >         ParentChain = NewChain;
  477.           // If either the left or right side is invariant, we can unswitch on this,
  478.           // which will cause the branch to go away in one loop and the condition to

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp:487: error: UNINITIALIZED_VALUE
  The value read from NewChain was never initialized.
  485.           // We did not manage to find a partial LIV in operand(0). Backtrack and try
  486.           // operand(1).
  487. >         ParentChain = NewChain;
  488.           if (Value *RHS = FindLIVLoopCondition(BO->getOperand(1), L, Changed,
  489.                                                 ParentChain, Cache)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp:436: error: NULL_DEREFERENCE
  pointer `&CustomMST->Machine` last assigned on line 435 could be null and is dereferenced by call to `getLocalSlot` at line 436, column 14.
  434.         ModuleSlotTracker CustomMST(M, /*ShouldInitializeAllMetadata=*/false);
  435.         CustomMST.incorporateFunction(*F);
  436. >       Slot = CustomMST.getLocalSlot(&BB);
  437.       }
  438.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:425: error: DEAD_STORE
  The value written to &Reg (type unsigned int) is never used.
  423.   bool AArch64AsmPrinter::printAsmMRegister(const MachineOperand &MO, char Mode,
  424.                                             raw_ostream &O) {
  425. >   unsigned Reg = MO.getReg();
  426.     switch (Mode) {
  427.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp:431: error: DEAD_STORE
  The value written to &MO (type llvm::MachineOperand const &) is never used.
  429.       if (ExtraCode[1] != 0) return true; // Unknown modifier.
  430.   
  431. >     const MachineOperand &MO = MI->getOperand(OpNo);
  432.   
  433.       switch (ExtraCode[0]) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/Job.cpp:428: error: DEAD_STORE
  The value written to &Status (type int) is never used.
  426.                                    std::string *ErrMsg,
  427.                                    bool *ExecutionFailed) const {
  428. >   int Status = Command::Execute(Redirects, ErrMsg, ExecutionFailed);
  429.     (void)Status;
  430.     if (ExecutionFailed)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:432: error: DEAD_STORE
  The value written to &BufferStart (type char const *) is never used.
  430.     const llvm::MemoryBuffer *FromFile = SM.getBuffer(FID);
  431.     Lexer L(FID, FromFile, SM, PP.getLangOpts());
  432. >   const char *BufferStart = L.getBuffer().data();
  433.   
  434.     // Inform the preprocessor that we want to retain comments as tokens, so we

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:427: error: DEAD_STORE
  The value written to &RB (type clang::RewriteBuffer&) is never used.
  425.   /// but it will be reasonably close.
  426.   void html::SyntaxHighlight(Rewriter &R, FileID FID, const Preprocessor &PP) {
  427. >   RewriteBuffer &RB = R.getEditBuffer(FID);
  428.   
  429.     const SourceManager &SM = PP.getSourceManager();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:447: error: DEAD_STORE
  The value written to &TokLen (type unsigned int) is never used.
  445.       // FileID.
  446.       unsigned TokOffs = SM.getFileOffset(Tok.getLocation());
  447. >     unsigned TokLen = Tok.getLength();
  448.       switch (Tok.getKind()) {
  449.       default: break;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:446: error: DEAD_STORE
  The value written to &TokOffs (type unsigned int) is never used.
  444.       // Since we are lexing unexpanded tokens, all tokens are from the main
  445.       // FileID.
  446. >     unsigned TokOffs = SM.getFileOffset(Tok.getLocation());
  447.       unsigned TokLen = Tok.getLength();
  448.       switch (Tok.getKind()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:463: error: NULL_DEREFERENCE
  pointer `Max` last assigned on line 453 could be null and is dereferenced at line 463, column 5.
  461.   #ifndef NDEBUG
  462.     {
  463. >     LLVM_DEBUG(dbgs() << "Critical path has total latency "
  464.                         << (Max->getDepth() + Max->Latency) << "\n");
  465.       LLVM_DEBUG(dbgs() << "Available regs:");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp:451: error: NULL_DEREFERENCE
  pointer `Ret.CopyDefs.first` last assigned on line 438 could be null and is dereferenced at line 451, column 28.
  449.         MRI->hasOneNonDBGUse(Def1->getOperand(0).getReg());
  450.       Ret.DefsSingleUse &=
  451. >       MRI->hasOneNonDBGUse(Ret.CopyDefs.first->getOperand(0).getReg());
  452.       assert(Def1 && "Must be able to find a definition of operand 1.");
  453.       if (isBinary(MIParam)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Core.cpp:451: error: UNINITIALIZED_VALUE
  The value read from AD was never initialized.
  449.       break;
  450.     }
  451. >   return wrap(InlineAsm::get(unwrap<FunctionType>(Ty),
  452.                                StringRef(AsmString, AsmStringSize),
  453.                                StringRef(Constraints, ConstraintsSize),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:447: error: DEAD_STORE
  The value written to &NarrowSize (type unsigned long long) is never used.
  445.   
  446.     uint64_t SizeOp0 = MRI.getType(MI.getOperand(0).getReg()).getSizeInBits();
  447. >   uint64_t NarrowSize = NarrowTy.getSizeInBits();
  448.   
  449.     switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:446: error: DEAD_STORE
  The value written to &SizeOp0 (type unsigned long long) is never used.
  444.     MIRBuilder.setInstr(MI);
  445.   
  446. >   uint64_t SizeOp0 = MRI.getType(MI.getOperand(0).getReg()).getSizeInBits();
  447.     uint64_t NarrowSize = NarrowTy.getSizeInBits();
  448.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp:497: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 497, column 39.
  495.       return nullptr;
  496.   
  497. >   return ConstantInt::get(ResultType, MaxVal ? -1ULL : 0);
  498.   }
  499.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcAsmPrinter.cpp:445: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Sparc_SparcAsmPrinter.cpp::SparcAsmPrinter>*) is never used.
  443.   // Force static initialization.
  444.   extern "C" void LLVMInitializeSparcAsmPrinter() {
  445. >   RegisterAsmPrinter<SparcAsmPrinter> X(getTheSparcTarget());
  446.     RegisterAsmPrinter<SparcAsmPrinter> Y(getTheSparcV9Target());
  447.     RegisterAsmPrinter<SparcAsmPrinter> Z(getTheSparcelTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcAsmPrinter.cpp:446: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Sparc_SparcAsmPrinter.cpp::SparcAsmPrinter>*) is never used.
  444.   extern "C" void LLVMInitializeSparcAsmPrinter() {
  445.     RegisterAsmPrinter<SparcAsmPrinter> X(getTheSparcTarget());
  446. >   RegisterAsmPrinter<SparcAsmPrinter> Y(getTheSparcV9Target());
  447.     RegisterAsmPrinter<SparcAsmPrinter> Z(getTheSparcelTarget());
  448.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcAsmPrinter.cpp:447: error: DEAD_STORE
  The value written to &Z (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Sparc_SparcAsmPrinter.cpp::SparcAsmPrinter>*) is never used.
  445.     RegisterAsmPrinter<SparcAsmPrinter> X(getTheSparcTarget());
  446.     RegisterAsmPrinter<SparcAsmPrinter> Y(getTheSparcV9Target());
  447. >   RegisterAsmPrinter<SparcAsmPrinter> Z(getTheSparcelTarget());
  448.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/LTO/LTO.cpp:486: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 486, column 10.
  484.       // recorded as being referenced from a different partition.
  485.       if (Res.LinkerRedefined || Res.VisibleToRegularObj || Sym.isUsed() ||
  486. >         (GlobalRes.Partition != GlobalResolution::Unknown &&
  487.            GlobalRes.Partition != Partition)) {
  488.         GlobalRes.Partition = GlobalResolution::External;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp:450: error: NULL_DEREFERENCE
  pointer `returned by getStackFrame` could be null and is dereferenced at line 450, column 10.
  448.   
  449.   bool LocationContext::inTopFrame() const {
  450. >   return getStackFrame()->inTopFrame();
  451.   }
  452.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.cpp:456: error: NULL_DEREFERENCE
  pointer `NA.Addr` last assigned on line 453 could be null and is dereferenced at line 456, column 9.
  454.   
  455.     while (NA.Addr != this) {
  456. >     if (NA.Addr->getType() == NodeAttrs::Code)
  457.         return NA;
  458.       NA = G.addr<NodeBase*>(NA.Addr->getNext());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:476: error: DEAD_STORE
  The value written to &Is32BitInt (type _Bool) is never used.
  474.            &PPC::GPRC_and_GPRC_NOR0RegClass)))));
  475.   
  476. >   bool Is32BitInt = UseRC->hasSuperClassEq(&PPC::GPRCRegClass);
  477.   
  478.     switch (VT.SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:458: error: DEAD_STORE
  The value written to &UseOffset (type _Bool) is never used.
  456.                                 bool IsZExt, unsigned FP64LoadOpc) {
  457.     unsigned Opc;
  458. >   bool UseOffset = true;
  459.     bool HasSPE = PPCSubTarget->hasSPE();
  460.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:465: error: NULL_DEREFERENCE
  pointer `DefInst` last assigned on line 464 could be null and is dereferenced at line 465, column 11.
  463.       if (Use.isReg() && TargetRegisterInfo::isVirtualRegister(Use.getReg())) {
  464.         MachineInstr *DefInst = MRI->getVRegDef(Use.getReg());
  465. >       if (DefInst->isPHI() && DefInst->getParent() == MI.getParent()) {
  466.           LLVM_DEBUG(dbgs() << "    *** Cannot move this instruction ***\n");
  467.           return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/ImplicitNullChecks.cpp:465: error: NULL_DEREFERENCE
  pointer `returned by getTerminator` could be null and is dereferenced at line 465, column 16.
  463.     MDNode *BranchMD = nullptr;
  464.     if (auto *BB = MBB.getBasicBlock())
  465. >     BranchMD = BB->getTerminator()->getMetadata(LLVMContext::MD_make_implicit);
  466.   
  467.     if (!BranchMD)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:499: error: NULL_DEREFERENCE
  pointer `CurBB` last assigned on line 492 could be null and is dereferenced at line 499, column 38.
  497.       // Enqueue all the successors not already visited.
  498.       // Those are by construction either before Save or after Restore.
  499. >     for (MachineBasicBlock *SuccBB : CurBB->successors())
  500.         if (Visited.insert(SuccBB).second)
  501.           WorkList.push_back(SuccBB);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCCodeView.cpp:469: error: NULL_DEREFERENCE
  pointer `__range` last assigned on line 469 could be null and is dereferenced at line 469, column 17.
  467.     // Include all child inline call sites in our .cv_loc extent.
  468.     MCCVFunctionInfo *SiteInfo = getCVFunctionInfo(Frag.SiteFuncId);
  469. >   for (auto &KV : SiteInfo->InlinedAtMap) {
  470.       unsigned ChildId = KV.first;
  471.       auto Extent = getLineExtent(ChildId);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:507: error: UNINITIALIZED_VALUE
  The value read from KnownLive was never initialized.
  505.       markLive(sym);
  506.   
  507. >   return KnownLive;
  508.   }
  509.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:474: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  472.           FuncInfo.MBBMap[I->getParent()] == FuncInfo.MBB) {
  473.         Opcode = I->getOpcode();
  474. >       U = I;
  475.       }
  476.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:478: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  476.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {
  477.       Opcode = C->getOpcode();
  478. >     U = C;
  479.     }
  480.     switch (Opcode) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:558: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  556.     // Copy the predicate operands.
  557.     MIB.add(MI.getOperand(OpIdx++));
  558. >   MIB.add(MI.getOperand(OpIdx++));
  559.   
  560.     // Copy the super-register source operand used for double-spaced subregs over

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.cpp:474: error: DEAD_STORE
  The value written to &MFI (type llvm::R600MachineFunctionInfo*) is never used.
  472.   SDValue R600TargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {
  473.     MachineFunction &MF = DAG.getMachineFunction();
  474. >   R600MachineFunctionInfo *MFI = MF.getInfo<R600MachineFunctionInfo>();
  475.     switch (Op.getOpcode()) {
  476.     default: return AMDGPUTargetLowering::LowerOperation(Op, DAG);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/FormatTokenLexer.cpp:483: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression TrailingWhitespace` of type unsigned int at line 483, column 7.
  481.     readRawToken(*FormatTok);
  482.     SourceLocation WhitespaceStart =
  483. >       FormatTok->Tok.getLocation().getLocWithOffset(-TrailingWhitespace);
  484.     FormatTok->IsFirst = IsFirstToken;
  485.     IsFirstToken = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/BasicBlock.cpp:479: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 477 could be null and is dereferenced at line 479, column 7.
  477.     const Instruction *TI = getTerminator();
  478.     if (MDNode *MDIrrLoopHeader =
  479. >       TI->getMetadata(LLVMContext::MD_irr_loop)) {
  480.       MDString *MDName = cast<MDString>(MDIrrLoopHeader->getOperand(0));
  481.       if (MDName->getString().equals("loop_header_weight")) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/DelaySlotFiller.cpp:499: error: DEAD_STORE
  The value written to &TII (type llvm::SparcInstrInfo const *) is never used.
  497.       return false;
  498.   
  499. >   const TargetInstrInfo *TII = Subtarget->getInstrInfo();
  500.   
  501.     switch (PrevInst->getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaType.cpp:488: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 488, column 3.
  486.     // objc_gc goes on the innermost pointer to something that's not a
  487.     // pointer.
  488. >   unsigned innermost = -1U;
  489.     bool considerDeclSpec = true;
  490.     for (unsigned i = 0, e = declarator.getNumTypeObjects(); i != e; ++i) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp:487: error: NULL_DEREFERENCE
  pointer `MI` last assigned on line 486 could be null and is dereferenced at line 487, column 10.
  485.     while (true) {
  486.       const MachineInstr *MI = MRI->getVRegDef(SrcReg);
  487. >     if (!MI->isCopyLike())
  488.         return SrcReg;
  489.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp:537: error: UNINITIALIZED_VALUE
  The value read from OpStart was never initialized.
  535.   
  536.     if (Changed)
  537. >     for (unsigned i = OpStart; i < OpEnd; ++i)
  538.         MIB.add(OldMI->getOperand(i));
  539.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:493: error: NULL_DEREFERENCE
  .
  491.     const RecordDecl *Record = RT->getDecl();
  492.     bool foundStarOperator = IsOverloadedOperatorPresent(Record, OO_Star);
  493. >   bool foundArrowOperator = IsOverloadedOperatorPresent(Record, OO_Arrow);
  494.     if (foundStarOperator && foundArrowOperator)
  495.       return true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86CondBrFolding.cpp:570: error: UNINITIALIZED_VALUE
  The value read from BrInstr was never initialized.
  568.       break;
  569.     }
  570. >   return llvm::make_unique<TargetMBBInfo>(TargetMBBInfo{
  571.         TBB, FBB, BrInstr, CmpInstr, CC, SrcReg, CmpValue, Modified, CmpBrOnly});
  572.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86CondBrFolding.cpp:570: error: UNINITIALIZED_VALUE
  The value read from CC was never initialized.
  568.       break;
  569.     }
  570. >   return llvm::make_unique<TargetMBBInfo>(TargetMBBInfo{
  571.         TBB, FBB, BrInstr, CmpInstr, CC, SrcReg, CmpValue, Modified, CmpBrOnly});
  572.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86CondBrFolding.cpp:570: error: UNINITIALIZED_VALUE
  The value read from CmpValue was never initialized.
  568.       break;
  569.     }
  570. >   return llvm::make_unique<TargetMBBInfo>(TargetMBBInfo{
  571.         TBB, FBB, BrInstr, CmpInstr, CC, SrcReg, CmpValue, Modified, CmpBrOnly});
  572.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86CondBrFolding.cpp:570: error: UNINITIALIZED_VALUE
  The value read from SrcReg was never initialized.
  568.       break;
  569.     }
  570. >   return llvm::make_unique<TargetMBBInfo>(TargetMBBInfo{
  571.         TBB, FBB, BrInstr, CmpInstr, CC, SrcReg, CmpValue, Modified, CmpBrOnly});
  572.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SafeStack.cpp:592: error: DEAD_STORE
  The value written to &Size (type unsigned long long) is never used.
  590.       uint64_t Size = getStaticAllocaAllocationSize(AI);
  591.       if (Size == 0)
  592. >       Size = 1; // Don't create zero-sized stack objects.
  593.   
  594.       replaceDbgDeclareForAlloca(AI, BasePointer, DIB, DIExpression::NoDeref,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:495: error: NULL_DEREFERENCE
  pointer `BBTerm` last assigned on line 493 could be null and is dereferenced at line 495, column 7.
  493.     const Instruction *BBTerm = BB->getTerminator();
  494.   
  495. >   if (BBTerm->getNumSuccessors() != 2) return PPC::BR_NO_HINT;
  496.   
  497.     const BasicBlock *TBB = BBTerm->getSuccessor(0);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:490: error: DEAD_STORE
  The value written to &TFI (type llvm::AArch64FrameLowering const *) is never used.
  488.   unsigned AArch64RegisterInfo::getRegPressureLimit(const TargetRegisterClass *RC,
  489.                                                     MachineFunction &MF) const {
  490. >   const AArch64FrameLowering *TFI = getFrameLowering(MF);
  491.   
  492.     switch (RC->getID()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:505: error: UNINITIALIZED_VALUE
  The value read from Line was never initialized.
  503.   
  504.     if (!Res.empty())
  505. >     OS << Res << "," << Line;
  506.     if (auto *InlinedAt = DL->getInlinedAt()) {
  507.       if (DebugLoc InlinedAtDL = InlinedAt) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SILoadStoreOptimizer.cpp:601: error: UNINITIALIZED_VALUE
  The value read from AddrIdx[_] was never initialized.
  599.       bool Match = true;
  600.       for (unsigned i = 0; i < NumAddresses; i++) {
  601. >       const MachineOperand &AddrRegNext = MBBI->getOperand(AddrIdx[i]);
  602.   
  603.         if (AddrReg[i]->isImm() || AddrRegNext.isImm()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:499: error: DEAD_STORE
  The value written to &HasAVX (type _Bool) is never used.
  497.     bool HasSSE2 = Subtarget->hasSSE2();
  498.     bool HasSSE4A = Subtarget->hasSSE4A();
  499. >   bool HasAVX = Subtarget->hasAVX();
  500.     bool HasAVX512 = Subtarget->hasAVX512();
  501.     bool HasVLX = Subtarget->hasVLX();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:500: error: DEAD_STORE
  The value written to &HasAVX512 (type _Bool) is never used.
  498.     bool HasSSE4A = Subtarget->hasSSE4A();
  499.     bool HasAVX = Subtarget->hasAVX();
  500. >   bool HasAVX512 = Subtarget->hasAVX512();
  501.     bool HasVLX = Subtarget->hasVLX();
  502.     bool IsNonTemporal = MMO && MMO->isNonTemporal();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:496: error: DEAD_STORE
  The value written to &HasSSE1 (type _Bool) is never used.
  494.                                      X86AddressMode &AM,
  495.                                      MachineMemOperand *MMO, bool Aligned) {
  496. >   bool HasSSE1 = Subtarget->hasSSE1();
  497.     bool HasSSE2 = Subtarget->hasSSE2();
  498.     bool HasSSE4A = Subtarget->hasSSE4A();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:497: error: DEAD_STORE
  The value written to &HasSSE2 (type _Bool) is never used.
  495.                                      MachineMemOperand *MMO, bool Aligned) {
  496.     bool HasSSE1 = Subtarget->hasSSE1();
  497. >   bool HasSSE2 = Subtarget->hasSSE2();
  498.     bool HasSSE4A = Subtarget->hasSSE4A();
  499.     bool HasAVX = Subtarget->hasAVX();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:498: error: DEAD_STORE
  The value written to &HasSSE4A (type _Bool) is never used.
  496.     bool HasSSE1 = Subtarget->hasSSE1();
  497.     bool HasSSE2 = Subtarget->hasSSE2();
  498. >   bool HasSSE4A = Subtarget->hasSSE4A();
  499.     bool HasAVX = Subtarget->hasAVX();
  500.     bool HasAVX512 = Subtarget->hasAVX512();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:501: error: DEAD_STORE
  The value written to &HasVLX (type _Bool) is never used.
  499.     bool HasAVX = Subtarget->hasAVX();
  500.     bool HasAVX512 = Subtarget->hasAVX512();
  501. >   bool HasVLX = Subtarget->hasVLX();
  502.     bool IsNonTemporal = MMO && MMO->isNonTemporal();
  503.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:502: error: DEAD_STORE
  The value written to &IsNonTemporal (type _Bool) is never used.
  500.     bool HasAVX512 = Subtarget->hasAVX512();
  501.     bool HasVLX = Subtarget->hasVLX();
  502. >   bool IsNonTemporal = MMO && MMO->isNonTemporal();
  503.   
  504.     // Get opcode and regclass of the output for the given store instruction.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:630: error: DEAD_STORE
  The value written to &doExt (type _Bool) is never used.
  628.       printMemOperand(OS, *LD->getMemOperand(), G);
  629.   
  630. >     bool doExt = true;
  631.       switch (LD->getExtensionType()) {
  632.       default: doExt = false; break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp:662: error: DEAD_STORE
  The value written to &doExt (type _Bool) is never used.
  660.       printMemOperand(OS, *MLd->getMemOperand(), G);
  661.   
  662. >     bool doExt = true;
  663.       switch (MLd->getExtensionType()) {
  664.       default: doExt = false; break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:501: error: NULL_DEREFERENCE
  pointer `Ptr` last assigned on line 500 could be null and is dereferenced at line 501, column 10.
  499.       return EC;
  500.     const uint8_t *Ptr = reinterpret_cast<const uint8_t *>(IntPtr);
  501. >   Hint = *reinterpret_cast<const ulittle16_t *>(Ptr);
  502.     Name = StringRef(reinterpret_cast<const char *>(Ptr + 2));
  503.     return std::error_code();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/AsmParser/BPFAsmParser.cpp:496: error: DEAD_STORE
  The value written to &X (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_BPF_AsmParser_BPFAsmParser.cpp::BPFAsmParser>*) is never used.
  494.   
  495.   extern "C" void LLVMInitializeBPFAsmParser() {
  496. >   RegisterMCAsmParser<BPFAsmParser> X(getTheBPFTarget());
  497.     RegisterMCAsmParser<BPFAsmParser> Y(getTheBPFleTarget());
  498.     RegisterMCAsmParser<BPFAsmParser> Z(getTheBPFbeTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/AsmParser/BPFAsmParser.cpp:497: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_BPF_AsmParser_BPFAsmParser.cpp::BPFAsmParser>*) is never used.
  495.   extern "C" void LLVMInitializeBPFAsmParser() {
  496.     RegisterMCAsmParser<BPFAsmParser> X(getTheBPFTarget());
  497. >   RegisterMCAsmParser<BPFAsmParser> Y(getTheBPFleTarget());
  498.     RegisterMCAsmParser<BPFAsmParser> Z(getTheBPFbeTarget());
  499.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/AsmParser/BPFAsmParser.cpp:498: error: DEAD_STORE
  The value written to &Z (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_BPF_AsmParser_BPFAsmParser.cpp::BPFAsmParser>*) is never used.
  496.     RegisterMCAsmParser<BPFAsmParser> X(getTheBPFTarget());
  497.     RegisterMCAsmParser<BPFAsmParser> Y(getTheBPFleTarget());
  498. >   RegisterMCAsmParser<BPFAsmParser> Z(getTheBPFbeTarget());
  499.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:502: error: DEAD_STORE
  The value written to &PL (type int) is never used.
  500.     bool isDarwin = TM.getTargetTriple().isOSDarwin();
  501.     const Module *M = MF->getFunction().getParent();
  502. >   PICLevel::Level PL = M->getPICLevel();
  503.   
  504.   #ifndef NDEBUG

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:499: error: DEAD_STORE
  The value written to &isPPC64 (type _Bool) is never used.
  497.   void PPCAsmPrinter::EmitInstruction(const MachineInstr *MI) {
  498.     MCInst TmpInst;
  499. >   bool isPPC64 = Subtarget->isPPC64();
  500.     bool isDarwin = TM.getTargetTriple().isOSDarwin();
  501.     const Module *M = MF->getFunction().getParent();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:513: error: UNINITIALIZED_VALUE
  The value read from DiagID was never initialized.
  511.         SourceLocation::getFromRawEncoding(D.getLocCookie());
  512.     if (LocCookie.isValid())
  513. >     Diags.Report(LocCookie, DiagID).AddString(Message);
  514.     else {
  515.       // Otherwise, report the backend diagnostic as occurring in the generated

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:520: error: UNINITIALIZED_VALUE
  The value read from DiagID was never initialized.
  518.       // no location info.
  519.       FullSourceLoc Loc;
  520. >     Diags.Report(Loc, DiagID).AddString(Message);
  521.     }
  522.     // We handled all the possible severities.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp:518: error: DEAD_STORE
  The value written to &AddrReg (type unsigned int) is never used.
  516.       if (MI.getOpcode() == I.OrigOpc) {
  517.         SeqReg  = MI.getOperand(0).getReg();
  518. >       AddrReg = MI.getOperand(1).getReg();
  519.         DefiningMI = MRI->getUniqueVRegDef(SeqReg);
  520.         unsigned NumReg = determineSrcReg(MI);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp:507: error: DEAD_STORE
  The value written to &DL (type llvm::DebugLoc const &) is never used.
  505.     unsigned StReg[4], StRegKill[4];
  506.     MachineInstr *DefiningMI;
  507. >   const DebugLoc &DL = MI.getDebugLoc();
  508.     MachineBasicBlock &MBB = *MI.getParent();
  509.     SmallVector<unsigned, MaxNumRepl> ZipDest;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp:508: error: DEAD_STORE
  The value written to &MBB (type llvm::MachineBasicBlock&) is never used.
  506.     MachineInstr *DefiningMI;
  507.     const DebugLoc &DL = MI.getDebugLoc();
  508. >   MachineBasicBlock &MBB = *MI.getParent();
  509.     SmallVector<unsigned, MaxNumRepl> ZipDest;
  510.     SmallVector<const MCInstrDesc*, MaxNumRepl> ReplInstrMCID;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:528: error: DEAD_STORE
  The value written to &MLAOpc (type unsigned int) is never used.
  526.     SDValue Ops[] = { Op0, MLAOp1, MLAOp2, LaneIdxVal };
  527.   
  528. >   unsigned MLAOpc = ~0U;
  529.   
  530.     switch (N->getSimpleValueType(0).SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp:533: error: NULL_DEREFERENCE
  pointer `returned by getConstIntStepValue` could be null and is dereferenced at line 533, column 36.
  531.     // Int inductions are special because we only allow one IV.
  532.     if (ID.getKind() == InductionDescriptor::IK_IntInduction &&
  533. >       ID.getConstIntStepValue() && ID.getConstIntStepValue()->isOne() &&
  534.         isa<Constant>(ID.getStartValue()) &&
  535.         cast<Constant>(ID.getStartValue())->isNullValue()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/A15SDOptimizer.cpp:558: error: UNINITIALIZED_VALUE
  The value read from Lane was never initialized.
  556.       Out = createImplicitDef(MBB, InsertPt, DL);
  557.       Out = createInsertSubreg(MBB, InsertPt, DL, Out, PrefLane, Reg);
  558. >     Out = createDupLane(MBB, InsertPt, DL, Out, Lane, UsesQPR);
  559.       eraseInstrWithNoUses(MI);
  560.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:609: error: UNINITIALIZED_VALUE
  The value read from EmissionKind was never initialized.
  607.   
  608.     // Create new compile unit.
  609. >   TheCU = DBuilder.createCompileUnit(
  610.         LangTag, CUFile, CGOpts.EmitVersionIdentMetadata ? Producer : "",
  611.         LO.Optimize || CGOpts.PrepareForLTO || CGOpts.PrepareForThinLTO,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:519: error: DEAD_STORE
  The value written to &MO (type llvm::MachineOperand const &) is never used.
  517.       if (ExtraCode[1] != 0) return true; // Unknown modifier.
  518.   
  519. >     const MachineOperand &MO = MI->getOperand(OpNum);
  520.       switch (ExtraCode[0]) {
  521.       default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.cpp:530: error: NULL_DEREFERENCE
  pointer `MA.Addr` last assigned on line 539 could be null and is dereferenced at line 530, column 17.
  528.   
  529.     while (MA.Addr != this) {
  530. >     NodeId MX = MA.Addr->getNext();
  531.       if (MX == NA.Id) {
  532.         MA.Addr->setNext(NA.Addr->getNext());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:557: error: NULL_DEREFERENCE
  pointer `UUser` last assigned on line 551 could be null and is dereferenced by call to `isCompareUsedByBranch` at line 557, column 18.
  555.                   isa<SExtInst>(UUser))
  556.                 UUser = dyn_cast<Instruction>(*(UUser->user_begin()));
  557. >             if (!isCompareUsedByBranch(UUser))
  558.                 return false;
  559.             }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGCleanup.h:543: error: UNINITIALIZED_VALUE
  The value read from Size was never initialized.
  541.         break;
  542.       }
  543. >     Ptr += llvm::alignTo(Size, ScopeStackAlignment);
  544.       return *this;
  545.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp:525: error: DEAD_STORE
  The value written to &MultiExitLoop (type _Bool) is never used.
  523.   
  524.     if (!L->getExitingBlock())
  525. >     MultiExitLoop = true;
  526.   
  527.     for (BasicBlock::iterator I = Begin; I != End; ++I) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp:571: error: DEAD_STORE
  The value written to &seenIncrement (type _Bool) is never used.
  569.         if (seenIncrement)
  570.           return false;
  571. >       seenIncrement = true;
  572.         break;
  573.       }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:586: error: UNINITIALIZED_VALUE
  The value read from LookupKind was never initialized.
  584.     DeclarationName Name = NameInfo.getName();
  585.     if (TypoCorrection Corrected =
  586. >           CorrectTypo(NameInfo, LookupKind, S, &SS,
  587.                         llvm::make_unique<TemplateCandidateFilter>(*this),
  588.                         CTK_ErrorRecovery, LookupCtx)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFISelDAGToDAG.cpp:614: error: DEAD_STORE
  The value written to &PrevReg (type unsigned int) is never used.
  612.       // %bb.3 are defined with a load matching the MaskN.
  613.       LLVM_DEBUG(dbgs() << "Check PHI Insn: "; MII->dump(); dbgs() << '\n');
  614. >     unsigned PrevReg = -1;
  615.       for (unsigned i = 0; i < MII->getNumOperands(); ++i) {
  616.         const MachineOperand &MOP = MII->getOperand(i);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:685: error: UNINITIALIZED_VALUE
  The value read from InlineHistoryID was never initialized.
  683.           using namespace ore;
  684.   
  685. >         InlineResult IR = InlineCallIfPossible(
  686.               CS, InlineInfo, InlinedArrayAllocas, InlineHistoryID,
  687.               InsertLifetime, AARGetter, ImportedFunctionsStats);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:569: error: NULL_DEREFERENCE
  pointer `CurrentContext` last assigned on line 538 could be null and is dereferenced by call to `isParentOf` at line 569, column 10.
  567.     }
  568.   
  569. >   return VarContext->isParentOf(CurrentContext);
  570.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/GuardWidening.cpp:546: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  544.           match(Cond1, m_ICmp(Pred1, m_Specific(LHS), m_ConstantInt(RHS1)))) {
  545.         if (InvertCondition)
  546. >         Pred1 = ICmpInst::getInversePredicate(Pred1);
  547.   
  548.         ConstantRange CR0 =

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/GuardWidening.cpp:551: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  549.             ConstantRange::makeExactICmpRegion(Pred0, RHS0->getValue());
  550.         ConstantRange CR1 =
  551. >           ConstantRange::makeExactICmpRegion(Pred1, RHS1->getValue());
  552.   
  553.         // SubsetIntersect is a subset of the actual mathematical intersection of

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp:569: error: UNINITIALIZED_VALUE
  The value read from ConstCount was never initialized.
  567.     for (unsigned i = 0; i < 4; i++) {
  568.       TransBS = TransSwz[i];
  569. >     if (!isConstCompatible(TransBS, TransOps, ConstCount))
  570.         continue;
  571.       bool Result = FindSwizzleForVectorSlot(IGSrcs, ValidSwizzle, TransOps,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:540: error: DEAD_STORE
  The value written to &N (type unsigned long) is never used.
  538.                               MutableArrayRef<uint64_t> &Expr,
  539.                               SmallVectorImpl<uint64_t> &Buffer) {
  540. >     auto N = Expr.size();
  541.       switch (FromVersion) {
  542.       default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:546: error: NULL_DEREFERENCE
  pointer `DataEntry` last assigned on line 542 could be null and is dereferenced at line 546, column 7.
  544.   
  545.     // Do nothing if the pointer to import table is NULL.
  546. >   if (DataEntry->RelativeVirtualAddress == 0)
  547.       return std::error_code();
  548.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp:588: error: UNINITIALIZED_VALUE
  The value read from OpStart was never initialized.
  586.     }
  587.     if (Changed)
  588. >     for (unsigned i = OpStart; i < OpEnd; ++i)
  589.         MIB.add(OldMI->getOperand(i));
  590.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIPeepholeSDWA.cpp:654: error: DEAD_STORE
  The value written to &SrcSel (type int) is never used.
  652.         break;
  653.   
  654. >     SdwaSel SrcSel = DWORD;
  655.   
  656.       if (*Offset == 0 && *Width == 8)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:555: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  553.       if (I->getParent() == FuncInfo.MBB->getBasicBlock()) {
  554.         Opcode = I->getOpcode();
  555. >       U = I;
  556.       }
  557.     } else if (const auto *C = dyn_cast<ConstantExpr>(V)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:559: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  557.     } else if (const auto *C = dyn_cast<ConstantExpr>(V)) {
  558.       Opcode = C->getOpcode();
  559. >     U = C;
  560.     }
  561.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:551: error: DEAD_STORE
  The value written to &JT (type std::vector<llvm::MachineJumpTableEntry,std::allocator<llvm::MachineJumpTableEntry>> const &) is never used.
  549.     unsigned i = CPEntries.size();
  550.     auto MJTI = MF->getJumpTableInfo();
  551. >   const std::vector<MachineJumpTableEntry> &JT = MJTI->getJumpTables();
  552.   
  553.     MachineBasicBlock *LastCorrectlyNumberedBB = nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:549: error: DEAD_STORE
  The value written to &i (type unsigned int) is never used.
  547.   void ARMConstantIslands::doInitialJumpTablePlacement(
  548.       std::vector<MachineInstr *> &CPEMIs) {
  549. >   unsigned i = CPEntries.size();
  550.     auto MJTI = MF->getJumpTableInfo();
  551.     const std::vector<MachineJumpTableEntry> &JT = MJTI->getJumpTables();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:592: error: DEAD_STORE
  The value written to &i (type unsigned int) is never used.
  590.       MachineInstr *CPEMI = BuildMI(*JumpTableBB, JumpTableBB->begin(),
  591.                                     DebugLoc(), TII->get(JTOpcode))
  592. >                               .addImm(i++)
  593.                                 .addJumpTableIndex(JTI)
  594.                                 .addImm(Size);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmLexer.cpp:590: error: DEAD_STORE
  The value written to &OldIsAtStartOfStatement (type _Bool) is never used.
  588.     }
  589.     IsAtStartOfLine = false;
  590. >   bool OldIsAtStartOfStatement = IsAtStartOfStatement;
  591.     IsAtStartOfStatement = false;
  592.     switch (CurChar) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:558: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  556.           FuncInfo.MBBMap[I->getParent()] == FuncInfo.MBB) {
  557.         Opcode = I->getOpcode();
  558. >       U = I;
  559.       }
  560.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:562: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  560.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {
  561.       Opcode = C->getOpcode();
  562. >     U = C;
  563.     }
  564.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:554: error: DEAD_STORE
  The value written to &UAI (type llvm::Instruction*) is never used.
  552.     Instruction *UAI = Prev.getUnsafeAlgebraInst();
  553.     if (!UAI && isa<FPMathOperator>(I) && !I->isFast())
  554. >     UAI = I; // Found an unsafe (unvectorizable) algebra instruction.
  555.   
  556.     switch (I->getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.cpp:555: error: NULL_DEREFERENCE
  pointer `NA.Addr` last assigned on line 552 could be null and is dereferenced at line 555, column 5.
  553.   
  554.     while (NA.Addr != this) {
  555. >     assert(NA.Addr->getType() == NodeAttrs::Code);
  556.       if (NA.Addr->getKind() == NodeAttrs::Block)
  557.         return NA;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:686: error: UNINITIALIZED_VALUE
  The value read from CheckSourceLocation was never initialized.
  684.         CodeGenFunction::SanitizerScope SanScope(&CGF);
  685.   
  686. >       llvm::Constant *StaticData[] = {
  687.             llvm::ConstantInt::get(CGF.Int8Ty, CodeGenFunction::CFITCK_NVMFCall),
  688.             CheckSourceLocation,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:686: error: UNINITIALIZED_VALUE
  The value read from CheckTypeDesc was never initialized.
  684.         CodeGenFunction::SanitizerScope SanScope(&CGF);
  685.   
  686. >       llvm::Constant *StaticData[] = {
  687.             llvm::ConstantInt::get(CGF.Int8Ty, CodeGenFunction::CFITCK_NVMFCall),
  688.             CheckSourceLocation,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:566: error: DEAD_STORE
  The value written to &Indeterminant (type unsigned int) is never used.
  564.   
  565.     unsigned Shift  = 32;
  566. >   unsigned Indeterminant = ~0;  // bit mask marking indeterminant results
  567.     unsigned Opcode = N->getOpcode();
  568.     if (N->getNumOperands() != 2 ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp:561: error: NULL_DEREFERENCE
  pointer `MI` last assigned on line 560 could be null and is dereferenced at line 561, column 8.
  559.                                                unsigned VecIdx) {
  560.     MachineInstr *MI = MRI->getVRegDef(SrcReg);
  561. >   if (!MI->isCopyLike())
  562.       return SrcReg;
  563.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DataLayout.cpp:563: error: USE_AFTER_FREE
  pointer `Value` last assigned on line 562 was freed by call to `free()` at line 564, column 7 and is dereferenced or freed at line 563, column 7.
  561.       for (const auto &I : LayoutInfo) {
  562.         StructLayout *Value = I.second;
  563. >       Value->~StructLayout();
  564.         free(Value);
  565.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/FixedLenDecoderEmitter.cpp:573: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 573, column 24.
  571.       // group of instructions whose segment values are variable.
  572.       FilterChooserMap.insert(
  573. >         std::make_pair(-1U, llvm::make_unique<FilterChooser>(
  574.                                   Owner->AllInstructions, VariableInstructions,
  575.                                   Owner->Operands, BitValueArray, *Owner)));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:568: error: NULL_DEREFERENCE
  pointer `DataEntry` last assigned on line 566 could be null and is dereferenced at line 568, column 7.
  566.     if (getDataDirectory(COFF::DELAY_IMPORT_DESCRIPTOR, DataEntry))
  567.       return std::error_code();
  568. >   if (DataEntry->RelativeVirtualAddress == 0)
  569.       return std::error_code();
  570.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.cpp:584: error: NULL_DEREFERENCE
  pointer `MN.Addr` last assigned on line 583 could be null and is dereferenced at line 584, column 7.
  582.         M = MN;
  583.         MN = G.addr<NodeBase*>(M.Addr->getNext());
  584. >       assert(MN.Addr->getType() == NodeAttrs::Code);
  585.       } while (MN.Addr->getKind() == NodeAttrs::Phi);
  586.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:595: error: NULL_DEREFERENCE
  pointer `returned by getVRegDef` could be null and is dereferenced at line 595, column 46.
  593.              E = VarInfoVec.end(); I != E; ++I)
  594.         // Mark it alive only in the block we are representing.
  595. >       MarkVirtRegAliveInBlock(getVarInfo(*I),MRI->getVRegDef(*I)->getParent(),
  596.                                 MBB);
  597.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/BranchProbabilityInfo.cpp:602: error: UNINITIALIZED_VALUE
  The value read from SccNum was never initialized.
  600.         if (getSCCNum(*I, SccI) != SccNum)
  601.           ExitingEdges.push_back(I.getSuccessorIndex());
  602. >       else if (isSCCHeader(*I, SccNum, SccI))
  603.           BackEdges.push_back(I.getSuccessorIndex());
  604.         else

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp:573: error: DEAD_STORE
  The value written to &TII (type llvm::SIInstrInfo const *) is never used.
  571.     MachineRegisterInfo &MRI = MF.getRegInfo();
  572.     const SIRegisterInfo *TRI = ST.getRegisterInfo();
  573. >   const SIInstrInfo *TII = ST.getInstrInfo();
  574.     MDT = &getAnalysis<MachineDominatorTree>();
  575.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp:572: error: DEAD_STORE
  The value written to &TRI (type llvm::SIRegisterInfo const *) is never used.
  570.     const GCNSubtarget &ST = MF.getSubtarget<GCNSubtarget>();
  571.     MachineRegisterInfo &MRI = MF.getRegInfo();
  572. >   const SIRegisterInfo *TRI = ST.getRegisterInfo();
  573.     const SIInstrInfo *TII = ST.getInstrInfo();
  574.     MDT = &getAnalysis<MachineDominatorTree>();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Module.cpp:589: error: NULL_DEREFERENCE
  .
  587.       return {};
  588.     VersionTuple Result = VersionTuple(*Major);
  589. >   if (auto Minor = getVersionComponent(1)) {
  590.       Result = VersionTuple(*Major, *Minor);
  591.       if (auto Subminor = getVersionComponent(2)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:579: error: DEAD_STORE
  The value written to &LR (type unsigned int) is never used.
  577.     auto &HMFI = *MF.getInfo<HexagonMachineFunctionInfo>();
  578.     const HexagonRegisterInfo &HRI = *Subtarget.getRegisterInfo();
  579. >   unsigned LR = HRI.getRARegister();
  580.   
  581.     if ((Op.getOpcode() != ISD::INLINEASM &&

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:580: error: DEAD_STORE
  The value written to &b (type std::pair<int,llvm::APInt>*) is never used.
  578.   
  579.       if (V) {
  580. >       for (auto b : B)
  581.           OS << "(";
  582.         OS << "(" << *V << ") ";

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:638: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  636.     // Copy the predicate operands.
  637.     MIB.add(MI.getOperand(OpIdx++));
  638. >   MIB.add(MI.getOperand(OpIdx++));
  639.   
  640.     if (SrcIsKill && !SrcIsUndef) // Add an implicit kill for the super-reg.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:592: error: NULL_DEREFERENCE
  pointer `DataEntry` last assigned on line 588 could be null and is dereferenced at line 592, column 7.
  590.   
  591.     // Do nothing if the pointer to export table is NULL.
  592. >   if (DataEntry->RelativeVirtualAddress == 0)
  593.       return std::error_code();
  594.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:601: error: NULL_DEREFERENCE
  pointer `Preheader` last assigned on line 591 could be null and is dereferenced at line 601, column 3.
  599.     // Splice the instruction to the preheader.
  600.     MachineBasicBlock *MBB = MI->getParent();
  601. >   Preheader->splice(Preheader->getFirstTerminator(), MBB, MI);
  602.   
  603.     // Add register to livein list to all the BBs in the current loop since a

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:610: error: UNINITIALIZED_VALUE
  The value read from Value was never initialized.
  608.   
  609.       const DebugLoc &DL = Orig.getDebugLoc();
  610. >     BuildMI(MBB, I, DL, get(X86::MOV32ri))
  611.           .add(Orig.getOperand(0))
  612.           .addImm(Value);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:624: error: UNINITIALIZED_VALUE
  The value read from Opc was never initialized.
  622.       llvm_unreachable("Invalid register class");
  623.   
  624. >   BuildMI(MBB, I, DL, get(Opc), DstReg)
  625.       .addReg(FalseReg).addReg(TrueReg)
  626.       .addImm(CCValid).addImm(CCMask);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp:608: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 600 could be null and is dereferenced at line 608, column 25.
  606.         }
  607.         if (!Field.RecType) {
  608. >         Field.RecType = TI->getType();
  609.         } else {
  610.           RecTy *Ty = resolveTypes(Field.RecType, TI->getType());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp:610: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 600 could be null and is dereferenced at line 610, column 49.
  608.           Field.RecType = TI->getType();
  609.         } else {
  610. >         RecTy *Ty = resolveTypes(Field.RecType, TI->getType());
  611.           if (!Ty)
  612.             PrintFatalError(Twine("Field '") + Field.Name + "' of table '" +

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp:614: error: NULL_DEREFERENCE
  pointer `Ty` last assigned on line 610 could be null and is dereferenced at line 614, column 27.
  612.             PrintFatalError(Twine("Field '") + Field.Name + "' of table '" +
  613.                             Table.Name + "' has incompatible type: " +
  614. >                           Ty->getAsString() + " vs. " +
  615.                             TI->getType()->getAsString());
  616.           Field.RecType = Ty;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParsePragma.cpp:616: error: UNINITIALIZED_VALUE
  The value read from FPC was never initialized.
  614.     }
  615.   
  616. >   Actions.ActOnPragmaFPContract(FPC);
  617.     ConsumeAnnotationToken();
  618.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp:658: error: UNINITIALIZED_VALUE
  The value read from OpStart was never initialized.
  656.         llvm_unreachable("Unhandled instruction");
  657.   
  658. >     for (unsigned i = OpStart; i < OpEnd; ++i)
  659.         MIB.add(UseMI->getOperand(i));
  660.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:608: error: NULL_DEREFERENCE
  pointer `DataEntry` last assigned on line 606 could be null and is dereferenced at line 608, column 7.
  606.     if (getDataDirectory(COFF::BASE_RELOCATION_TABLE, DataEntry))
  607.       return std::error_code();
  608. >   if (DataEntry->RelativeVirtualAddress == 0)
  609.       return std::error_code();
  610.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp:724: error: UNINITIALIZED_VALUE
  The value read from NewCC was never initialized.
  722.         RHS = EmitSubregExt(MI, BB, RHS, isSignedCmp);
  723.   
  724. >     BuildMI(BB, DL, TII.get(NewCC)).addReg(LHS).addReg(RHS).addMBB(Copy1MBB);
  725.     } else {
  726.       int64_t imm32 = MI.getOperand(2).getImm();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp:729: error: UNINITIALIZED_VALUE
  The value read from NewCC was never initialized.
  727.       // sanity check before we build J*_ri instruction.
  728.       assert (isInt<32>(imm32));
  729. >     BuildMI(BB, DL, TII.get(NewCC))
  730.           .addReg(LHS).addImm(imm32).addMBB(Copy1MBB);
  731.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:625: error: DEAD_STORE
  The value written to &MO (type llvm::MachineOperand const &) is never used.
  623.       if (ExtraCode[1] != 0) return true; // Unknown modifier.
  624.   
  625. >     const MachineOperand &MO = MI->getOperand(OpNo);
  626.       switch (ExtraCode[0]) {
  627.       default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:624: error: DEAD_STORE
  The value written to &Node (type llvm::MDNode*) is never used.
  622.       auto *NewNode = Mapper.mapNode(Node);
  623.       Changed |= Node != NewNode;
  624. >     Node = NewNode;
  625.       return NewNode;
  626.     };

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp:626: error: UNINITIALIZED_VALUE
  The value read from Metrics.NumInlineCandidates was never initialized.
  624.     for (BasicBlock *BB : L->blocks())
  625.       Metrics.analyzeBasicBlock(BB, TTI, EphValues);
  626. >   NumCalls = Metrics.NumInlineCandidates;
  627.     NotDuplicatable = Metrics.notDuplicatable;
  628.     Convergent = Metrics.convergent;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp:630: error: UNINITIALIZED_VALUE
  The value read from Metrics.NumInsts was never initialized.
  628.     Convergent = Metrics.convergent;
  629.   
  630. >   unsigned LoopSize = Metrics.NumInsts;
  631.   
  632.     // Don't allow an estimate of size zero.  This would allows unrolling of loops

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp:628: error: UNINITIALIZED_VALUE
  The value read from Metrics.convergent was never initialized.
  626.     NumCalls = Metrics.NumInlineCandidates;
  627.     NotDuplicatable = Metrics.notDuplicatable;
  628. >   Convergent = Metrics.convergent;
  629.   
  630.     unsigned LoopSize = Metrics.NumInsts;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp:627: error: UNINITIALIZED_VALUE
  The value read from Metrics.notDuplicatable was never initialized.
  625.       Metrics.analyzeBasicBlock(BB, TTI, EphValues);
  626.     NumCalls = Metrics.NumInlineCandidates;
  627. >   NotDuplicatable = Metrics.notDuplicatable;
  628.     Convergent = Metrics.convergent;
  629.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParsePragma.cpp:639: error: UNINITIALIZED_VALUE
  The value read from FPC was never initialized.
  637.     }
  638.   
  639. >   Actions.ActOnPragmaFEnvAccess(FPC);
  640.     ConsumeAnnotationToken();
  641.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/SourceManager.cpp:624: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `IR` was dereferenced at line 623 and is tested for null at line 624, column 3.
  622.                                                             bool *Invalid) {
  623.     const SrcMgr::ContentCache *IR = getOrCreateContentCache(File);
  624. >   assert(IR && "getOrCreateContentCache() cannot return NULL");
  625.     return IR->getBuffer(Diag, *this, SourceLocation(), Invalid);
  626.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:630: error: NULL_DEREFERENCE
  pointer `DataEntry` last assigned on line 626 could be null and is dereferenced at line 630, column 7.
  628.   
  629.     // Do nothing if the RVA is NULL.
  630. >   if (DataEntry->RelativeVirtualAddress == 0)
  631.       return std::error_code();
  632.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:630: error: DEAD_STORE
  The value written to &Is32BitInt (type _Bool) is never used.
  628.   
  629.     const TargetRegisterClass *RC = MRI.getRegClass(SrcReg);
  630. >   bool Is32BitInt = RC->hasSuperClassEq(&PPC::GPRCRegClass);
  631.   
  632.     switch (VT.SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:627: error: DEAD_STORE
  The value written to &UseOffset (type _Bool) is never used.
  625.     assert(SrcReg && "Nothing to store!");
  626.     unsigned Opc;
  627. >   bool UseOffset = true;
  628.   
  629.     const TargetRegisterClass *RC = MRI.getRegClass(SrcReg);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:794: error: UNINITIALIZED_VALUE
  The value read from Encoding was never initialized.
  792.     // Bit size and offset of the type.
  793.     uint64_t Size = CGM.getContext().getTypeSize(BT);
  794. >   return DBuilder.createBasicType(BTName, Size, Encoding);
  795.   }
  796.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstructionSelector.cpp:668: error: UNINITIALIZED_VALUE
  The value read from NewOpc was never initialized.
  666.     }
  667.   
  668. >   I.setDesc(TII.get(NewOpc));
  669.     return constrainSelectedInstRegOperands(I, TII, TRI, RBI);
  670.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/SourceManager.cpp:632: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `IR` was dereferenced at line 631 and is tested for null at line 632, column 3.
  630.                                            bool DoNotFree) {
  631.     const SrcMgr::ContentCache *IR = getOrCreateContentCache(SourceFile);
  632. >   assert(IR && "getOrCreateContentCache() cannot return NULL");
  633.   
  634.     const_cast<SrcMgr::ContentCache *>(IR)->replaceBuffer(Buffer, DoNotFree);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/WasmObjectFile.cpp:645: error: DEAD_STORE
  The value written to &EntryCount (type unsigned int) is never used.
  643.   
  644.       uint32_t EntryCount = readVaruint32(Ctx);
  645. >     while (EntryCount--) {
  646.         unsigned Kind = readVaruint32(Ctx);
  647.         unsigned Index = readVaruint32(Ctx);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/WasmObjectFile.cpp:647: error: DEAD_STORE
  The value written to &Index (type unsigned int) is never used.
  645.       while (EntryCount--) {
  646.         unsigned Kind = readVaruint32(Ctx);
  647. >       unsigned Index = readVaruint32(Ctx);
  648.         switch (Kind) {
  649.         default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/DarwinAsmParser.cpp:640: error: DEAD_STORE
  The value written to &Sym (type llvm::MCSymbol*) is never used.
  638.   
  639.     // Handle the identifier as the key symbol.
  640. >   MCSymbol *Sym = getContext().getOrCreateSymbol(Name);
  641.   
  642.     if (getLexer().isNot(AsmToken::Comma))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/AliasSetTracker.cpp:640: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `AliasAnyAS` was dereferenced at line 638 and is tested for null at line 640, column 8.
  638.     AS.Access |= E;
  639.   
  640. >   if (!AliasAnyAS && (TotalMayAliasSetSize > SaturationThreshold)) {
  641.       // The AST is now saturated. From here on, we conservatively consider all
  642.       // pointers to alias each-other.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp:641: error: USE_AFTER_FREE
  pointer `LC` last assigned on line 639 was freed by call to `delete()` at line 641, column 5 and is dereferenced or freed at line 641, column 5.
  639.       LocationContext *LC = &*I;
  640.       ++I;
  641. >     delete LC;
  642.     }
  643.     Contexts.clear();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp:695: error: UNINITIALIZED_VALUE
  The value read from FinalState was never initialized.
  693.       LLVM_DEBUG(dbgs() << "X86WinEHState: " << BB->getName()
  694.                         << " InitialState=" << InitialState << '\n');
  695. >     LLVM_DEBUG(dbgs() << "X86WinEHState: " << BB->getName()
  696.                         << " FinalState=" << FinalState << '\n');
  697.       InitialStates.insert({BB, InitialState});

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:647: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Tok` was dereferenced at line 640 and is tested for null at line 647, column 38.
  645.       B.First->CanBreakBefore = true;
  646.       unsigned LengthA = A.Last->TotalLength + B.First->SpacesRequiredBefore;
  647. >     for (FormatToken *Tok = B.First; Tok; Tok = Tok->Next) {
  648.         Tok->TotalLength += LengthA;
  649.         A.Last = Tok;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp:703: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 702 could be null and is dereferenced at line 703, column 25.
  701.         unsigned UseReg = MI->getOperand(0).getReg();
  702.         MachineInstr *DefMI = MRI->getVRegDef(UseReg);
  703. >       unsigned DefReg = DefMI->getOperand(0).getReg();
  704.         int DefIdx = SwapMap[DefMI];
  705.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsConstantIslandPass.cpp:672: error: DEAD_STORE
  The value written to &Scale (type unsigned int) is never used.
  670.           bool isCond = false;
  671.           unsigned Bits = 0;
  672. >         unsigned Scale = 1;
  673.           int UOpc = Opc;
  674.           switch (Opc) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsConstantIslandPass.cpp:752: error: DEAD_STORE
  The value written to &Scale (type unsigned int) is never used.
  750.             // Basic size info comes from the TSFlags field.
  751.             unsigned Bits = 0;
  752. >           unsigned Scale = 1;
  753.             bool NegOk = false;
  754.             unsigned LongFormBits = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsConstantIslandPass.cpp:673: error: DEAD_STORE
  The value written to &UOpc (type int) is never used.
  671.           unsigned Bits = 0;
  672.           unsigned Scale = 1;
  673. >         int UOpc = Opc;
  674.           switch (Opc) {
  675.           default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp:740: error: UNINITIALIZED_VALUE
  The value read from ScalarStoreOp was never initialized.
  738.         }
  739.   
  740. >       BuildMI(*MBB, MI, DL, TII->get(ScalarStoreOp))
  741.           .addReg(SubReg, getKillRegState(IsKill)) // sdata
  742.           .addReg(MFI->getScratchRSrcReg())        // sbase

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:655: error: NULL_DEREFERENCE
  pointer `DataEntry` last assigned on line 651 could be null and is dereferenced at line 655, column 7.
  653.   
  654.     // Do nothing if the RVA is NULL.
  655. >   if (DataEntry->RelativeVirtualAddress == 0)
  656.       return std::error_code();
  657.     uintptr_t IntPtr = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp:654: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<llvm::SystemZAsmPrinter>*) is never used.
  652.   // Force static initialization.
  653.   extern "C" void LLVMInitializeSystemZAsmPrinter() {
  654. >   RegisterAsmPrinter<SystemZAsmPrinter> X(getTheSystemZTarget());
  655.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp:657: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getWeight` of type unsigned int at line 657, column 16.
  655.                                        const MachineRegisterInfo *MRI) {
  656.     PSetIterator PSetI = MRI->getPressureSets(RegUnit);
  657. >   int Weight = IsDec ? -PSetI.getWeight() : PSetI.getWeight();
  658.     for (; PSetI.isValid(); ++PSetI) {
  659.       // Find an existing entry in the pressure diff for this PSet.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:727: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  725.     // Copy the predicate operands.
  726.     MIB.add(MI.getOperand(OpIdx++));
  727. >   MIB.add(MI.getOperand(OpIdx++));
  728.   
  729.     // Copy the super-register source to be an implicit source.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/Diagnostic.cpp:670: error: DIVIDE_BY_ZERO
  Expression `Arg` could be zero at line 670, column 7.
  668.         assert(*Start == '=' && "Bad plural expression syntax: expected =");
  669.         ++Start;
  670. >       unsigned ValMod = ValNo % Arg;
  671.         if (TestPluralRange(ValMod, Start, End))
  672.           return true;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineCallAndReturn.cpp:697: error: NULL_DEREFERENCE
  pointer `CallerSFC` last assigned on line 662 could be null and is dereferenced at line 697, column 38.
  695.   
  696.       // Inlining constructors requires including initializers in the CFG.
  697. >     const AnalysisDeclContext *ADC = CallerSFC->getAnalysisDeclContext();
  698.       assert(ADC->getCFGBuildOptions().AddInitializers && "No CFG initializers");
  699.       (void)ADC;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/CodeGenInstruction.cpp:675: error: NULL_DEREFERENCE
  pointer `DI` last assigned on line 670 could be null and is dereferenced at line 675, column 34.
  673.                       "result of inst alias should be an instruction");
  674.   
  675. >   ResultInst = &T.getInstruction(DI->getDef());
  676.   
  677.     // NameClass - If argument names are repeated, we need to verify they have

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCExpr.cpp:737: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getConstant` of type unsigned long long at line 737, column 13.
  735.   
  736.         // The cast avoids undefined behavior if the constant is INT64_MIN.
  737. >       Res = MCValue::get(Value.getSymB(), Value.getSymA(),
  738.                            -(uint64_t)Value.getConstant());
  739.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp:671: error: NULL_DEREFERENCE
  pointer `Term` last assigned on line 670 could be null and is dereferenced at line 671, column 10.
  669.     const BasicBlock *BB = FuncInfo->MBB->getBasicBlock();
  670.     const Instruction *Term = BB->getTerminator();
  671. >   return Term->getMetadata("amdgpu.uniform") ||
  672.            Term->getMetadata("structurizecfg.uniform");
  673.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:680: error: DEAD_STORE
  The value written to &Dst (type clang::CFGBlock const *) is never used.
  678.     const LocationContext *LC = N->getLocationContext();
  679.     const CFGBlock *Src = BE.getSrc();
  680. >   const CFGBlock *Dst = BE.getDst();
  681.     const Stmt *T = Src->getTerminator();
  682.     if (!T)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DataLayout.cpp:726: error: UNINITIALIZED_VALUE
  The value read from AlignType was never initialized.
  724.     }
  725.   
  726. >   return getAlignmentInfo(AlignType, getTypeSizeInBits(Ty), abi_or_pref, Ty);
  727.   }
  728.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:796: error: DEAD_STORE
  The value written to &ProposedColor (type int) is never used.
  794.           FormingGroup.clear();
  795.           Color = ++NextReservedID;
  796. >         ProposedColor = Color;
  797.           Count = 0;
  798.         }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/TokenAnnotator.cpp:682: error: NULL_DEREFERENCE
  pointer `Tok` last assigned on line 680 could be null and is dereferenced at line 682, column 13.
  680.       FormatToken *Tok = CurrentToken;
  681.       next();
  682. >     switch (Tok->Tok.getKind()) {
  683.       case tok::plus:
  684.       case tok::minus:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:710: error: DEAD_STORE
  The value written to &Scale (type unsigned int) is never used.
  708.           bool isCond = false;
  709.           unsigned Bits = 0;
  710. >         unsigned Scale = 1;
  711.           int UOpc = Opc;
  712.           switch (Opc) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:770: error: DEAD_STORE
  The value written to &Scale (type unsigned int) is never used.
  768.             // Basic size info comes from the TSFlags field.
  769.             unsigned Bits = 0;
  770. >           unsigned Scale = 1;
  771.             bool NegOk = false;
  772.             bool IsSoImm = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:711: error: DEAD_STORE
  The value written to &UOpc (type int) is never used.
  709.           unsigned Bits = 0;
  710.           unsigned Scale = 1;
  711. >         int UOpc = Opc;
  712.           switch (Opc) {
  713.           default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:687: error: DEAD_STORE
  The value written to &P (type int) is never used.
  685.                               RecurrenceDescriptor::MinMaxRecurrenceKind RK,
  686.                               Value *Left, Value *Right) {
  687. >   CmpInst::Predicate P = CmpInst::ICMP_NE;
  688.     switch (RK) {
  689.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp:691: error: NULL_DEREFERENCE
  pointer `MI` last assigned on line 690 could be null and is dereferenced at line 691, column 9.
  689.     for (;;) {
  690.       MI = MRI->getUniqueVRegDef(Reg);
  691. >     if (MI->getOpcode() != AMDGPU::COPY)
  692.         break;
  693.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:695: error: NULL_DEREFERENCE
  pointer `DefPhiMI` last assigned on line 690 could be null and is dereferenced at line 695, column 36.
  693.             // Note: the vregs only show up at odd indices position of PHI Node,
  694.             // the even indices position save the BB info.
  695. >           for (unsigned i = 1; i < DefPhiMI->getNumOperands(); i += 2) {
  696.               MachineInstr *LiMI =
  697.                   getVRegDefOrNull(&DefPhiMI->getOperand(i), MRI);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:699: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression FrameSize` of type unsigned int at line 699, column 3.
  697.     bool HasBP = RegInfo->hasBasePointer(MF);
  698.     unsigned FrameSize = determineFrameLayout(MF);
  699. >   int NegFrameSize = -FrameSize;
  700.     bool IsLargeFrame = !isInt<16>(NegFrameSize);
  701.     MachineFrameInfo &MFI = MF.getFrameInfo();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:724: error: UNINITIALIZED_VALUE
  The value read from SRVK was never initialized.
  722.   
  723.     MCSymbol *sym = MCInstLowering.GetSymbolFromOperand(MI.getOperand(3));
  724. >   const MCSymbolRefExpr *symRef = MCSymbolRefExpr::create(sym, SRVK, context);
  725.   
  726.     MCInst LEA;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:715: error: NULL_DEREFERENCE
  pointer `returned by getTerminator` could be null and is dereferenced at line 715, column 8.
  713.     // return false for them.
  714.     if (!PredBB ||
  715. >       !PredBB->getTerminator()->getMetadata(LLVMContext::MD_make_implicit))
  716.       return false;
  717.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp:713: error: NULL_DEREFERENCE
  pointer `LaneSelectOp` last assigned on line 710 could be null and is dereferenced at line 713, column 8.
  711.         TII->getNamedOperand(*RWLane, AMDGPU::OpName::src1);
  712.   
  713. >   if (!LaneSelectOp->isReg() || !TRI->isSGPRReg(MRI, LaneSelectOp->getReg()))
  714.       return 0;
  715.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:723: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  721.           FuncInfo.MBBMap[I->getParent()] == FuncInfo.MBB) {
  722.         Opcode = I->getOpcode();
  723. >       U = I;
  724.       }
  725.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:727: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  725.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(Obj)) {
  726.       Opcode = C->getOpcode();
  727. >     U = C;
  728.     }
  729.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp:724: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<llvm::X86AsmPrinter>*) is never used.
  722.   // Force static initialization.
  723.   extern "C" void LLVMInitializeX86AsmPrinter() {
  724. >   RegisterAsmPrinter<X86AsmPrinter> X(getTheX86_32Target());
  725.     RegisterAsmPrinter<X86AsmPrinter> Y(getTheX86_64Target());
  726.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp:725: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<llvm::X86AsmPrinter>*) is never used.
  723.   extern "C" void LLVMInitializeX86AsmPrinter() {
  724.     RegisterAsmPrinter<X86AsmPrinter> X(getTheX86_32Target());
  725. >   RegisterAsmPrinter<X86AsmPrinter> Y(getTheX86_64Target());
  726.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:735: error: NULL_DEREFERENCE
  pointer `Previous` last assigned on line 728 could be null and is dereferenced at line 735, column 39.
  733.   
  734.     const FormatToken *PreviousNonComment = Current.getPreviousNonComment();
  735. >   const FormatToken *NextNonComment = Previous.getNextNonComment();
  736.     if (!NextNonComment)
  737.       NextNonComment = &Current;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp:743: error: UNINITIALIZED_VALUE
  The value read from CmpOpc was never initialized.
  741.     else
  742.       llvm_unreachable("immediate field not usable");
  743. >   BuildMI(*BB, MI, MI.getDebugLoc(), TII->get(CmpOpc)).addReg(regX).addImm(imm);
  744.     BuildMI(*BB, MI, MI.getDebugLoc(), TII->get(BtOpc)).addMBB(target);
  745.     MI.eraseFromParent(); // The pseudo instruction is gone now.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MachObjectWriter.cpp:968: error: UNINITIALIZED_VALUE
  The value read from End was never initialized.
  966.         report_fatal_error("Data region not terminated");
  967.   
  968. >     LLVM_DEBUG(dbgs() << "data in code region-- kind: " << Data->Kind
  969.                         << "  start: " << Start << "(" << Data->Start->getName()
  970.                         << ")"

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:745: error: DEAD_STORE
  The value written to &BlockNumber (type int) is never used.
  743.     StringRef GroupDescription = "Instruction Selection and Scheduling";
  744.     std::string BlockName;
  745. >   int BlockNumber = -1;
  746.     (void)BlockNumber;
  747.     bool MatchFilterBB = false; (void)MatchFilterBB;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:767: error: DEAD_STORE
  The value written to &BlockNumber (type int) is never used.
  765.   #endif
  766.     {
  767. >     BlockNumber = FuncInfo->MBB->getNumber();
  768.       BlockName =
  769.           (MF->getName() + ":" + FuncInfo->MBB->getBasicBlock()->getName()).str();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:770: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  768.     // Copy the predicate operands.
  769.     MIB.add(MI.getOperand(OpIdx++));
  770. >   MIB.add(MI.getOperand(OpIdx++));
  771.   
  772.     // Add an implicit kill and use for the super-reg.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp:757: error: NULL_DEREFERENCE
  pointer `MAI` last accessed on line 753 could be null and is dereferenced at line 757, column 9.
  755.   
  756.     if (ByteAlignment != 0) {
  757. >     if (MAI->getCOMMDirectiveAlignmentIsInBytes())
  758.         OS << ',' << ByteAlignment;
  759.       else

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDILCFGStructurizer.cpp:803: error: DEAD_STORE
  The value written to &ContNextScc (type _Bool) is never used.
  801.         ++It;
  802.   
  803. >       bool ContNextScc = true;
  804.         if (It == E
  805.             || getSCCNum(SccBeginMBB) != getSCCNum(*It)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.cpp:778: error: UNINITIALIZED_VALUE
  The value read from TrigNode was never initialized.
  776.       llvm_unreachable("Wrong trig opcode");
  777.     }
  778. >   SDValue TrigVal = DAG.getNode(TrigNode, DL, VT,
  779.         DAG.getNode(ISD::FADD, DL, VT, FractPart,
  780.           DAG.getConstantFP(-0.5, DL, MVT::f32)));

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:762: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 762, column 62.
  760.       const TemplateArgument *PartialPackArgs = nullptr;
  761.       unsigned NumPartialPackArgs = 0;
  762. >     std::pair<unsigned, unsigned> PartialPackDepthIndex(-1u, -1u);
  763.       if (auto *Scope = S.CurrentInstantiationScope)
  764.         if (auto *Partial = Scope->getPartiallySubstitutedPack(

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:762: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 762, column 62.
  760.       const TemplateArgument *PartialPackArgs = nullptr;
  761.       unsigned NumPartialPackArgs = 0;
  762. >     std::pair<unsigned, unsigned> PartialPackDepthIndex(-1u, -1u);
  763.       if (auto *Scope = S.CurrentInstantiationScope)
  764.         if (auto *Partial = Scope->getPartiallySubstitutedPack(

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:763: error: NULL_DEREFERENCE
  pointer `FromB` could be null and is dereferenced at line 763, column 37.
  761.         unsigned PredR, bool IfTrue) {
  762.     LLVM_DEBUG(dbgs() << "Predicating block " << PrintMB(FromB) << "\n");
  763. >   MachineBasicBlock::iterator End = FromB->getFirstTerminator();
  764.     MachineBasicBlock::iterator I, NextI;
  765.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:772: error: NULL_DEREFERENCE
  pointer `DefMI` last assigned on line 770 could be null and is dereferenced at line 772, column 46.
  770.       const MachineInstr *DefMI = MTM.MRI->getVRegDef(LIR.Reg);
  771.       // Ignore dependencies outside the current trace.
  772. >     const TraceBlockInfo &DefTBI = BlockInfo[DefMI->getParent()->getNumber()];
  773.       if (!DefTBI.isUsefulDominator(TBI))
  774.         continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp:772: error: NULL_DEREFERENCE
  pointer `MAI` last accessed on line 768 could be null and is dereferenced at line 772, column 13.
  770.   
  771.     if (ByteAlign > 1) {
  772. >     switch (MAI->getLCOMMDirectiveAlignmentType()) {
  773.       case LCOMM::NoAlignment:
  774.         llvm_unreachable("alignment not supported on .lcomm!");

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseTemplate.cpp:771: error: DEAD_STORE
  The value written to &ReplacementStr (type char const *) is never used.
  769.     // What will be left once we've consumed the '>'.
  770.     tok::TokenKind RemainingToken;
  771. >   const char *ReplacementStr = "> >";
  772.     bool MergeWithNextToken = false;
  773.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:784: error: NULL_DEREFERENCE
  pointer `returned by getConstIntStepValue` could be null and is dereferenced at line 784, column 3.
  782.   
  783.     // Check the Step Value. It should be non-zero integer value.
  784. >   assert((!getConstIntStepValue() || !getConstIntStepValue()->isZero()) &&
  785.            "Step value is zero");
  786.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:772: error: DEAD_STORE
  The value written to &Options (type llvm::TargetOptions&) is never used.
  770.   static SDValue GetNegatedExpression(SDValue Op, SelectionDAG &DAG,
  771.                                       bool LegalOperations, unsigned Depth = 0) {
  772. >   const TargetOptions &Options = DAG.getTarget().Options;
  773.     // fneg is removable even if it has multiple uses.
  774.     if (Op.getOpcode() == ISD::FNEG) return Op.getOperand(0);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:781: error: DEAD_STORE
  The value written to &BaseReg (type unsigned int) is never used.
  779.     unsigned Opc, BaseReg, ScaleVal, IndexReg, Displacement, SegmentReg;
  780.     Opc = IndexReg = Displacement = SegmentReg = 0;
  781. >   BaseReg = X86::RAX;
  782.     ScaleVal = 1;
  783.     switch (NumBytes) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:802: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  800.       NopSize = 4;
  801.       Opc = X86::NOOPL;
  802. >     Displacement = 8;
  803.       break;
  804.     case 5:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:807: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  805.       NopSize = 5;
  806.       Opc = X86::NOOPL;
  807. >     Displacement = 8;
  808.       IndexReg = X86::RAX;
  809.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:813: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  811.       NopSize = 6;
  812.       Opc = X86::NOOPW;
  813. >     Displacement = 8;
  814.       IndexReg = X86::RAX;
  815.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:819: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  817.       NopSize = 7;
  818.       Opc = X86::NOOPL;
  819. >     Displacement = 512;
  820.       break;
  821.     case 8:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:824: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  822.       NopSize = 8;
  823.       Opc = X86::NOOPL;
  824. >     Displacement = 512;
  825.       IndexReg = X86::RAX;
  826.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:830: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  828.       NopSize = 9;
  829.       Opc = X86::NOOPW;
  830. >     Displacement = 512;
  831.       IndexReg = X86::RAX;
  832.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:836: error: DEAD_STORE
  The value written to &Displacement (type unsigned int) is never used.
  834.       NopSize = 10;
  835.       Opc = X86::NOOPW;
  836. >     Displacement = 512;
  837.       IndexReg = X86::RAX;
  838.       SegmentReg = X86::CS;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:808: error: DEAD_STORE
  The value written to &IndexReg (type unsigned int) is never used.
  806.       Opc = X86::NOOPL;
  807.       Displacement = 8;
  808. >     IndexReg = X86::RAX;
  809.       break;
  810.     case 6:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:814: error: DEAD_STORE
  The value written to &IndexReg (type unsigned int) is never used.
  812.       Opc = X86::NOOPW;
  813.       Displacement = 8;
  814. >     IndexReg = X86::RAX;
  815.       break;
  816.     case 7:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:825: error: DEAD_STORE
  The value written to &IndexReg (type unsigned int) is never used.
  823.       Opc = X86::NOOPL;
  824.       Displacement = 512;
  825. >     IndexReg = X86::RAX;
  826.       break;
  827.     case 9:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:831: error: DEAD_STORE
  The value written to &IndexReg (type unsigned int) is never used.
  829.       Opc = X86::NOOPW;
  830.       Displacement = 512;
  831. >     IndexReg = X86::RAX;
  832.       break;
  833.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:837: error: DEAD_STORE
  The value written to &IndexReg (type unsigned int) is never used.
  835.       Opc = X86::NOOPW;
  836.       Displacement = 512;
  837. >     IndexReg = X86::RAX;
  838.       SegmentReg = X86::CS;
  839.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:782: error: DEAD_STORE
  The value written to &ScaleVal (type unsigned int) is never used.
  780.     Opc = IndexReg = Displacement = SegmentReg = 0;
  781.     BaseReg = X86::RAX;
  782. >   ScaleVal = 1;
  783.     switch (NumBytes) {
  784.     case 0:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:838: error: DEAD_STORE
  The value written to &SegmentReg (type unsigned int) is never used.
  836.       Displacement = 512;
  837.       IndexReg = X86::RAX;
  838. >     SegmentReg = X86::CS;
  839.       break;
  840.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp:789: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression (1+i)` of type unsigned int at line 789, column 7.
  787.       if (!j)
  788.         // The new filter coincides with range [i, end) of the existing filter.
  789. >       return -(1 + i);
  790.   
  791.   try_next:;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:879: error: UNINITIALIZED_VALUE
  The value read from Opcode was never initialized.
  877.       llvm_unreachable("Impossible reg-to-reg copy");
  878.   
  879. >   BuildMI(MBB, MBBI, DL, get(Opcode), DestReg)
  880.       .addReg(SrcReg, getKillRegState(KillSrc));
  881.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp:782: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<llvm::HexagonAsmPrinter>*) is never used.
  780.   
  781.   extern "C" void LLVMInitializeHexagonAsmPrinter() {
  782. >   RegisterAsmPrinter<HexagonAsmPrinter> X(getTheHexagonTarget());
  783.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:827: error: UNINITIALIZED_VALUE
  The value read from Addend was never initialized.
  825.     unsigned TmpReg = MRI->createVirtualRegister(PromoteRC);
  826.     auto AddI =
  827. >       BuildMI(MBB, MI.getIterator(), MI.getDebugLoc(), TII->get(X86::ADD8ri))
  828.             .addDef(TmpReg, RegState::Dead)
  829.             .addReg(CondReg)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:818: error: UNINITIALIZED_VALUE
  The value read from Cond was never initialized.
  816.     // arithmetic. We require exactly this flag to simplify the arithmetic
  817.     // required to materialize it back into the flag.
  818. >   unsigned &CondReg = CondRegs[Cond];
  819.     if (!CondReg)
  820.       CondReg = promoteCondToReg(TestMBB, TestPos, TestLoc, Cond);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:820: error: UNINITIALIZED_VALUE
  The value read from Cond was never initialized.
  818.     unsigned &CondReg = CondRegs[Cond];
  819.     if (!CondReg)
  820. >     CondReg = promoteCondToReg(TestMBB, TestPos, TestLoc, Cond);
  821.   
  822.     MachineBasicBlock &MBB = *MI.getParent();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsSEISelDAGToDAG.cpp:1031: error: DEAD_STORE
  The value written to &ABI (type llvm::MipsABIInfo const &) is never used.
  1029.       // 0x00000000, 0x00000001, 0x00000000, 0x00000001 } but 'ldi.d wd, 1' can.
  1030.   
  1031. >     const MipsABIInfo &ABI =
  1032.           static_cast<const MipsTargetMachine &>(TM).getABI();
  1033.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:867: error: NULL_DEREFERENCE
  pointer `returned by findCalleeFunctionSamples` could be null and is dereferenced at line 867, column 9.
  865.           }
  866.         } else if (IsThinLTOPreLink) {
  867. >         findCalleeFunctionSamples(*I)->findInlinedFunctions(
  868.               InlinedGUIDs, F.getParent(), PSI->getOrCompHotCountThreshold());
  869.         }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:807: error: DEAD_STORE
  The value written to &TS (type llvm::AArch64TargetStreamer*) is never used.
  805.     }
  806.   
  807. >   AArch64TargetStreamer *TS =
  808.       static_cast<AArch64TargetStreamer *>(OutStreamer->getTargetStreamer());
  809.     // Do any manual lowerings.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:844: error: DEAD_STORE
  The value written to &Fixit1 (type clang::FixItHint*) is never used.
  842.           S.getLangOpts().CPlusPlus ? (I->Output ? "true" : "false")
  843.                                     : (I->Output ? "1" : "0");
  844. >     FixItHint Fixit1, Fixit2;
  845.   
  846.       switch (Term ? Term->getStmtClass() : Stmt::DeclStmtClass) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:844: error: DEAD_STORE
  The value written to &Fixit2 (type clang::FixItHint*) is never used.
  842.           S.getLangOpts().CPlusPlus ? (I->Output ? "true" : "false")
  843.                                     : (I->Output ? "1" : "0");
  844. >     FixItHint Fixit1, Fixit2;
  845.   
  846.       switch (Term ? Term->getStmtClass() : Stmt::DeclStmtClass) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:841: error: DEAD_STORE
  The value written to &FixitStr (type char const *) is never used.
  839.       // and branch 1 is taken if the condition is false.
  840.       int RemoveDiagKind = -1;
  841. >     const char *FixitStr =
  842.           S.getLangOpts().CPlusPlus ? (I->Output ? "true" : "false")
  843.                                     : (I->Output ? "1" : "0");

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:835: error: DEAD_STORE
  The value written to &Range (type clang::SourceRange*) is never used.
  833.       unsigned DiagKind;
  834.       StringRef Str;
  835. >     SourceRange Range;
  836.   
  837.       // FixIts to suppress the diagnostic by removing the dead condition.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:840: error: DEAD_STORE
  The value written to &RemoveDiagKind (type int) is never used.
  838.       // For all binary terminators, branch 0 is taken if the condition is true,
  839.       // and branch 1 is taken if the condition is false.
  840. >     int RemoveDiagKind = -1;
  841.       const char *FixitStr =
  842.           S.getLangOpts().CPlusPlus ? (I->Output ? "true" : "false")

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:834: error: DEAD_STORE
  The value written to &Str (type llvm::StringRef*) is never used.
  832.       // Information used when building the diagnostic.
  833.       unsigned DiagKind;
  834. >     StringRef Str;
  835.       SourceRange Range;
  836.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:829: error: DEAD_STORE
  The value written to &User (type clang::Expr const *) is never used.
  827.       assert(Use.getKind() == UninitUse::Sometimes);
  828.   
  829. >     const Expr *User = Use.getUser();
  830.       const Stmt *Term = I->Terminator;
  831.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:1022: error: DEAD_STORE
  The value written to &Modified (type _Bool) is never used.
  1020.           TrackedWaitcntSet.erase(OldWaitcntInstr);
  1021.           OldWaitcntInstr->eraseFromParent();
  1022. >         Modified = true;
  1023.         } else {
  1024.           int64_t Imm = OldWaitcntInstr->getOperand(0).getImm();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:839: error: DEAD_STORE
  The value written to &HasSPE (type _Bool) is never used.
  837.     long Imm = 0;
  838.     bool UseImm = false;
  839. >   const bool HasSPE = PPCSubTarget->hasSPE();
  840.   
  841.     // Only 16-bit integer constants can be represented in compares for

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:867: error: DEAD_STORE
  The value written to &RC1 (type llvm::TargetRegisterClass const *) is never used.
  865.     bool NeedsExt = false;
  866.   
  867. >   auto RC1 = MRI.getRegClass(SrcReg1);
  868.     auto RC2 = SrcReg2 != 0 ? MRI.getRegClass(SrcReg2) : nullptr;
  869.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:868: error: DEAD_STORE
  The value written to &RC2 (type llvm::TargetRegisterClass const *) is never used.
  866.   
  867.     auto RC1 = MRI.getRegClass(SrcReg1);
  868. >   auto RC2 = SrcReg2 != 0 ? MRI.getRegClass(SrcReg2) : nullptr;
  869.   
  870.     switch (SrcVT.SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp:903: error: UNINITIALIZED_VALUE
  The value read from ScalarLoadOp was never initialized.
  901.   
  902.         auto MIB =
  903. >         BuildMI(*MBB, MI, DL, TII->get(ScalarLoadOp), SubReg)
  904.           .addReg(MFI->getScratchRSrcReg()) // sbase
  905.           .addReg(OffsetReg, RegState::Kill)                // soff

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLambda.cpp:848: error: DEAD_STORE
  The value written to &ExplicitResultType (type _Bool) is never used.
  846.     TypeSourceInfo *MethodTyInfo;
  847.     bool ExplicitParams = true;
  848. >   bool ExplicitResultType = true;
  849.     bool ContainsUnexpandedParameterPack = false;
  850.     SourceLocation EndLoc;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLambda.cpp:1042: error: UNINITIALIZED_VALUE
  The value read from InitStyle was never initialized.
  1040.           break;
  1041.         }
  1042. >       Var = createLambdaInitCaptureVarDecl(C->Loc, C->InitCaptureType.get(),
  1043.                                              C->Id, InitStyle, C->Init.get());
  1044.         // C++1y [expr.prim.lambda]p11:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp:837: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `E.Data.GVInit.GV` could be dangling and is dereferenced or freed at line 837, column 7.
  835.       switch (E.Kind) {
  836.       case WorklistEntry::MapGlobalInit:
  837. >       E.Data.GVInit.GV->setInitializer(mapConstant(E.Data.GVInit.Init));
  838.         remapGlobalObjectMetadata(*E.Data.GVInit.GV);
  839.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp:850: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `E.Data.GlobalAliasee.GA` could be dangling and is dereferenced or freed at line 850, column 7.
  848.       }
  849.       case WorklistEntry::MapGlobalAliasee:
  850. >       E.Data.GlobalAliasee.GA->setAliasee(
  851.             mapConstant(E.Data.GlobalAliasee.Aliasee));
  852.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:909: error: DEAD_STORE
  The value written to &LV (type llvm::LoadInst*) is never used.
  907.         // Replace the cmp X, 0 with a use of the bool value.
  908.         // Sink the load to where the compare was, if atomic rules allow us to.
  909. >       Value *LV = new LoadInst(InitBool->getValueType(), InitBool,
  910.                                  InitBool->getName() + ".val", false, 0,
  911.                                  LI->getOrdering(), LI->getSyncScopeID(),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:918: error: DEAD_STORE
  The value written to &A (type llvm::Value*) is never used.
  916.     if (auto *ICI = dyn_cast<ICmpInst>(Cond)) {
  917.       ICmpInst::Predicate Pred = ICI->getPredicate();
  918. >     Value *A = ICI->getOperand(0);
  919.       if (ConstantInt *CIBase = dyn_cast<ConstantInt>(ICI->getOperand(1))) {
  920.         auto addConstants = [](ConstantInt *A, ConstantInt *B) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:851: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  849.           FuncInfo.MBBMap[I->getParent()] == FuncInfo.MBB) {
  850.         Opcode = I->getOpcode();
  851. >       U = I;
  852.       }
  853.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(V)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:855: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  853.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(V)) {
  854.       Opcode = C->getOpcode();
  855. >     U = C;
  856.     }
  857.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:853: error: DEAD_STORE
  The value written to &Dest (type llvm::MachineOperand&) is never used.
  851.     MachineFunction &MF = *MI.getParent()->getParent();
  852.     // All instructions input are two-addr instructions.  Get the known operands.
  853. >   const MachineOperand &Dest = MI.getOperand(0);
  854.     const MachineOperand &Src = MI.getOperand(1);
  855.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:867: error: DEAD_STORE
  The value written to &Is64Bit (type _Bool) is never used.
  865.   
  866.     MachineInstr *NewMI = nullptr;
  867. >   bool Is64Bit = Subtarget.is64Bit();
  868.   
  869.     bool Is8BitOp = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:851: error: DEAD_STORE
  The value written to &MF (type llvm::MachineFunction&) is never used.
  849.       return nullptr;
  850.   
  851. >   MachineFunction &MF = *MI.getParent()->getParent();
  852.     // All instructions input are two-addr instructions.  Get the known operands.
  853.     const MachineOperand &Dest = MI.getOperand(0);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/PPDirectives.cpp:854: error: DEAD_STORE
  The value written to &ImmediatelyAfterTopLevelIfndef (type _Bool) is never used.
  852.     if (CurLexer) CurLexer->SetKeepWhitespaceMode(false);
  853.   
  854. >   bool ImmediatelyAfterTopLevelIfndef =
  855.         CurPPLexer->MIOpt.getImmediatelyAfterTopLevelIfndef();
  856.     CurPPLexer->MIOpt.resetImmediatelyAfterTopLevelIfndef();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/PPDirectives.cpp:863: error: DEAD_STORE
  The value written to &ReadAnyTokensBeforeDirective (type _Bool) is never used.
  861.     // work, we have to remember if we had read any tokens *before* this
  862.     // pp-directive.
  863. >   bool ReadAnyTokensBeforeDirective =CurPPLexer->MIOpt.getHasReadAnyTokensVal();
  864.   
  865.     // Save the '#' token in case we need to return it later.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:936: error: UNINITIALIZED_VALUE
  The value read from NewImm was never initialized.
  934.     if (NewImm == 0 || NewImm == OrigMask) {
  935.       New = TLO.DAG.getNode(Op.getOpcode(), DL, VT, Op.getOperand(0),
  936. >                           TLO.DAG.getConstant(NewImm, DL, VT));
  937.     // Otherwise, create a machine node so that target independent DAG combine
  938.     // doesn't undo this optimization.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:940: error: UNINITIALIZED_VALUE
  The value read from NewImm was never initialized.
  938.     // doesn't undo this optimization.
  939.     } else {
  940. >     Enc = AArch64_AM::encodeLogicalImmediate(NewImm, Size);
  941.       SDValue EncConst = TLO.DAG.getTargetConstant(Enc, DL, VT);
  942.       New = SDValue(

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Linker/IRMover.cpp:857: error: NULL_DEREFERENCE
  pointer `returned by getAggregateElement` could be null and is dereferenced at line 857, column 33.
  855.       auto It = remove_if(SrcElements, [this](Constant *E) {
  856.         auto *Key =
  857. >           dyn_cast<GlobalValue>(E->getAggregateElement(2)->stripPointerCasts());
  858.         if (!Key)
  859.           return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:863: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression MaxAlign` of type unsigned long long at line 863, column 3.
  861.                                             const DebugLoc &DL, unsigned Reg,
  862.                                             uint64_t MaxAlign) const {
  863. >   uint64_t Val = -MaxAlign;
  864.     unsigned AndOp = getANDriOpcode(Uses64BitFramePtr, Val);
  865.     MachineInstr *MI = BuildMI(MBB, MBBI, DL, TII.get(AndOp), Reg)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp:871: error: UNINITIALIZED_VALUE
  The value read from Version was never initialized.
  869.           !VersionText.slice(1, StringRef::npos).getAsInteger(10, Version)) {
  870.         if (Version > MaxVersion) {
  871. >         MaxVersion = Version;
  872.           MaxVersionString = VersionText;
  873.         }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:868: error: NULL_DEREFERENCE
  pointer `Callee` last assigned on line 867 could be null and is dereferenced at line 868, column 26.
  866.     // FIXME: Handle non-CallExpr-based CallEvents.
  867.     const StackFrameContext *Callee = CalleeCtx->getStackFrame();
  868. >   const Stmt *CallSite = Callee->getCallSite();
  869.     if (const auto *CE = dyn_cast_or_null<CallExpr>(CallSite)) {
  870.       if (const auto *FD = dyn_cast<FunctionDecl>(CalleeCtx->getDecl())) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:909: error: DEAD_STORE
  The value written to &Ext (type int) is never used.
  907.     DoShift = CurDAG->getTargetConstant(false, dl, MVT::i32);
  908.   
  909. >   AArch64_AM::ShiftExtendType Ext = AArch64_AM::InvalidShiftExtend;
  910.     // Try to match an unshifted extend on the LHS.
  911.     if (IsExtendedRegisterWorthFolding &&

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:870: error: NULL_DEREFERENCE
  pointer `Inst` last assigned on line 869 could be null and is dereferenced at line 870, column 16.
  868.       unsigned NextReg = SrcReg;
  869.       MachineInstr *Inst = MRI->getVRegDef(SrcReg);
  870. >     if (BB1 && Inst->getOpcode() == PPC::PHI && Inst->getParent() == BB2) {
  871.         NextReg = getIncomingRegForBlock(Inst, BB1);
  872.         // We track through PHI only once to avoid infinite loop.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:875: error: NULL_DEREFERENCE
  pointer `Inst` last assigned on line 869 could be null and is dereferenced at line 875, column 14.
  873.         BB1 = nullptr;
  874.       }
  875. >     else if (Inst->isFullCopy())
  876.         NextReg = Inst->getOperand(1).getReg();
  877.       if (NextReg == SrcReg || !TargetRegisterInfo::isVirtualRegister(NextReg))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:908: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `R` could be dangling and is dereferenced or freed at line 908, column 14.
  906.           // Bail out when the Numerator is not divisible by one of the terms of
  907.           // the Denominator.
  908. >         if (!R->isZero()) {
  909.             *Quotient = D.Zero;
  910.             *Remainder = Numerator;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:882: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 882, column 12.
  880.     //   A NULL pointer is represented as -1.
  881.     if (MPT->isMemberDataPointer())
  882. >     return llvm::ConstantInt::get(CGM.PtrDiffTy, -1ULL, /*isSigned=*/true);
  883.   
  884.     llvm::Constant *Zero = llvm::ConstantInt::get(CGM.PtrDiffTy, 0);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:928: error: UNINITIALIZED_VALUE
  The value read from CallOpcode was never initialized.
  926.       // Emit call
  927.       MCInst CallInst;
  928. >     CallInst.setOpcode(CallOpcode);
  929.       CallInst.addOperand(CallTargetMCOp);
  930.       OutStreamer->EmitInstruction(CallInst, getSubtargetInfo());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.h:894: error: NULL_DEREFERENCE
  pointer `NA.Addr` last assigned on line 891 could be null and is dereferenced at line 894, column 11.
  892.   
  893.       while (NA.Addr != this) {
  894. >       if (NA.Addr->getType() == NodeAttrs::Ref) {
  895.           NodeAddr<RefNode*> RA = NA;
  896.           if (RA.Addr->getRegRef(G) == RR && P(NA))

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/Targets/ARM.cpp:892: error: DEAD_STORE
  The value written to &isInOut (type _Bool) is never used.
  890.       std::string &SuggestedModifier) const {
  891.     bool isOutput = (Constraint[0] == '=');
  892. >   bool isInOut = (Constraint[0] == '+');
  893.   
  894.     // Strip off constraint modifiers.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/Targets/ARM.cpp:891: error: DEAD_STORE
  The value written to &isOutput (type _Bool) is never used.
  889.       StringRef Constraint, char Modifier, unsigned Size,
  890.       std::string &SuggestedModifier) const {
  891. >   bool isOutput = (Constraint[0] == '=');
  892.     bool isInOut = (Constraint[0] == '+');
  893.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:891: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DILocation>()` could be null and is dereferenced at line 891, column 10.
  889.   
  890.   unsigned LLVMDILocationGetLine(LLVMMetadataRef Location) {
  891. >   return unwrapDI<DILocation>(Location)->getLine();
  892.   }
  893.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:1003: error: UNINITIALIZED_VALUE
  The value read from Opc was never initialized.
  1001.       llvm_unreachable("Impossible reg-to-reg copy");
  1002.   
  1003. >   const MCInstrDesc &MCID = get(Opc);
  1004.     if (MCID.getNumOperands() == 3)
  1005.       BuildMI(MBB, I, DL, MCID, DestReg)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:895: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DILocation>()` could be null and is dereferenced at line 895, column 10.
  893.   
  894.   unsigned LLVMDILocationGetColumn(LLVMMetadataRef Location) {
  895. >   return unwrapDI<DILocation>(Location)->getColumn();
  896.   }
  897.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Function.cpp:964: error: NULL_DEREFERENCE
  pointer `VTy` last assigned on line 961 could be null and is dereferenced at line 964, column 19.
  962.       if (!VTy)
  963.         llvm_unreachable("Expected an argument of Vector Type");
  964. >     Type *EltTy = VTy->getVectorElementType();
  965.       return PointerType::getUnqual(EltTy);
  966.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:900: error: DEAD_STORE
  The value written to &InMBB (type _Bool) is never used.
  898.     const User *U = nullptr;
  899.     unsigned Opcode = Instruction::UserOp1;
  900. >   bool InMBB = true;
  901.   
  902.     if (const auto *I = dyn_cast<Instruction>(V)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:905: error: DEAD_STORE
  The value written to &InMBB (type _Bool) is never used.
  903.       Opcode = I->getOpcode();
  904.       U = I;
  905. >     InMBB = I->getParent() == FuncInfo.MBB->getBasicBlock();
  906.     } else if (const auto *C = dyn_cast<ConstantExpr>(V)) {
  907.       Opcode = C->getOpcode();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:904: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  902.     if (const auto *I = dyn_cast<Instruction>(V)) {
  903.       Opcode = I->getOpcode();
  904. >     U = I;
  905.       InMBB = I->getParent() == FuncInfo.MBB->getBasicBlock();
  906.     } else if (const auto *C = dyn_cast<ConstantExpr>(V)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:908: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  906.     } else if (const auto *C = dyn_cast<ConstantExpr>(V)) {
  907.       Opcode = C->getOpcode();
  908. >     U = C;
  909.     }
  910.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:899: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DILocation>()` could be null and is dereferenced at line 899, column 15.
  897.   
  898.   LLVMMetadataRef LLVMDILocationGetScope(LLVMMetadataRef Location) {
  899. >   return wrap(unwrapDI<DILocation>(Location)->getScope());
  900.   }
  901.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:1016: error: UNINITIALIZED_VALUE
  The value read from Sub was never initialized.
  1014.     }
  1015.     unsigned ResultReg = MRI->createVirtualRegister(&SetBRC);
  1016. >   BuildMI(MBB, SetPos, SetLoc, TII->get(Sub), ResultReg)
  1017.         .addReg(ZeroReg)
  1018.         .addReg(ExtCondReg);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:909: error: DEAD_STORE
  The value written to &type (type llvm::Type*) is never used.
  907.     if (!CallOperandVal)
  908.       return CW_Default;
  909. >   Type *type = CallOperandVal->getType();
  910.     // Look at the constraint type.
  911.     switch (*constraint) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:903: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  901.   getSingleConstraintMatchWeight(AsmOperandInfo &info,
  902.                                  const char *constraint) const {
  903. >   ConstraintWeight weight = CW_Invalid;
  904.     Value *CallOperandVal = info.CallOperandVal;
  905.     // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp:923: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression *returned by operator[]` of type unsigned long long at line 923, column 7.
  921.       }
  922.       if (Elements[2] == dwarf::DW_OP_minus) {
  923. >       Offset = -Elements[1];
  924.         return true;
  925.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/FunctionComparator.cpp:928: error: NULL_DEREFERENCE
  pointer `Term` last assigned on line 927 could be null and is dereferenced at line 928, column 30.
  926.       }
  927.       const Instruction *Term = BB->getTerminator();
  928. >     for (unsigned i = 0, e = Term->getNumSuccessors(); i != e; ++i) {
  929.         if (!VisitedBBs.insert(Term->getSuccessor(i)).second)
  930.           continue;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.h:922: error: NULL_DEREFERENCE
  pointer `M.Addr` could be null and is dereferenced at line 922, column 29.
  920.         if (P(M))
  921.           MM.push_back(M);
  922. >       M = G.addr<NodeBase*>(M.Addr->getNext());
  923.       }
  924.       return MM;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.h:920: error: NULL_DEREFERENCE
  pointer `llvm::rdf::DataFlowGraph::linkBlockRefs::lambda__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Hexagon_RDFGraph.cpp:1665:20_operator()()->Addr` could be null and is dereferenced by call to `operator()` at line 920, column 11.
  918.   
  919.       while (M.Addr != this) {
  920. >       if (P(M))
  921.           MM.push_back(M);
  922.         M = G.addr<NodeBase*>(M.Addr->getNext());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.h:920: error: NULL_DEREFERENCE
  pointer `llvm::rdf::DataFlowGraph::linkBlockRefs::lambda__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Hexagon_RDFGraph.cpp:1668:22_operator()()->Addr` could be null and is dereferenced by call to `operator()` at line 920, column 11.
  918.   
  919.       while (M.Addr != this) {
  920. >       if (P(M))
  921.           MM.push_back(M);
  922.         M = G.addr<NodeBase*>(M.Addr->getNext());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/RDFGraph.h:920: error: NULL_DEREFERENCE
  pointer `llvm::rdf::FuncNode::findBlock::lambda__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_Hexagon_RDFGraph.cpp:596:15_operator()()->Addr` could be null and is dereferenced by call to `operator()` at line 920, column 11.
  918.   
  919.       while (M.Addr != this) {
  920. >       if (P(M))
  921.           MM.push_back(M);
  922.         M = G.addr<NodeBase*>(M.Addr->getNext());

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:936: error: UNINITIALIZED_VALUE
  The value read from DiagID was never initialized.
  934.     }
  935.   
  936. >   Diags->Report(DiagID).AddString("cannot compile inline asm");
  937.   }
  938.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/ConstantFold.cpp:1133: error: DEAD_STORE
  The value written to &C1V (type llvm::APInt const &) is never used.
  1131.     if (ConstantInt *CI1 = dyn_cast<ConstantInt>(C1)) {
  1132.       if (ConstantInt *CI2 = dyn_cast<ConstantInt>(C2)) {
  1133. >       const APInt &C1V = CI1->getValue();
  1134.         const APInt &C2V = CI2->getValue();
  1135.         switch (Opcode) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/ConstantFold.cpp:1197: error: DEAD_STORE
  The value written to &C2V (type llvm::APFloat const &) is never used.
  1195.       if (ConstantFP *CFP2 = dyn_cast<ConstantFP>(C2)) {
  1196.         const APFloat &C1V = CFP1->getValueAPF();
  1197. >       const APFloat &C2V = CFP2->getValueAPF();
  1198.         APFloat C3V = C1V;  // copy for modification
  1199.         switch (Opcode) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/ConstantFold.cpp:1134: error: DEAD_STORE
  The value written to &C2V (type llvm::APInt const &) is never used.
  1132.       if (ConstantInt *CI2 = dyn_cast<ConstantInt>(C2)) {
  1133.         const APInt &C1V = CI1->getValue();
  1134. >       const APInt &C2V = CI2->getValue();
  1135.         switch (Opcode) {
  1136.         default:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseTentative.cpp:990: error: DEAD_STORE
  The value written to &TPR (type int) is never used.
  988.   
  989.     while (1) {
  990. >     TPResult TPR(TPResult::Ambiguous);
  991.   
  992.       if (Tok.is(tok::l_paren)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:985: error: UNINITIALIZED_VALUE
  The value read from NewOpc was never initialized.
  983.                             And.getOperand(0),
  984.                             And.getOperand(6)  /* Chain */ };
  985. >         MachineSDNode *Test = CurDAG->getMachineNode(NewOpc, SDLoc(N),
  986.                                                        MVT::i32, MVT::Other, Ops);
  987.           ReplaceUses(N, Test);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstructionSelector.cpp:938: error: DEAD_STORE
  The value written to &OpSet (type unsigned int) is never used.
  936.     std::tie(CC, SwapArgs) = X86::getX86ConditionCode(
  937.         (CmpInst::Predicate)I.getOperand(1).getPredicate());
  938. >   unsigned OpSet = X86::getSETFromCond(CC);
  939.   
  940.     unsigned LHS = I.getOperand(2).getReg();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp:948: error: USE_AFTER_FREE
  pointer `returned by operator[]->Val.MachineCPVal` was freed by call to `delete()` at line 948, column 7 and is dereferenced or freed at line 948, column 7.
  946.       if (Constants[i].isMachineConstantPoolEntry()) {
  947.         Deleted.insert(Constants[i].Val.MachineCPVal);
  948. >       delete Constants[i].Val.MachineCPVal;
  949.       }
  950.     for (DenseSet<MachineConstantPoolValue*>::iterator I =

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:1000: error: UNINITIALIZED_VALUE
  The value read from MaskEnd was never initialized.
  998.     SDValue Val = SDValue(selectI64ImmDirect(CurDAG, dl, MatImm), 0);
  999.     return CurDAG->getMachineNode(PPC::RLDICR, dl, MVT::i64, Val,
  1000. >                                 getI32Imm(64 - RMin), getI32Imm(MaskEnd));
  1001.   }
  1002.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:998: error: UNINITIALIZED_VALUE
  The value read from MatImm was never initialized.
  996.     };
  997.   
  998. >   SDValue Val = SDValue(selectI64ImmDirect(CurDAG, dl, MatImm), 0);
  999.     return CurDAG->getMachineNode(PPC::RLDICR, dl, MVT::i64, Val,
  1000.                                   getI32Imm(64 - RMin), getI32Imm(MaskEnd));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:965: error: NULL_DEREFERENCE
  pointer `PtrTy` last assigned on line 959 could be null and is dereferenced at line 965, column 31.
  963.       }
  964.       unsigned PointerBits =
  965. >         DL.getIndexSizeInBits(PtrTy->getPointerAddressSpace());
  966.   
  967.       /// Skip pointer casts. Return Zero polynomial otherwise

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp:966: error: NULL_DEREFERENCE
  pointer `TypeIdMDVal` last assigned on line 962 could be null and is dereferenced at line 966, column 39.
  964.       report_fatal_error("Second argument of llvm.type.test must be metadata");
  965.   
  966. >   auto TypeIdStr = dyn_cast<MDString>(TypeIdMDVal->getMetadata());
  967.     if (!TypeIdStr)
  968.       report_fatal_error(

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp:971: error: NULL_DEREFERENCE
  pointer `TypeIdStr` last assigned on line 966 could be null and is dereferenced at line 971, column 37.
  969.           "Second argument of llvm.type.test must be a metadata string");
  970.   
  971. >   TypeIdLowering TIL = importTypeId(TypeIdStr->getString());
  972.     Value *Lowered = lowerTypeTestCall(TypeIdStr, CI, TIL);
  973.     CI->replaceAllUsesWith(Lowered);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:1015: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  1013.       std::swap(Args[0], Args[1]);
  1014.   
  1015. >   Value *V = Builder.CreateCall(Intrinsic::getDeclaration(CI.getModule(), IID),
  1016.                                   Args);
  1017.     Value *PassThru = ZeroMask ? ConstantAggregateZero::get(Ty)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:968: error: DEAD_STORE
  The value written to &BitWidth (type unsigned int) is never used.
  966.   static void computeKnownBitsFromOperator(const Operator *I, KnownBits &Known,
  967.                                            unsigned Depth, const Query &Q) {
  968. >   unsigned BitWidth = Known.getBitWidth();
  969.   
  970.     KnownBits Known2(Known);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:1193: error: DEAD_STORE
  The value written to &IsDistinct (type _Bool) is never used.
  1191.   
  1192.       MetadataList.assignValue(Val, NextMetadataNo);
  1193. >     IsDistinct = Record[0] & 1;
  1194.       NextMetadataNo++;
  1195.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:1383: error: DEAD_STORE
  The value written to &IsDistinct (type _Bool) is never used.
  1381.       // Ignore Record[0], which indicates whether this compile unit is
  1382.       // distinct.  It's always distinct.
  1383. >     IsDistinct = true;
  1384.       auto *CU = DICompileUnit::getDistinct(
  1385.           Context, Record[1], getMDOrNull(Record[2]), getMDString(Record[3]),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstructionSelector.cpp:987: error: DEAD_STORE
  The value written to &RhsReg (type unsigned int) is never used.
  985.   
  986.     unsigned LhsReg = I.getOperand(2).getReg();
  987. >   unsigned RhsReg = I.getOperand(3).getReg();
  988.     CmpInst::Predicate Predicate =
  989.         (CmpInst::Predicate)I.getOperand(1).getPredicate();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstructionSelector.cpp:1000: error: DEAD_STORE
  The value written to &SETFOpc (type unsigned short const *) is never used.
  998.       break;
  999.     case CmpInst::FCMP_OEQ:
  1000. >     SETFOpc = &SETFOpcTable[0][0];
  1001.       break;
  1002.     case CmpInst::FCMP_UNE:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstructionSelector.cpp:1003: error: DEAD_STORE
  The value written to &SETFOpc (type unsigned short const *) is never used.
  1001.       break;
  1002.     case CmpInst::FCMP_UNE:
  1003. >     SETFOpc = &SETFOpcTable[1][0];
  1004.       break;
  1005.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:986: error: NULL_DEREFERENCE
  pointer `R` could be null and is dereferenced at line 986, column 61.
  984.     bool doNotInvalidateSuperRegion = ITraits.hasTrait(
  985.         R, RegionAndSymbolInvalidationTraits::TK_DoNotInvalidateSuperRegion);
  986. >   const MemRegion *BaseR = doNotInvalidateSuperRegion ? R : R->getBaseRegion();
  987.     return AddToWorkList(WorkListElement(BaseR), getCluster(BaseR));
  988.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:985: error: NULL_DEREFERENCE
  pointer `B` could be null and is dereferenced at line 985, column 50.
  983.   void HexagonEarlyIfConversion::eliminatePhis(MachineBasicBlock *B) {
  984.     LLVM_DEBUG(dbgs() << "Removing phi nodes from block " << PrintMB(B) << "\n");
  985. >   MachineBasicBlock::iterator I, NextI, NonPHI = B->getFirstNonPHI();
  986.     for (I = B->begin(); I != NonPHI; I = NextI) {
  987.       NextI = std::next(I);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGDecl.cpp:996: error: DEAD_STORE
  The value written to &SmallValue (type unsigned int const ) is never used.
  994.     // a very low address. We use a smaller value, and that value sadly doesn't
  995.     // have a repeated byte-pattern. We don't use it for integers.
  996. >   constexpr uint32_t SmallValue = 0x000000AA;
  997.     // Floating-point values are initialized as NaNs because they propagate. Using
  998.     // a repeated byte pattern means that it will be easier to initialize

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1038: error: DEAD_STORE
  The value written to &FromType (type unsigned int) is never used.
  1036.         N->getOperand(N->getNumOperands() - 1))->getZExtValue();
  1037.     if (ExtensionType == ISD::SEXTLOAD)
  1038. >     FromType = NVPTX::PTXLdStInstCode::Signed;
  1039.     else if (ScalarVT.isFloatingPoint())
  1040.       FromType = ScalarVT.SimpleTy == MVT::f16 ? NVPTX::PTXLdStInstCode::Untyped

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1040: error: DEAD_STORE
  The value written to &FromType (type unsigned int) is never used.
  1038.       FromType = NVPTX::PTXLdStInstCode::Signed;
  1039.     else if (ScalarVT.isFloatingPoint())
  1040. >     FromType = ScalarVT.SimpleTy == MVT::f16 ? NVPTX::PTXLdStInstCode::Untyped
  1041.                                                : NVPTX::PTXLdStInstCode::Float;
  1042.     else

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1066: error: DEAD_STORE
  The value written to &FromType (type unsigned int) is never used.
  1064.       assert(N->getOpcode() == NVPTXISD::LoadV4 && "Unexpected load opcode.");
  1065.       EltVT = MVT::i32;
  1066. >     FromType = NVPTX::PTXLdStInstCode::Untyped;
  1067.       FromTypeWidth = 32;
  1068.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1032: error: DEAD_STORE
  The value written to &FromTypeWidth (type unsigned int) is never used.
  1030.     MVT ScalarVT = SimpleVT.getScalarType();
  1031.     // Read at least 8 bits (predicates are stored as 8-bit values)
  1032. >   unsigned FromTypeWidth = std::max(8U, ScalarVT.getSizeInBits());
  1033.     unsigned int FromType;
  1034.     // The last operand holds the original LoadSDNode::getExtensionType() value

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1067: error: DEAD_STORE
  The value written to &FromTypeWidth (type unsigned int) is never used.
  1065.       EltVT = MVT::i32;
  1066.       FromType = NVPTX::PTXLdStInstCode::Untyped;
  1067. >     FromTypeWidth = 32;
  1068.     }
  1069.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1015: error: DEAD_STORE
  The value written to &IsVolatile (type _Bool) is never used.
  1013.     // Volatile Setting
  1014.     // - .volatile is only availalble for .global and .shared
  1015. >   bool IsVolatile = MemSD->isVolatile();
  1016.     if (CodeAddrSpace != NVPTX::PTXLdStInstCode::GLOBAL &&
  1017.         CodeAddrSpace != NVPTX::PTXLdStInstCode::SHARED &&

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1049: error: DEAD_STORE
  The value written to &VecType (type unsigned int) is never used.
  1047.     switch (N->getOpcode()) {
  1048.     case NVPTXISD::LoadV2:
  1049. >     VecType = NVPTX::PTXLdStInstCode::V2;
  1050.       break;
  1051.     case NVPTXISD::LoadV4:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1052: error: DEAD_STORE
  The value written to &VecType (type unsigned int) is never used.
  1050.       break;
  1051.     case NVPTXISD::LoadV4:
  1052. >     VecType = NVPTX::PTXLdStInstCode::V4;
  1053.       break;
  1054.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp:1039: error: NULL_DEREFERENCE
  pointer `returned by getNamedOperand` could be null and is dereferenced at line 1039, column 13.
  1037.               Index,
  1038.               VData->getReg(), VData->isKill(),
  1039. >             TII->getNamedOperand(*MI, AMDGPU::OpName::srsrc)->getReg(),
  1040.               TII->getNamedOperand(*MI, AMDGPU::OpName::soffset)->getReg(),
  1041.               TII->getNamedOperand(*MI, AMDGPU::OpName::offset)->getImm(),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp:1040: error: NULL_DEREFERENCE
  pointer `returned by getNamedOperand` could be null and is dereferenced at line 1040, column 13.
  1038.               VData->getReg(), VData->isKill(),
  1039.               TII->getNamedOperand(*MI, AMDGPU::OpName::srsrc)->getReg(),
  1040. >             TII->getNamedOperand(*MI, AMDGPU::OpName::soffset)->getReg(),
  1041.               TII->getNamedOperand(*MI, AMDGPU::OpName::offset)->getImm(),
  1042.               *MI->memoperands_begin(),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp:1041: error: NULL_DEREFERENCE
  pointer `returned by getNamedOperand` could be null and is dereferenced at line 1041, column 13.
  1039.               TII->getNamedOperand(*MI, AMDGPU::OpName::srsrc)->getReg(),
  1040.               TII->getNamedOperand(*MI, AMDGPU::OpName::soffset)->getReg(),
  1041. >             TII->getNamedOperand(*MI, AMDGPU::OpName::offset)->getImm(),
  1042.               *MI->memoperands_begin(),
  1043.               RS);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1027: error: DEAD_STORE
  The value written to &InMBB (type _Bool) is never used.
  1025.     // allow to reference values across basic blocks whereas they are not
  1026.     // alive across basic blocks initially.
  1027. >   bool InMBB = true;
  1028.     if (I) {
  1029.       Opcode = I->getOpcode();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1031: error: DEAD_STORE
  The value written to &InMBB (type _Bool) is never used.
  1029.       Opcode = I->getOpcode();
  1030.       U = I;
  1031. >     InMBB = I->getParent() == FuncInfo.MBB->getBasicBlock();
  1032.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(V)) {
  1033.       Opcode = C->getOpcode();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1030: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  1028.     if (I) {
  1029.       Opcode = I->getOpcode();
  1030. >     U = I;
  1031.       InMBB = I->getParent() == FuncInfo.MBB->getBasicBlock();
  1032.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(V)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1034: error: DEAD_STORE
  The value written to &U (type llvm::User const *) is never used.
  1032.     } else if (const ConstantExpr *C = dyn_cast<ConstantExpr>(V)) {
  1033.       Opcode = C->getOpcode();
  1034. >     U = C;
  1035.     }
  1036.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:1021: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Repl` was dereferenced at line 1017 and is tested for null at line 1021, column 16.
  1019.             // update Repl to be the first one, such that we can rename the uses
  1020.             // of the second based on the first.
  1021. >           if (!Repl || firstInBB(I, Repl))
  1022.               Repl = I;
  1023.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:1027: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Repl` was dereferenced at line 1017 and is tested for null at line 1027, column 11.
  1025.         // should move the MemoryAccess.
  1026.         bool MoveAccess = true;
  1027. >       if (Repl) {
  1028.           // Repl is already in HoistPt: it remains in place.
  1029.           assert(allOperandsAvailable(Repl, DestBB) &&

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:1019: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `BundleMember` was dereferenced at line 1015 and is tested for null at line 1019, column 14.
  1017.   
  1018.         ScheduleData *BundleMember = SD;
  1019. >       while (BundleMember) {
  1020.           if (BundleMember->Inst != BundleMember->OpValue) {
  1021.             BundleMember = BundleMember->NextInBundle;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/FixedLenDecoderEmitter.cpp:1028: error: DEAD_STORE
  The value written to &Val (type int) is never used.
  1026.     // 2: Island (well-known bit value needed for decoding)
  1027.     int State = 0;
  1028. >   int Val = -1;
  1029.   
  1030.     for (unsigned i = 0; i < BitWidth; ++i) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.cpp:1030: error: DEAD_STORE
  The value written to &TCC (type int) is never used.
  1028.   
  1029.     // FIXME: Handle jump negative someday
  1030. >   MSP430CC::CondCodes TCC = MSP430CC::COND_INVALID;
  1031.     switch (CC) {
  1032.     default: llvm_unreachable("Invalid integer condition!");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp:1076: error: NULL_DEREFERENCE
  pointer `Expr` could be null and is dereferenced at line 1076, column 28.
  1074.     Ops.push_back(OffsetInBits);
  1075.     Ops.push_back(SizeInBits);
  1076. >   return DIExpression::get(Expr->getContext(), Ops);
  1077.   }
  1078.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:1052: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getValue` of type unsigned int at line 1052, column 5.
  1050.       // not a small positive number as intended
  1051.       if ((CE->getValue() >> 32) > 0) return false;
  1052. >     uint32_t Value = -static_cast<uint32_t>(CE->getValue());
  1053.       return Value > 0 && Value < 4096;
  1054.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:1054: error: DEAD_STORE
  The value written to &Ctor (type _fn_(*)) is never used.
  1052.   
  1053.     if (!Ctor) {
  1054. >     Ctor = RegAlloc;
  1055.       RegisterRegAlloc::setDefault(RegAlloc);
  1056.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1054: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced by call to `createObjectPointerType` at line 1054, column 15.
  1052.   LLVMDIBuilderCreateObjectPointerType(LLVMDIBuilderRef Builder,
  1053.                                        LLVMMetadataRef Type) {
  1054. >   return wrap(unwrap(Builder)->createObjectPointerType(unwrapDI<DIType>(Type)));
  1055.   }
  1056.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp:1071: error: NULL_DEREFERENCE
  pointer `TM` last assigned on line 1062 could be null and is dereferenced at line 1071, column 56.
  1069.       SmallString<32> TmpBuffer;
  1070.       llvm::raw_svector_ostream TmpStream(TmpBuffer);
  1071. >     TmpStream << llvm::format("\"%s %2d %4d\"", Months[TM->tm_mon],
  1072.                                 TM->tm_mday, TM->tm_year + 1900);
  1073.       Token TmpTok;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp:1073: error: NULL_DEREFERENCE
  pointer `DefVR` last assigned on line 1072 could be null and is dereferenced by call to `isConstExtended` at line 1073, column 16.
  1071.     // sets will not be used and can be removed.
  1072.     MachineInstr *DefVR = MRI->getVRegDef(VR);
  1073. >   bool DefEx = HII->isConstExtended(*DefVR);
  1074.     bool HasNE = false;
  1075.     for (unsigned i = 0, n = LL.size(); i < n; ++i) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:1076: error: DEAD_STORE
  The value written to &AFI (type llvm::ARMFunctionInfo const &) is never used.
  1074.       MF.getSubtarget().getRegisterInfo();
  1075.     const MachineRegisterInfo &MachineRegInfo = MF.getRegInfo();
  1076. >   const ARMFunctionInfo &AFI = *MF.getInfo<ARMFunctionInfo>();
  1077.   
  1078.     unsigned FramePtr = TargetRegInfo->getFrameRegister(MF);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:1102: error: DEAD_STORE
  The value written to &StartOp (type unsigned int) is never used.
  1100.       SmallVector<unsigned, 4> RegList;
  1101.       // Skip src & dst reg, and pred ops.
  1102. >     unsigned StartOp = 2 + 2;
  1103.       // Use all the operands.
  1104.       unsigned NumOffset = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/ELFObjectWriter.cpp:1192: error: UNINITIALIZED_VALUE
  The value read from AddrsigSection was never initialized.
  1190.         writeAddrsigSection();
  1191.         uint64_t SecEnd = W.OS.tell();
  1192. >       SectionOffsets[AddrsigSection] = std::make_pair(SecStart, SecEnd);
  1193.       }
  1194.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:1104: error: UNINITIALIZED_VALUE
  The value read from Pred was never initialized.
  1102.     }
  1103.   
  1104. >   Value *Cmp = Builder.CreateICmp(Pred, LHS, RHS);
  1105.     Value *Ext = Builder.CreateSExt(Cmp, Ty);
  1106.     return Ext;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:1091: error: DEAD_STORE
  The value written to &MIDefinesZeroReg (type _Bool) is never used.
  1089.     bool MIDefinesZeroReg = false;
  1090.     if (MI.definesRegister(AArch64::WZR) || MI.definesRegister(AArch64::XZR))
  1091. >     MIDefinesZeroReg = true;
  1092.   
  1093.     switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.cpp:1105: error: UNINITIALIZED_VALUE
  The value read from SRLPad was never initialized.
  1103.     SDLoc DL(Ptr);
  1104.     return DAG.getNode(ISD::SRL, DL, Ptr.getValueType(), Ptr,
  1105. >                      DAG.getConstant(SRLPad, DL, MVT::i32));
  1106.   }
  1107.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:1118: error: DEAD_STORE
  The value written to &d (type unsigned char const *) is never used.
  1116.       break;
  1117.     case DeclarationName::CXXOperatorName:
  1118. >     Data = *d++; // OverloadedOperatorKind
  1119.       break;
  1120.     case DeclarationName::CXXConstructorName:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:1110: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_AArch64_AArch64AsmPrinter.cpp::AArch64AsmPrinter>*) is never used.
  1108.   // Force static initialization.
  1109.   extern "C" void LLVMInitializeAArch64AsmPrinter() {
  1110. >   RegisterAsmPrinter<AArch64AsmPrinter> X(getTheAArch64leTarget());
  1111.     RegisterAsmPrinter<AArch64AsmPrinter> Y(getTheAArch64beTarget());
  1112.     RegisterAsmPrinter<AArch64AsmPrinter> Z(getTheARM64Target());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:1111: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_AArch64_AArch64AsmPrinter.cpp::AArch64AsmPrinter>*) is never used.
  1109.   extern "C" void LLVMInitializeAArch64AsmPrinter() {
  1110.     RegisterAsmPrinter<AArch64AsmPrinter> X(getTheAArch64leTarget());
  1111. >   RegisterAsmPrinter<AArch64AsmPrinter> Y(getTheAArch64beTarget());
  1112.     RegisterAsmPrinter<AArch64AsmPrinter> Z(getTheARM64Target());
  1113.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:1112: error: DEAD_STORE
  The value written to &Z (type llvm::RegisterAsmPrinter<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_AArch64_AArch64AsmPrinter.cpp::AArch64AsmPrinter>*) is never used.
  1110.     RegisterAsmPrinter<AArch64AsmPrinter> X(getTheAArch64leTarget());
  1111.     RegisterAsmPrinter<AArch64AsmPrinter> Y(getTheAArch64beTarget());
  1112. >   RegisterAsmPrinter<AArch64AsmPrinter> Z(getTheARM64Target());
  1113.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:1126: error: DEAD_STORE
  The value written to &ExtendType (type int) is never used.
  1124.                                        const Value *RHS, bool SetFlags,
  1125.                                        bool WantResult,  bool IsZExt) {
  1126. >   AArch64_AM::ShiftExtendType ExtendType = AArch64_AM::InvalidShiftExtend;
  1127.     bool NeedExtend = false;
  1128.     switch (RetVT.SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.cpp:1154: error: DEAD_STORE
  The value written to &Convert (type _Bool) is never used.
  1152.     bool Invert = false;
  1153.     bool Shift = false;
  1154. >   bool Convert = true;
  1155.     switch (cast<ConstantSDNode>(TargetCC)->getZExtValue()) {
  1156.      default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.cpp:1141: error: DEAD_STORE
  The value written to &andCC (type _Bool) is never used.
  1139.            (LHS.getOpcode() == ISD::TRUNCATE &&
  1140.             LHS.getOperand(0).getOpcode() == ISD::AND))) {
  1141. >       andCC = true;
  1142.       }
  1143.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseObjc.cpp:1180: error: UNINITIALIZED_VALUE
  The value read from Nullability was never initialized.
  1178.         DS.setObjCDeclQualifier(Qual);
  1179.         if (Qual == ObjCDeclSpec::DQ_CSNullability)
  1180. >         DS.setNullability(Tok.getLocation(), Nullability);
  1181.   
  1182.         ConsumeToken();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:1146: error: MEMORY_LEAK
  `UV` is not reachable after line 1146, column 24.
  1144.     // Map all of the new virtual registers.
  1145.     UserValue *UV = lookupVirtReg(OldReg);
  1146. >   for (unsigned i = 0; i != NewRegs.size(); ++i)
  1147.       mapVirtReg(NewRegs[i], UV);
  1148.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:1147: error: NULL_DEREFERENCE
  pointer `UV` last assigned on line 1145 could be null and is dereferenced by call to `mapVirtReg` at line 1147, column 5.
  1145.     UserValue *UV = lookupVirtReg(OldReg);
  1146.     for (unsigned i = 0; i != NewRegs.size(); ++i)
  1147. >     mapVirtReg(NewRegs[i], UV);
  1148.   }
  1149.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:1261: error: DEAD_STORE
  The value written to &MMO (type llvm::MachineMemOperand*) is never used.
  1259.   
  1260.         unsigned Alignment = DL.getABITypeAlignment(ArgVal->getType());
  1261. >       MachineMemOperand *MMO = FuncInfo.MF->getMachineMemOperand(
  1262.             MachinePointerInfo::getStack(*FuncInfo.MF, Addr.getOffset()),
  1263.             MachineMemOperand::MOStore, ArgVT.getStoreSize(), Alignment);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:1588: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  1586.         // Copy the predicate operands.
  1587.         MIB.add(MI.getOperand(OpIdx++));
  1588. >       MIB.add(MI.getOperand(OpIdx++));
  1589.   
  1590.         // Add the destination operands (D subregs).

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:1620: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  1618.         // Copy the predicate operands.
  1619.         MIB.add(MI.getOperand(OpIdx++));
  1620. >       MIB.add(MI.getOperand(OpIdx++));
  1621.   
  1622.         // Add the source operands (D subregs).

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp:1401: error: DEAD_STORE
  The value written to &Index (type unsigned int) is never used.
  1399.         } else {
  1400.           // An import; the index was assigned above.
  1401. >         Index = WasmIndices.find(&WS)->second;
  1402.         }
  1403.         LLVM_DEBUG(dbgs() << "  -> event index: " << WasmIndices.find(&WS)->second

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:1157: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  1155.   SDValue  MipsTargetLowering::PerformDAGCombine(SDNode *N, DAGCombinerInfo &DCI)
  1156.     const {
  1157. >   SelectionDAG &DAG = DCI.DAG;
  1158.     unsigned Opc = N->getOpcode();
  1159.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:1166: error: NULL_DEREFERENCE
  pointer `R` last assigned on line 1160 could be null and is dereferenced at line 1166, column 40.
  1164.                             "' does not have a ParserMatchClass!\n");
  1165.   
  1166. >     if (DefInit *DI= dyn_cast<DefInit>(R->getValue())) {
  1167.         Record *MatchClass = DI->getDef();
  1168.         if (ClassInfo *CI = AsmOperandClasses[MatchClass])

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:1189: error: DEAD_STORE
  The value written to &Success (type _Bool) is never used.
  1187.           const MachineRegisterInfo &MRI = MF.getRegInfo();
  1188.           const TargetRegisterClass *TRC = MRI.getRegClass(VirtReg);
  1189. >         bool Success = TII.getStackSlotRange(TRC, Loc.getSubReg(), SpillSize,
  1190.                                                SpillOffset, MF);
  1191.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1175: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced by call to `createArtificialType` at line 1175, column 15.
  1173.   LLVMDIBuilderCreateArtificialType(LLVMDIBuilderRef Builder,
  1174.                                     LLVMMetadataRef Type) {
  1175. >   return wrap(unwrap(Builder)->createArtificialType(unwrapDI<DIType>(Type)));
  1176.   }
  1177.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SILoadStoreOptimizer.cpp:1177: error: NULL_DEREFERENCE
  pointer `returned by getNamedOperand` could be null and is dereferenced at line 1177, column 3.
  1175.                                                  unsigned NewBase,
  1176.                                                  int32_t NewOffset) {
  1177. >   TII->getNamedOperand(MI, AMDGPU::OpName::vaddr)->setReg(NewBase);
  1178.     TII->getNamedOperand(MI, AMDGPU::OpName::offset)->setImm(NewOffset);
  1179.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1185: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced at line 1185, column 10.
  1183.   
  1184.   uint64_t LLVMDITypeGetSizeInBits(LLVMMetadataRef DType) {
  1185. >   return unwrapDI<DIType>(DType)->getSizeInBits();
  1186.   }
  1187.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:1193: error: USE_AFTER_FREE
  pointer `Def` last assigned on line 1192 was freed by call to `delete()` at line 1193, column 7 and is dereferenced or freed at line 1193, column 7.
  1191.         delete BackedgeTakenCount; // Delete once, if in Value2VPValue or not.
  1192.       for (VPValue *Def : VPExternalDefs)
  1193. >       delete Def;
  1194.       for (VPValue *CBV : VPCBVs)
  1195.         delete CBV;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:1189: error: USE_AFTER_FREE
  pointer `MapEntry->second` last accessed on line 1188 was freed by call to `delete()` at line 1189, column 9 and is dereferenced or freed at line 1189, column 9.
  1187.       for (auto &MapEntry : Value2VPValue)
  1188.         if (MapEntry.second != BackedgeTakenCount)
  1189. >         delete MapEntry.second;
  1190.       if (BackedgeTakenCount)
  1191.         delete BackedgeTakenCount; // Delete once, if in Value2VPValue or not.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1189: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced at line 1189, column 10.
  1187.   
  1188.   uint64_t LLVMDITypeGetOffsetInBits(LLVMMetadataRef DType) {
  1189. >   return unwrapDI<DIType>(DType)->getOffsetInBits();
  1190.   }
  1191.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1193: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced at line 1193, column 10.
  1191.   
  1192.   uint32_t LLVMDITypeGetAlignInBits(LLVMMetadataRef DType) {
  1193. >   return unwrapDI<DIType>(DType)->getAlignInBits();
  1194.   }
  1195.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:1198: error: DEAD_STORE
  The value written to &Walker (type llvm::MemorySSAWalker*) is never used.
  1196.                  DominatorTree *DT)
  1197.         : MSSA(MSSA), Walker(Walker), AA(AA), DT(DT) {
  1198. >     Walker = MSSA->getWalker();
  1199.     }
  1200.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1197: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced at line 1197, column 10.
  1195.   
  1196.   unsigned LLVMDITypeGetLine(LLVMMetadataRef DType) {
  1197. >   return unwrapDI<DIType>(DType)->getLine();
  1198.   }
  1199.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1201: error: NULL_DEREFERENCE
  pointer `returned by unwrapDI<llvm::DIType>()` could be null and is dereferenced at line 1201, column 29.
  1199.   
  1200.   LLVMDIFlags LLVMDITypeGetFlags(LLVMMetadataRef DType) {
  1201. >   return map_to_llvmDIFlags(unwrapDI<DIType>(DType)->getFlags());
  1202.   }
  1203.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/SourceManager.cpp:1206: error: NULL_DEREFERENCE
  pointer `Invalid` could be null and is dereferenced at line 1206, column 7.
  1204.     // Note that calling 'getBuffer()' may lazily page in the file.
  1205.     MemoryBuffer *Buffer = FI->getBuffer(Diag, SM, SourceLocation(), &Invalid);
  1206. >   if (Invalid)
  1207.       return;
  1208.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:1231: error: UNINITIALIZED_VALUE
  The value read from Flag was never initialized.
  1229.           Flag = 0;
  1230.       }
  1231. >     return Flag;
  1232.     }
  1233.     llvm::Constant *GenerateIvarList(ArrayRef<llvm::Constant *> IvarNames,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:1230: error: DEAD_STORE
  The value written to &Cost (type unsigned char) is never used.
  1228.                                              MVT VT) const {
  1229.     const TargetRegisterClass *RRC = nullptr;
  1230. >   uint8_t Cost = 1;
  1231.     switch (VT.SimpleTy) {
  1232.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1234: error: DEAD_STORE
  The value written to &IsLDG (type _Bool) is never used.
  1232.     SDValue Op1;
  1233.     MemSDNode *Mem;
  1234. >   bool IsLDG = true;
  1235.   
  1236.     // If this is an LDG intrinsic, the address is the third operand. If its an

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1248: error: DEAD_STORE
  The value written to &IsLDG (type _Bool) is never used.
  1246.       case Intrinsic::nvvm_ldg_global_i:
  1247.       case Intrinsic::nvvm_ldg_global_p:
  1248. >       IsLDG = true;
  1249.         break;
  1250.       case Intrinsic::nvvm_ldu_global_f:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:1240: error: DEAD_STORE
  The value written to &Mem (type llvm::MemSDNode*) is never used.
  1238.     if (N->getOpcode() == ISD::INTRINSIC_W_CHAIN) {
  1239.       Op1 = N->getOperand(2);
  1240. >     Mem = cast<MemIntrinsicSDNode>(N);
  1241.       unsigned IID = cast<ConstantSDNode>(N->getOperand(1))->getZExtValue();
  1242.       switch (IID) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:1278: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 1278, column 16.
  1276.         // -1: no hint.
  1277.         if (PathElement.Base->isVirtual())
  1278. >         return CharUnits::fromQuantity(-1ULL);
  1279.   
  1280.         if (NumPublicPaths > 1) // Won't use offsets, skip computation.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:1262: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 2` of type unsigned long long at line 1262, column 12.
  1260.     // return that Src is not a public base of Dst.  Record all inheritance paths.
  1261.     if (!Dst->isDerivedFrom(Src, Paths))
  1262. >     return CharUnits::fromQuantity(-2ULL);
  1263.   
  1264.     unsigned NumPublicPaths = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/DebugInfo.cpp:1260: error: NULL_DEREFERENCE
  pointer `Node` last assigned on line 1259 could be null and is dereferenced at line 1260, column 3.
  1258.                                       LLVMMetadataRef Replacement) {
  1259.     auto *Node = unwrapDI<MDNode>(TargetMetadata);
  1260. >   Node->replaceAllUsesWith(unwrap<Metadata>(Replacement));
  1261.     MDNode::deleteTemporary(Node);
  1262.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:1269: error: DEAD_STORE
  The value written to &InnerLoopLatch (type llvm::BasicBlock*) is never used.
  1267.     BasicBlock *InnerLoopLatch = InnerLoop->getLoopLatch();
  1268.     BasicBlock *InnerLoopLatchPred = InnerLoopLatch;
  1269. >   InnerLoopLatch = SplitBlock(InnerLoopLatchPred, Inc, DT, LI);
  1270.   }
  1271.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:1284: error: DEAD_STORE
  The value written to &IsGPRC (type _Bool) is never used.
  1282.       (AssignedReg ? MRI.getRegClass(AssignedReg) :
  1283.        &PPC::GPRC_and_GPRC_NOR0RegClass);
  1284. >   bool IsGPRC = RC->hasSuperClassEq(&PPC::GPRCRegClass);
  1285.   
  1286.     unsigned Opc;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseTentative.cpp:1464: error: DEAD_STORE
  The value written to &SS (type clang::CXXScopeSpec*) is never used.
  1462.       if (TemplateId->Kind != TNK_Type_template)
  1463.         return TPResult::False;
  1464. >     CXXScopeSpec SS;
  1465.       AnnotateTemplateIdTokenAsType();
  1466.       assert(Tok.is(tok::annot_typename));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1304: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  1302.     if (Q.IIQ.UseInstrInfo &&
  1303.         match(Op0, m_Exact(m_Shr(m_Value(X), m_Specific(Op1)))))
  1304. >     return X;
  1305.   
  1306.     // shl nuw i8 C, %x  ->  C  iff C has sign bit set.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:1382: error: NULL_DEREFERENCE
  pointer `R` last assigned on line 1343 could be null and is dereferenced at line 1382, column 39.
  1380.   
  1381.         CharUnits BaseOffset;
  1382. >       const ASTRecordLayout &Layout = R->getContext().getASTRecordLayout(Child);
  1383.         if (BOR->isVirtual())
  1384.           BaseOffset = Layout.getVBaseClassOffset(BOR->getDecl());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:1302: error: DEAD_STORE
  The value written to &A (type llvm::RegisterAsmPrinter<llvm::MipsAsmPrinter>*) is never used.
  1300.     RegisterAsmPrinter<MipsAsmPrinter> X(getTheMipsTarget());
  1301.     RegisterAsmPrinter<MipsAsmPrinter> Y(getTheMipselTarget());
  1302. >   RegisterAsmPrinter<MipsAsmPrinter> A(getTheMips64Target());
  1303.     RegisterAsmPrinter<MipsAsmPrinter> B(getTheMips64elTarget());
  1304.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:1303: error: DEAD_STORE
  The value written to &B (type llvm::RegisterAsmPrinter<llvm::MipsAsmPrinter>*) is never used.
  1301.     RegisterAsmPrinter<MipsAsmPrinter> Y(getTheMipselTarget());
  1302.     RegisterAsmPrinter<MipsAsmPrinter> A(getTheMips64Target());
  1303. >   RegisterAsmPrinter<MipsAsmPrinter> B(getTheMips64elTarget());
  1304.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:1300: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<llvm::MipsAsmPrinter>*) is never used.
  1298.   // Force static initialization.
  1299.   extern "C" void LLVMInitializeMipsAsmPrinter() {
  1300. >   RegisterAsmPrinter<MipsAsmPrinter> X(getTheMipsTarget());
  1301.     RegisterAsmPrinter<MipsAsmPrinter> Y(getTheMipselTarget());
  1302.     RegisterAsmPrinter<MipsAsmPrinter> A(getTheMips64Target());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:1301: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<llvm::MipsAsmPrinter>*) is never used.
  1299.   extern "C" void LLVMInitializeMipsAsmPrinter() {
  1300.     RegisterAsmPrinter<MipsAsmPrinter> X(getTheMipsTarget());
  1301. >   RegisterAsmPrinter<MipsAsmPrinter> Y(getTheMipselTarget());
  1302.     RegisterAsmPrinter<MipsAsmPrinter> A(getTheMips64Target());
  1303.     RegisterAsmPrinter<MipsAsmPrinter> B(getTheMips64elTarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:1540: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  1538.     Args.pop_back();
  1539.     Args.pop_back();
  1540. >   Rep = Builder.CreateCall(Intrinsic::getDeclaration(CI.getModule(), IID),
  1541.                              Args);
  1542.     unsigned NumArgs = CI.getNumArgOperands();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:1374: error: DEAD_STORE
  The value written to &Off (type unsigned long long) is never used.
  1372.     for (const auto *FD : RD->fields()) {
  1373.       uint64_t Off = RL.getFieldOffset(FD->getFieldIndex());
  1374. >     Off = Ctx.toCharUnitsFromBits(Off).getQuantity();
  1375.   
  1376.       Value *FieldPtr = RecordPtr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1349: error: DEAD_STORE
  The value written to &HasAVX (type _Bool) is never used.
  1347.   static unsigned X86ChooseCmpOpcode(EVT VT, const X86Subtarget *Subtarget) {
  1348.     bool HasAVX512 = Subtarget->hasAVX512();
  1349. >   bool HasAVX = Subtarget->hasAVX();
  1350.     bool X86ScalarSSEf32 = Subtarget->hasSSE1();
  1351.     bool X86ScalarSSEf64 = Subtarget->hasSSE2();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1348: error: DEAD_STORE
  The value written to &HasAVX512 (type _Bool) is never used.
  1346.   
  1347.   static unsigned X86ChooseCmpOpcode(EVT VT, const X86Subtarget *Subtarget) {
  1348. >   bool HasAVX512 = Subtarget->hasAVX512();
  1349.     bool HasAVX = Subtarget->hasAVX();
  1350.     bool X86ScalarSSEf32 = Subtarget->hasSSE1();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1350: error: DEAD_STORE
  The value written to &X86ScalarSSEf32 (type _Bool) is never used.
  1348.     bool HasAVX512 = Subtarget->hasAVX512();
  1349.     bool HasAVX = Subtarget->hasAVX();
  1350. >   bool X86ScalarSSEf32 = Subtarget->hasSSE1();
  1351.     bool X86ScalarSSEf64 = Subtarget->hasSSE2();
  1352.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1351: error: DEAD_STORE
  The value written to &X86ScalarSSEf64 (type _Bool) is never used.
  1349.     bool HasAVX = Subtarget->hasAVX();
  1350.     bool X86ScalarSSEf32 = Subtarget->hasSSE1();
  1351. >   bool X86ScalarSSEf64 = Subtarget->hasSSE2();
  1352.   
  1353.     switch (VT.getSimpleVT().SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:1381: error: DEAD_STORE
  The value written to &UseImm (type _Bool) is never used.
  1379.           Imm = -Imm;
  1380.         }
  1381. >       UseImm = isThumb2 ? (ARM_AM::getT2SOImmVal(Imm) != -1) :
  1382.           (ARM_AM::getSOImmVal(Imm) != -1);
  1383.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:1387: error: DEAD_STORE
  The value written to &UseImm (type _Bool) is never used.
  1385.       if (SrcVT == MVT::f32 || SrcVT == MVT::f64)
  1386.         if (ConstFP->isZero() && !ConstFP->isNegative())
  1387. >         UseImm = true;
  1388.     }
  1389.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:1391: error: DEAD_STORE
  The value written to &isICmp (type _Bool) is never used.
  1389.   
  1390.     unsigned CmpOpc;
  1391. >   bool isICmp = true;
  1392.     bool needsExt = false;
  1393.     switch (SrcVT.SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:1378: error: DEAD_STORE
  The value written to &isNegativeImm (type _Bool) is never used.
  1376.         // signed 32-bit int.
  1377.         if (Imm < 0 && Imm != (int)0x80000000) {
  1378. >         isNegativeImm = true;
  1379.           Imm = -Imm;
  1380.         }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:1361: error: NULL_DEREFERENCE
  pointer `Entry` last assigned on line 1361 could be null and is dereferenced at line 1361, column 12.
  1359.     if (Object->getBytesInAddress() == 4) {
  1360.       auto *Entry = reinterpret_cast<ulittle32_t *>(IntPtr);
  1361. >     while (*Entry++)
  1362.         ++Index;
  1363.     } else {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:1365: error: NULL_DEREFERENCE
  pointer `Entry` last assigned on line 1365 could be null and is dereferenced at line 1365, column 12.
  1363.     } else {
  1364.       auto *Entry = reinterpret_cast<ulittle64_t *>(IntPtr);
  1365. >     while (*Entry++)
  1366.         ++Index;
  1367.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1374: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  1372.     Value *X;
  1373.     if (Q.IIQ.UseInstrInfo && match(Op0, m_NSWShl(m_Value(X), m_Specific(Op1))))
  1374. >     return X;
  1375.   
  1376.     // Arithmetic shifting an all-sign-bit value is a no-op.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:1405: error: DEAD_STORE
  The value written to &BaseOffset (type unsigned int) is never used.
  1403.     F->SLocEntryCursor.JumpToBit(F->SLocEntryOffsets[ID - F->SLocEntryBaseID]);
  1404.     BitstreamCursor &SLocEntryCursor = F->SLocEntryCursor;
  1405. >   unsigned BaseOffset = F->SLocEntryBaseOffset;
  1406.   
  1407.     ++NumSLocEntriesRead;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:1926: error: UNINITIALIZED_VALUE
  The value read from SkipBody.New was never initialized.
  1924.       else {
  1925.         Decl *D =
  1926. >           SkipBody.CheckSameAsPrevious ? SkipBody.New : TagOrTempResult.get();
  1927.         // Parse the definition body.
  1928.         ParseStructUnionBody(StartLoc, TagType, D);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1375: error: DEAD_STORE
  The value written to &Val (type long long) is never used.
  1373.   /// opcode that works for the compare (e.g. CMP32ri) otherwise return 0.
  1374.   static unsigned X86ChooseCmpImmediateOpcode(EVT VT, const ConstantInt *RHSC) {
  1375. >   int64_t Val = RHSC->getSExtValue();
  1376.     switch (VT.getSimpleVT().SimpleTy) {
  1377.     // Otherwise, we can't fold the immediate into this comparison.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1413: error: UNINITIALIZED_VALUE
  The value read from InstrCount was never initialized.
  1411.               int64_t Delta =
  1412.                   static_cast<int64_t>(NewSize) - static_cast<int64_t>(BBSize);
  1413. >             emitInstrCountChangedRemark(BP, M, Delta, InstrCount,
  1414.                                           FunctionToInstrCount, &F);
  1415.               InstrCount = static_cast<int64_t>(InstrCount) + Delta;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1409: error: DEAD_STORE
  The value written to &opr0 (type double) is never used.
  1407.     ConstantFP *fpopr2 = dyn_cast_or_null<ConstantFP>(copr2);
  1408.     if (fpopr0) {
  1409. >     opr0 = (getArgType(FInfo) == AMDGPULibFunc::F64)
  1410.                ? fpopr0->getValueAPF().convertToDouble()
  1411.                : (double)fpopr0->getValueAPF().convertToFloat();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1415: error: DEAD_STORE
  The value written to &opr1 (type double) is never used.
  1413.   
  1414.     if (fpopr1) {
  1415. >     opr1 = (getArgType(FInfo) == AMDGPULibFunc::F64)
  1416.                ? fpopr1->getValueAPF().convertToDouble()
  1417.                : (double)fpopr1->getValueAPF().convertToFloat();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1421: error: DEAD_STORE
  The value written to &opr2 (type double) is never used.
  1419.   
  1420.     if (fpopr2) {
  1421. >     opr2 = (getArgType(FInfo) == AMDGPULibFunc::F64)
  1422.                ? fpopr2->getValueAPF().convertToDouble()
  1423.                : (double)fpopr2->getValueAPF().convertToFloat();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:1420: error: NULL_DEREFERENCE
  pointer `LIS` could be null and is dereferenced at line 1420, column 29.
  1418.         if (ShouldTrackLaneMasks) {
  1419.           // Adjust liveness and add missing dead+read-undef flags.
  1420. >         SlotIndex SlotIdx = LIS->getInstructionIndex(*MI).getRegSlot();
  1421.           RegOpers.adjustLaneLiveness(*LIS, MRI, SlotIdx, MI);
  1422.         } else {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:1424: error: NULL_DEREFERENCE
  pointer `LIS` could be null and is dereferenced by call to `detectDeadDefs` at line 1424, column 9.
  1422.         } else {
  1423.           // Adjust for missing dead-def flags.
  1424. >         RegOpers.detectDeadDefs(*MI, *LIS);
  1425.         }
  1426.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseDecl.cpp:1410: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 1410, column 5 and is dereferenced or freed at line 1410, column 5.
  1408.         LAs[i]->addDecl(D);
  1409.       ParseLexedAttribute(*LAs[i], EnterScope, OnDefinition);
  1410. >     delete LAs[i];
  1411.     }
  1412.     LAs.clear();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:1421: error: NULL_DEREFERENCE
  pointer `LI` could be null and is dereferenced at line 1421, column 9.
  1419.       // Also don't need to coerce if they are the same type, we will just
  1420.       // propagate.
  1421. >     if (LI->isAtomic() > DepSI->isAtomic() ||
  1422.           LoadType == DepSI->getValueOperand()->getType())
  1423.         return nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:1436: error: NULL_DEREFERENCE
  pointer `LI` could be null and is dereferenced at line 1436, column 9.
  1434.     } else if (auto *DepLI = dyn_cast<LoadInst>(DepInst)) {
  1435.       // Can't forward from non-atomic to atomic without violating memory model.
  1436. >     if (LI->isAtomic() > DepLI->isAtomic())
  1437.         return nullptr;
  1438.       int Offset = analyzeLoadFromClobberingLoad(LoadType, LoadPtr, DepLI, DL);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:1553: error: UNINITIALIZED_VALUE
  The value read from Op was never initialized.
  1551.                 NeedAlign ? GreatestCommonDivisor64(ArgAlign, Offsets[j]) : 0;
  1552.   
  1553. >           Chain = DAG.getMemIntrinsicNode(
  1554.                 Op, dl, DAG.getVTList(MVT::Other, MVT::Glue), StoreOperands,
  1555.                 TheStoreType, MachinePointerInfo(), EltAlign,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:1821: error: UNINITIALIZED_VALUE
  The value read from Op was never initialized.
  1819.               Chain, DAG.getConstant(1, dl, MVT::i32),
  1820.               DAG.getConstant(Offsets[VecIdx], dl, MVT::i32), InFlag};
  1821. >         SDValue RetVal = DAG.getMemIntrinsicNode(
  1822.               Op, dl, DAG.getVTList(LoadVTs), LoadOperands, TheLoadType,
  1823.               MachinePointerInfo(), EltAlign,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:1421: error: DEAD_STORE
  The value written to &PrevTK (type int) is never used.
  1419.     StringRef ErrMsg;
  1420.   
  1421. >   AsmToken::TokenKind PrevTK = AsmToken::Error;
  1422.     bool Done = false;
  1423.     while (!Done) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:1564: error: DEAD_STORE
  The value written to &PrevTK (type int) is never used.
  1562.         End = consumeToken();
  1563.   
  1564. >     PrevTK = TK;
  1565.     }
  1566.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:1527: error: UNINITIALIZED_VALUE
  The value read from AtomicOp was never initialized.
  1525.     BuildMI(*BB, II, DL, TII->get(Mips::COPY), PtrCopy).addReg(Ptr);
  1526.   
  1527. >   BuildMI(*BB, II, DL, TII->get(AtomicOp))
  1528.         .addReg(OldVal, RegState::Define | RegState::EarlyClobber)
  1529.         .addReg(PtrCopy)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1444: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  1442.     // If Op1 is always implied true by Op0, then Op0 is a subset of Op1, and we
  1443.     // can eliminate Op1 from this 'and'.
  1444. >   if (ICmpInst::isImpliedTrueByMatchingCmp(Pred0, Pred1))
  1445.       return Op0;
  1446.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1448: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  1446.   
  1447.     // Check for any combination of predicates that are guaranteed to be disjoint.
  1448. >   if ((Pred0 == ICmpInst::getInversePredicate(Pred1)) ||
  1449.         (Pred0 == ICmpInst::ICMP_EQ && ICmpInst::isFalseWhenEqual(Pred1)) ||
  1450.         (Pred0 == ICmpInst::ICMP_SLT && Pred1 == ICmpInst::ICMP_SGT) ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1449: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  1447.     // Check for any combination of predicates that are guaranteed to be disjoint.
  1448.     if ((Pred0 == ICmpInst::getInversePredicate(Pred1)) ||
  1449. >       (Pred0 == ICmpInst::ICMP_EQ && ICmpInst::isFalseWhenEqual(Pred1)) ||
  1450.         (Pred0 == ICmpInst::ICMP_SLT && Pred1 == ICmpInst::ICMP_SGT) ||
  1451.         (Pred0 == ICmpInst::ICMP_ULT && Pred1 == ICmpInst::ICMP_UGT))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:1464: error: STACK_VARIABLE_ADDRESS_ESCAPE
  Address of stack variable `GetLAA` escapes at line 1464, column 3.
  1462.       return Impl.runImpl(F, *SE, *LI, *TTI, *DT, *BFI, TLI, *DB, *AA, *AC,
  1463.                           GetLAA, *ORE);
  1464. >   }
  1465.   
  1466.     void getAnalysisUsage(AnalysisUsage &AU) const override {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/ConstantFold.cpp:1624: error: DEAD_STORE
  The value written to &CE2Op0 (type llvm::Constant*) is never used.
  1622.         } else {
  1623.           ConstantExpr *CE2 = cast<ConstantExpr>(V2);
  1624. >         Constant *CE2Op0 = CE2->getOperand(0);
  1625.   
  1626.           // There are MANY other foldings that we could perform here.  They will

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:1464: error: DEAD_STORE
  The value written to &newEntryCount (type unsigned long long) is never used.
  1462.   
  1463.     uint64_t priorEntryCount = CalleeCount.getCount();
  1464. >   uint64_t newEntryCount = priorEntryCount;
  1465.   
  1466.     // Since CallSiteCount is an estimate, it could exceed the original callee

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1469: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  1467.     // If Op1 is always implied true by Op0, then Op0 is a subset of Op1, and we
  1468.     // can eliminate Op0 from this 'or'.
  1469. >   if (ICmpInst::isImpliedTrueByMatchingCmp(Pred0, Pred1))
  1470.       return Op1;
  1471.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1474: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  1472.     // Check for any combination of predicates that cover the entire range of
  1473.     // possibilities.
  1474. >   if ((Pred0 == ICmpInst::getInversePredicate(Pred1)) ||
  1475.         (Pred0 == ICmpInst::ICMP_NE && ICmpInst::isTrueWhenEqual(Pred1)) ||
  1476.         (Pred0 == ICmpInst::ICMP_SLE && Pred1 == ICmpInst::ICMP_SGE) ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1475: error: UNINITIALIZED_VALUE
  The value read from Pred1 was never initialized.
  1473.     // possibilities.
  1474.     if ((Pred0 == ICmpInst::getInversePredicate(Pred1)) ||
  1475. >       (Pred0 == ICmpInst::ICMP_NE && ICmpInst::isTrueWhenEqual(Pred1)) ||
  1476.         (Pred0 == ICmpInst::ICMP_SLE && Pred1 == ICmpInst::ICMP_SGE) ||
  1477.         (Pred0 == ICmpInst::ICMP_ULE && Pred1 == ICmpInst::ICMP_UGE))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp:1747: error: DEAD_STORE
  The value written to &HaveSemi (type _Bool) is never used.
  1745.       if (!HaveSemi) {
  1746.         OS << ";";
  1747. >       HaveSemi = true;
  1748.       }
  1749.       auto *DV = cast<DILocalVariable>(getOperand(e - 2).getMetadata());

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/TokenAnnotator.cpp:1498: error: MEMORY_LEAK
  `LeftOfParens` is not reachable after line 1498, column 14.
  1496.         if (LeftOfParens->is(tok::r_paren)) {
  1497.           if (!LeftOfParens->MatchingParen ||
  1498. >             !LeftOfParens->MatchingParen->Previous)
  1499.             return false;
  1500.           LeftOfParens = LeftOfParens->MatchingParen->Previous;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:1517: error: UNINITIALIZED_VALUE
  The value read from Major was never initialized.
  1515.   
  1516.     std::string OSVersion;
  1517. >   llvm::raw_string_ostream(OSVersion) << Major << '.' << Minor << '.' << Micro;
  1518.     return OSVersion;
  1519.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:1517: error: UNINITIALIZED_VALUE
  The value read from Micro was never initialized.
  1515.   
  1516.     std::string OSVersion;
  1517. >   llvm::raw_string_ostream(OSVersion) << Major << '.' << Minor << '.' << Micro;
  1518.     return OSVersion;
  1519.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:1517: error: UNINITIALIZED_VALUE
  The value read from Minor was never initialized.
  1515.   
  1516.     std::string OSVersion;
  1517. >   llvm::raw_string_ostream(OSVersion) << Major << '.' << Minor << '.' << Micro;
  1518.     return OSVersion;
  1519.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp:1490: error: DEAD_STORE
  The value written to &BitWidth (type unsigned int) is never used.
  1488.       const SDValue Op, KnownBits &Known, const APInt &DemandedElts,
  1489.       const SelectionDAG &DAG, unsigned Depth) const {
  1490. >   unsigned BitWidth = Known.getBitWidth();
  1491.     switch (Op.getOpcode()) {
  1492.     default:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:1522: error: DEAD_STORE
  The value written to &NumBaseParams (type unsigned int) is never used.
  1520.         if (NumBaseParams < FD->getNumParams() &&
  1521.             FD->getParamDecl(NumBaseParams)->getType()->isAlignValT()) {
  1522. >         ++NumBaseParams;
  1523.           HasAlignValT = true;
  1524.         }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:1519: error: NULL_DEREFERENCE
  pointer `entry` last assigned on line 1517 could be null and is dereferenced at line 1519, column 12.
  1517.     const export_address_table_entry *entry =
  1518.         reinterpret_cast<const export_address_table_entry *>(IntPtr);
  1519. >   Result = entry[Index].ExportRVA;
  1520.     return std::error_code();
  1521.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:1531: error: USE_AFTER_FREE
  pointer `vec` last assigned on line 1525 was freed by call to `delete()` at line 1560, column 7 and is dereferenced or freed at line 1531, column 12.
  1529.         // variable, but the root cause is an idiomatic self-init.  We want
  1530.         // to report the diagnostic at the self-init since that is the root cause.
  1531. >       if (!vec->empty() && hasSelfInit && hasAlwaysUninitializedUse(vec))
  1532.           DiagnoseUninitializedUse(S, vd,
  1533.                                    UninitUse(vd->getInit()->IgnoreParenCasts(),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:1533: error: DEAD_STORE
  The value written to &Addr (type unsigned int) is never used.
  1531.   
  1532.     unsigned Res = getOrCreateVReg(I);
  1533. >   unsigned Addr = getOrCreateVReg(*I.getPointerOperand());
  1534.     unsigned Val = getOrCreateVReg(*I.getValOperand());
  1535.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:1532: error: DEAD_STORE
  The value written to &Res (type unsigned int) is never used.
  1530.     Type *ResType = I.getType();
  1531.   
  1532. >   unsigned Res = getOrCreateVReg(I);
  1533.     unsigned Addr = getOrCreateVReg(*I.getPointerOperand());
  1534.     unsigned Val = getOrCreateVReg(*I.getValOperand());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:1530: error: DEAD_STORE
  The value written to &ResType (type llvm::Type*) is never used.
  1528.     Flags |= MachineMemOperand::MOLoad | MachineMemOperand::MOStore;
  1529.   
  1530. >   Type *ResType = I.getType();
  1531.   
  1532.     unsigned Res = getOrCreateVReg(I);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:1534: error: DEAD_STORE
  The value written to &Val (type unsigned int) is never used.
  1532.     unsigned Res = getOrCreateVReg(I);
  1533.     unsigned Addr = getOrCreateVReg(*I.getPointerOperand());
  1534. >   unsigned Val = getOrCreateVReg(*I.getValOperand());
  1535.   
  1536.     unsigned Opcode = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:1537: error: NULL_DEREFERENCE
  pointer `I` last assigned on line 1535 could be null and is dereferenced at line 1537, column 9.
  1535.     for (const ulittle16_t *I = Start, *E = Start + NumEntries;
  1536.          I < E; ++I, ++Offset) {
  1537. >     if (*I != Index)
  1538.         continue;
  1539.       if (std::error_code EC =

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:1560: error: UNINITIALIZED_VALUE
  The value read from MovInst was never initialized.
  1558.   
  1559.       unsigned Result32 = createResultReg(&X86::GR32RegClass);
  1560. >     BuildMI(*FuncInfo.MBB, FuncInfo.InsertPt, DbgLoc, TII.get(MovInst), Result32)
  1561.         .addReg(ResultReg);
  1562.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:1650: error: DEAD_STORE
  The value written to &I (type anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_PowerPC_PPCISelDAGToDAG.cpp::BitPermutationSelector::BitGroup*) is never used.
  1648.                 IP->Repl32CR = IP->Repl32CR || I->RLAmt >= 32;
  1649.                 IP->Repl32Coalesced = true;
  1650. >               I = BitGroups.erase(I);
  1651.               } else {
  1652.                 // There are two separate groups, one before this group and one

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:1658: error: DEAD_STORE
  The value written to &I (type anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_PowerPC_PPCISelDAGToDAG.cpp::BitPermutationSelector::BitGroup*) is never used.
  1656.                 IP->Repl32CR = IP->Repl32CR || IN->Repl32CR || I->RLAmt >= 32;
  1657.                 IP->Repl32Coalesced = true;
  1658. >               I = BitGroups.erase(I);
  1659.                 BitGroups.erase(BitGroups.begin());
  1660.               }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.cpp:1544: error: DEAD_STORE
  The value written to &Occupancy (type unsigned int) is never used.
  1542.     const SIMachineFunctionInfo *MFI = MF.getInfo<SIMachineFunctionInfo>();
  1543.   
  1544. >   unsigned Occupancy = ST.getOccupancyWithLocalMemSize(MFI->getLDSSize(),
  1545.                                                          MF.getFunction());
  1546.     switch (RC->getID()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:1585: error: NULL_DEREFERENCE
  pointer `NewCPV` last assigned on line 1557 could be null and is dereferenced by call to `getConstantPoolIndex` at line 1585, column 9.
  1583.     else
  1584.       llvm_unreachable("Unexpected ARM constantpool value type!!");
  1585. >   CPI = MCP->getConstantPoolIndex(NewCPV, MCPE.getAlignment());
  1586.     return PCLabelId;
  1587.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:1878: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  1876.           llvm_unreachable("Unexpected intrinsic");
  1877.   
  1878. >       Rep = Builder.CreateCall(Intrinsic::getDeclaration(F->getParent(), IID),
  1879.                                  { CI->getOperand(0), CI->getArgOperand(1) });
  1880.         Rep = ApplyX86MaskOn1BitsVec(Builder, Rep, CI->getArgOperand(2));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:1908: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  1906.           Args.push_back(CI->getArgOperand(4));
  1907.   
  1908. >       Rep = Builder.CreateCall(Intrinsic::getDeclaration(F->getParent(), IID),
  1909.                                  Args);
  1910.         Rep = ApplyX86MaskOn1BitsVec(Builder, Rep, CI->getArgOperand(3));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:2799: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  2797.         }
  2798.   
  2799. >       Rep = UpgradeX86MaskedShift(Builder, *CI, IID);
  2800.       } else if (IsX86 && Name.startswith("avx512.mask.psrl")) {
  2801.         bool IsImmediate = Name[16] == 'i' ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:2867: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  2865.         }
  2866.   
  2867. >       Rep = UpgradeX86MaskedShift(Builder, *CI, IID);
  2868.       } else if (IsX86 && Name.startswith("avx512.mask.psra")) {
  2869.         bool IsImmediate = Name[16] == 'i' ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:2933: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  2931.         }
  2932.   
  2933. >       Rep = UpgradeX86MaskedShift(Builder, *CI, IID);
  2934.       } else if (IsX86 && Name.startswith("avx512.mask.move.s")) {
  2935.         Rep = upgradeMaskedMove(Builder, *CI);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:3224: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  3222.         Value *Args[] = { CI->getArgOperand(0) , CI->getArgOperand(1),
  3223.                           CI->getArgOperand(2), CI->getArgOperand(3) };
  3224. >       Rep = Builder.CreateCall(Intrinsic::getDeclaration(CI->getModule(), IID),
  3225.                                  Args);
  3226.         Value *PassThru = ZeroMask ? ConstantAggregateZero::get(CI->getType())

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:3252: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  3250.         Value *Args[] = { CI->getArgOperand(0) , CI->getArgOperand(1),
  3251.                           CI->getArgOperand(2) };
  3252. >       Rep = Builder.CreateCall(Intrinsic::getDeclaration(CI->getModule(), IID),
  3253.                                  Args);
  3254.         Value *PassThru = ZeroMask ? ConstantAggregateZero::get(CI->getType())

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:3288: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  3286.         Value *Args[] = { CI->getArgOperand(0), CI->getArgOperand(1),
  3287.                           CI->getArgOperand(2)  };
  3288. >       Rep = Builder.CreateCall(Intrinsic::getDeclaration(CI->getModule(), IID),
  3289.                                  Args);
  3290.         Value *PassThru = ZeroMask ? ConstantAggregateZero::get(CI->getType())

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:3318: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  3316.         Value *Args[] = { CI->getArgOperand(0), CI->getArgOperand(1),
  3317.                           CI->getArgOperand(2)  };
  3318. >       Rep = Builder.CreateCall(Intrinsic::getDeclaration(CI->getModule(), IID),
  3319.                                  Args);
  3320.         Value *PassThru = ZeroMask ? ConstantAggregateZero::get(CI->getType())

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:3342: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  3340.                           CI->getArgOperand(2)};
  3341.         Value *NewCall = Builder.CreateCall(
  3342. >                                 Intrinsic::getDeclaration(CI->getModule(), IID),
  3343.                                   Args);
  3344.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:2118: error: UNINITIALIZED_VALUE
  The value read from Imm was never initialized.
  2116.         }
  2117.   
  2118. >       Rep = upgradeX86vpcom(Builder, *CI, Imm, IsSigned);
  2119.       } else if (IsX86 && Name.startswith("xop.vpcmov")) {
  2120.         Value *Sel = CI->getArgOperand(2);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:2118: error: UNINITIALIZED_VALUE
  The value read from IsSigned was never initialized.
  2116.         }
  2117.   
  2118. >       Rep = upgradeX86vpcom(Builder, *CI, Imm, IsSigned);
  2119.       } else if (IsX86 && Name.startswith("xop.vpcmov")) {
  2120.         Value *Sel = CI->getArgOperand(2);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Basic/SourceManager.cpp:1664: error: DEAD_STORE
  The value written to &SourceFile (type clang::FileEntry const *) is never used.
  1662.               if (*SourceFileUID == *EntryUID) {
  1663.                 FirstFID = FileID::get(I);
  1664. >               SourceFile = Entry;
  1665.                 break;
  1666.               }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:1576: error: USE_AFTER_FREE
  pointer `Ptr` last assigned on line 1575 was freed by call to `delete()` at line 1576, column 7 and is dereferenced or freed at line 1576, column 7.
  1574.         DelSet.insert(I.second);
  1575.       for (auto *Ptr : DelSet)
  1576. >       delete Ptr;
  1577.     }
  1578.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:1726: error: UNINITIALIZED_VALUE
  The value read from Major was never initialized.
  1724.       Environment = Simulator;
  1725.   
  1726. >   setTarget(Platform, Environment, Major, Minor, Micro);
  1727.   
  1728.     if (const Arg *A = Args.getLastArg(options::OPT_isysroot)) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:1726: error: UNINITIALIZED_VALUE
  The value read from Micro was never initialized.
  1724.       Environment = Simulator;
  1725.   
  1726. >   setTarget(Platform, Environment, Major, Minor, Micro);
  1727.   
  1728.     if (const Arg *A = Args.getLastArg(options::OPT_isysroot)) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:1726: error: UNINITIALIZED_VALUE
  The value read from Minor was never initialized.
  1724.       Environment = Simulator;
  1725.   
  1726. >   setTarget(Platform, Environment, Major, Minor, Micro);
  1727.   
  1728.     if (const Arg *A = Args.getLastArg(options::OPT_isysroot)) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:1622: error: UNINITIALIZED_VALUE
  The value read from Check was never initialized.
  1620.     }
  1621.   
  1622. >   CGF.EmitCheck(Checks, Check, StaticData, DynamicData);
  1623.   }
  1624.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:1594: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Top` of type unsigned long long at line 1594, column 7.
  1592.     unsigned First = findFirstSet(Mask);
  1593.     uint64_t Top = (Mask >> First) + 1;
  1594. >   if ((Top & -Top) == Top) {
  1595.       LSB = First;
  1596.       Length = findFirstSet(Top);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1645: error: UNINITIALIZED_VALUE
  The value read from DVal0[_] was never initialized.
  1643.     Constant *nval0, *nval1;
  1644.     if (getVecSize(FInfo) == 1) {
  1645. >     nval0 = ConstantFP::get(CI->getType(), DVal0[0]);
  1646.       if (hasTwoResults)
  1647.         nval1 = ConstantFP::get(CI->getType(), DVal1[0]);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1652: error: UNINITIALIZED_VALUE
  The value read from DVal0[_] was never initialized.
  1650.         SmallVector <float, 0> FVal0, FVal1;
  1651.         for (int i=0; i < getVecSize(FInfo); ++i)
  1652. >         FVal0.push_back((float)DVal0[i]);
  1653.         ArrayRef<float> tmp0(FVal0);
  1654.         nval0 = ConstantDataVector::get(context, tmp0);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1647: error: UNINITIALIZED_VALUE
  The value read from DVal1[_] was never initialized.
  1645.       nval0 = ConstantFP::get(CI->getType(), DVal0[0]);
  1646.       if (hasTwoResults)
  1647. >       nval1 = ConstantFP::get(CI->getType(), DVal1[0]);
  1648.     } else {
  1649.       if (getArgType(FInfo) == AMDGPULibFunc::F32) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULibCalls.cpp:1657: error: UNINITIALIZED_VALUE
  The value read from DVal1[_] was never initialized.
  1655.         if (hasTwoResults) {
  1656.           for (int i=0; i < getVecSize(FInfo); ++i)
  1657. >           FVal1.push_back((float)DVal1[i]);
  1658.           ArrayRef<float> tmp1(FVal1);
  1659.           nval1 = ConstantDataVector::get(context, tmp1);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:1758: error: UNINITIALIZED_VALUE
  The value read from RTLibType was never initialized.
  1756.     FunctionType *FnType = FunctionType::get(ResultTy, ArgTys, false);
  1757.     FunctionCallee LibcallFn =
  1758. >       M->getOrInsertFunction(TLI->getLibcallName(RTLibType), FnType, Attr);
  1759.     CallInst *Call = Builder.CreateCall(LibcallFn, Args);
  1760.     Call->setAttributes(Attr);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/XCore/XCoreISelLowering.cpp:1605: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  1603.   SDValue XCoreTargetLowering::PerformDAGCombine(SDNode *N,
  1604.                                                DAGCombinerInfo &DCI) const {
  1605. >   SelectionDAG &DAG = DCI.DAG;
  1606.     SDLoc dl(N);
  1607.     switch (N->getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1652: error: UNINITIALIZED_VALUE
  The value read from InstrCount was never initialized.
  1650.             int64_t Delta = static_cast<int64_t>(NewSize) -
  1651.                             static_cast<int64_t>(FunctionSize);
  1652. >           emitInstrCountChangedRemark(FP, M, Delta, InstrCount,
  1653.                                         FunctionToInstrCount, &F);
  1654.             InstrCount = static_cast<int64_t>(InstrCount) + Delta;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:1652: error: DEAD_STORE
  The value written to &CC1 (type int) is never used.
  1650.       }
  1651.   
  1652. >     ISD::CondCode CC1 = ISD::SETCC_INVALID, CC2 = ISD::SETCC_INVALID;
  1653.       unsigned Opc = 0;
  1654.       switch (CCCode) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:1652: error: DEAD_STORE
  The value written to &CC2 (type int) is never used.
  1650.       }
  1651.   
  1652. >     ISD::CondCode CC1 = ISD::SETCC_INVALID, CC2 = ISD::SETCC_INVALID;
  1653.       unsigned Opc = 0;
  1654.       switch (CCCode) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/COFFObjectFile.cpp:1641: error: NULL_DEREFERENCE
  pointer `IntPtr` last assigned on line 1638 could be null and is dereferenced at line 1641, column 12.
  1639.     if (std::error_code EC = OwningObject->getRvaPtr(RVA, IntPtr))
  1640.       return EC;
  1641. >   Result = *reinterpret_cast<const ulittle16_t *>(IntPtr);
  1642.     return std::error_code();
  1643.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:1637: error: NULL_DEREFERENCE
  pointer `AA` last accessed on line 1637 could be null and is dereferenced at line 1637, column 7.
  1635.       }
  1636.     }
  1637. >   if (AA->doesNotAccessMemory(CI)) {
  1638.       return createCallExpression(CI, TOPClass->getMemoryLeader());
  1639.     } else if (AA->onlyReadsMemory(CI)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:1826: error: DEAD_STORE
  The value written to &NewOpC (type int) is never used.
  1824.     if (!MI) MI = Sub;
  1825.   
  1826. >   int NewOpC = -1;
  1827.     int MIOpC = MI->getOpcode();
  1828.     if (MIOpC == PPC::ANDIo || MIOpC == PPC::ANDIo8 ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:1755: error: DEAD_STORE
  The value written to &NewPred (type int) is never used.
  1753.   
  1754.       PPC::Predicate Pred = (PPC::Predicate)UseMI->getOperand(0).getImm();
  1755. >     PPC::Predicate NewPred = Pred;
  1756.       unsigned PredCond = PPC::getPredicateCondition(Pred);
  1757.       unsigned PredHint = PPC::getPredicateHint(Pred);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/MachOObjectFile.cpp:1659: error: DEAD_STORE
  The value written to &NType (type unsigned char) is never used.
  1657.       } else {
  1658.         MachO::nlist STE = getSymbolTableEntry(SymDRI);
  1659. >       NType = STE.n_type;
  1660.         NType = STE.n_type;
  1661.         NSect = STE.n_sect;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:1655: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `Ty` could be dangling and is dereferenced or freed at line 1655, column 17.
  1653.   
  1654.     if (!Alignment)
  1655. >     Alignment = DL.getABITypeAlignment(Ty);
  1656.   
  1657.     return MinAlign(Alignment, Offset);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:1657: error: UNINITIALIZED_VALUE
  The value read from Alignment was never initialized.
  1655.       Alignment = DL.getABITypeAlignment(Ty);
  1656.   
  1657. >   return MinAlign(Alignment, Offset);
  1658.   }
  1659.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:1906: error: DEAD_STORE
  The value written to &Op (type llvm::Constant*) is never used.
  1904.       if (isa<ConstantVector>(Operands[0]) ||
  1905.           isa<ConstantDataVector>(Operands[0])) {
  1906. >       auto *Op = cast<Constant>(Operands[0]);
  1907.         switch (IntrinsicID) {
  1908.         default: break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:2110: error: DEAD_STORE
  The value written to &Op (type llvm::Constant*) is never used.
  2108.           isa<ConstantInt>(Operands[1]) &&
  2109.           cast<ConstantInt>(Operands[1])->getValue() == 4) {
  2110. >       auto *Op = cast<Constant>(Operands[0]);
  2111.         switch (IntrinsicID) {
  2112.         default: break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:1766: error: DEAD_STORE
  The value written to &Order (type int) is never used.
  1764.             R.remove(maxDepth);
  1765.             if (Nodes.isExceedSU(maxDepth)) {
  1766. >             Order = TopDown;
  1767.               R.clear();
  1768.               R.insert(Nodes.getNode(0));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:1673: error: USE_AFTER_FREE
  pointer `KV->second` last accessed on line 1673 was freed by call to `delete()` at line 1673, column 7 and is dereferenced or freed at line 1673, column 7.
  1671.     ~VPlanSlp() {
  1672.       for (auto &KV : BundleToCombined)
  1673. >       delete KV.second;
  1674.     }
  1675.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:1686: error: MEMORY_LEAK
  `Tok` is not reachable after line 1686, column 16.
  1684.         Tok = Tok->getPreviousNonComment();
  1685.     }
  1686. >   if (!Tok || !Tok->is(tok::identifier))
  1687.       return "";
  1688.     return Tok->TokenText;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:1688: error: MEMORY_LEAK
  `Tok` is not reachable after line 1688, column 10.
  1686.     if (!Tok || !Tok->is(tok::identifier))
  1687.       return "";
  1688. >   return Tok->TokenText;
  1689.   }
  1690.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp:1710: error: DEAD_STORE
  The value written to &C (type llvm::Constant*) is never used.
  1708.       // FIXME: signedness depends on the original integer type.
  1709.       auto intptrTy = CGM.getDataLayout().getIntPtrType(destPtrTy);
  1710. >     llvm::Constant *C = offset;
  1711.       C = llvm::ConstantExpr::getIntegerCast(getOffset(), intptrTy,
  1712.                                              /*isSigned*/ false);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/ConstantFold.cpp:1792: error: DEAD_STORE
  The value written to &R (type int) is never used.
  1790.       const APFloat &C1V = cast<ConstantFP>(C1)->getValueAPF();
  1791.       const APFloat &C2V = cast<ConstantFP>(C2)->getValueAPF();
  1792. >     APFloat::cmpResult R = C1V.compare(C2V);
  1793.       switch (pred) {
  1794.       default: llvm_unreachable("Invalid FCmp Predicate");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1727: error: DEAD_STORE
  The value written to &ModuleCount (type unsigned int) is never used.
  1725.     if (EmitICRemark) {
  1726.       InstrCount = initSizeRemarkInfo(M, FunctionToInstrCount);
  1727. >     ModuleCount = InstrCount;
  1728.     }
  1729.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:1750: error: UNINITIALIZED_VALUE
  The value read from InstrCount was never initialized.
  1748.             int64_t Delta = static_cast<int64_t>(ModuleCount) -
  1749.                             static_cast<int64_t>(InstrCount);
  1750. >           emitInstrCountChangedRemark(MP, M, Delta, InstrCount,
  1751.                                         FunctionToInstrCount);
  1752.             InstrCount = ModuleCount;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1736: error: UNINITIALIZED_VALUE
  The value read from numHex was never initialized.
  1734.   
  1735.     APInt API = APF.bitcastToAPInt();
  1736. >   O << lead << format_hex_no_prefix(API.getZExtValue(), numHex, /*Upper=*/true);
  1737.   }
  1738.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:1745: error: UNINITIALIZED_VALUE
  The value read from ResultPos was never initialized.
  1743.   
  1744.     if (Result.Value.getNode()) {
  1745. >     Q.erase(&Q[ResultPos]);
  1746.       std::make_heap(Q.begin(), Q.end(), WeightedLeaf::Compare);
  1747.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:1772: error: UNINITIALIZED_VALUE
  The value read from ResultPos was never initialized.
  1770.   
  1771.     if (Result.Value.getNode()) {
  1772. >     Q.erase(&Q[ResultPos]);
  1773.       std::make_heap(Q.begin(), Q.end(), WeightedLeaf::Compare);
  1774.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:1786: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 1786, column 3.
  1784.     unsigned FirstCommutableVecOp = 1;
  1785.     unsigned LastCommutableVecOp = 3;
  1786. >   unsigned KMaskOp = -1U;
  1787.     if (X86II::isKMasked(TSFlags)) {
  1788.       // For k-zero-masked operations it is Ok to commute the first vector

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:1837: error: DEAD_STORE
  The value written to &CommutableOpIdx1 (type unsigned int) is never used.
  1835.     if (SrcOpIdx1 == CommuteAnyOperandIndex ||
  1836.         SrcOpIdx2 == CommuteAnyOperandIndex) {
  1837. >     unsigned CommutableOpIdx1 = SrcOpIdx1;
  1838.       unsigned CommutableOpIdx2 = SrcOpIdx2;
  1839.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1907: error: UNINITIALIZED_VALUE
  The value read from XShifted was never initialized.
  1905.           return Y;
  1906.         if (EffBitsX.isSubsetOf(*Mask) && !EffBitsY.intersects(*Mask))
  1907. >         return XShifted;
  1908.       }
  1909.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:1793: error: NULL_DEREFERENCE
  pointer `CalleeSF` last assigned on line 1792 could be null and is dereferenced at line 1793, column 39.
  1791.                                          const LocationContext *CalleeLC) {
  1792.     const StackFrameContext *CalleeSF = CalleeLC->getStackFrame();
  1793. >   const StackFrameContext *CallerSF = CalleeSF->getParent()->getStackFrame();
  1794.     assert(CalleeSF && CallerSF);
  1795.     ExplodedNode *BeforeProcessingCall = nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:1817: error: DEAD_STORE
  The value written to &is64bit (type _Bool) is never used.
  1815.   
  1816.     unsigned Opc;
  1817. >   bool is64bit = VT == MVT::f64 || VT == MVT::i64;
  1818.     switch (ISDOpcode) {
  1819.       default: return false;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/Driver.cpp:1824: error: NULL_DEREFERENCE
  pointer `TC` could be null and is dereferenced at line 1824, column 17.
  1822.               os << "host";
  1823.             os << " (";
  1824. >           os << TC->getTriple().normalize();
  1825.   
  1826.             if (BoundArch)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:1880: error: NULL_DEREFERENCE
  pointer `R` could be null and is dereferenced at line 1880, column 7.
  1878.     }
  1879.   
  1880. >   if (R->hasStackNonParametersStorage()) {
  1881.       if (isa<ElementRegion>(R)) {
  1882.         // Currently we don't reason specially about Clang-style vectors.  Check

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParsePragma.cpp:1860: error: DEAD_STORE
  The value written to &Kind (type int) is never used.
  1858.     }
  1859.   
  1860. >   Sema::PragmaOptionsAlignKind Kind = Sema::POAK_Natural;
  1861.     const IdentifierInfo *II = Tok.getIdentifierInfo();
  1862.     if (II->isStr("native"))

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:1908: error: NULL_DEREFERENCE
  pointer `CalleeSF` last assigned on line 1904 could be null and is dereferenced at line 1908, column 58.
  1906.                           (*G.roots_begin())->getLocation().getLocationContext();
  1907.       if (RootLC->getStackFrame() != CalleeSF) {
  1908. >       Engine.FunctionSummaries->markReachedMaxBlockCount(CalleeSF->getDecl());
  1909.   
  1910.         // Re-run the call evaluation without inlining it, by storing the

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:1997: error: UNINITIALIZED_VALUE
  The value read from AArch64CC was never initialized.
  1995.       AArch64CC = changeIntCCToAArch64CC(CC);
  1996.     }
  1997. >   AArch64cc = DAG.getConstant(AArch64CC, dl, MVT_CC);
  1998.     return Cmp;
  1999.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/TokenAnnotator.cpp:1873: error: NULL_DEREFERENCE
  .
  1871.     void parseConditionalExpr() {
  1872.       while (Current && Current->isTrailingComment()) {
  1873. >       next();
  1874.       }
  1875.       FormatToken *Start = Current;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:1880: error: NULL_DEREFERENCE
  pointer `OpRC` last assigned on line 1878 could be null and is dereferenced at line 1880, column 10.
  1878.     auto *OpRC = HII.getRegClass(HII.get(Opc), OpNum, &HRI, MF);
  1879.     auto *RRC = HBS::getFinalVRegClass(R, MRI);
  1880. >   return OpRC->hasSubClassEq(RRC);
  1881.   }
  1882.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:1992: error: UNINITIALIZED_VALUE
  The value read from V was never initialized.
  1990.         llvm_unreachable("Unexpected store opcode");
  1991.     }
  1992. >   if (!isInt<8>(V))
  1993.       return false;
  1994.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:2007: error: UNINITIALIZED_VALUE
  The value read from V was never initialized.
  2005.         break;
  2006.     }
  2007. >   MI->addOperand(MachineOperand::CreateImm(V));
  2008.     return true;
  2009.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:1979: error: DEAD_STORE
  The value written to &FuncBitcodeOffsetDelta (type unsigned int) is never used.
  1977.     // jump to the FUNCTION_BLOCK using this offset later, we don't want
  1978.     // to rely on the stream's AbbrevID width being that of the MODULE_BLOCK.
  1979. >   unsigned FuncBitcodeOffsetDelta =
  1980.         Stream.getAbbrevIDWidth() + bitc::BlockIDWidth;
  1981.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:2001: error: UNINITIALIZED_VALUE
  The value read from CurrentBit was never initialized.
  1999.       case BitstreamEntry::EndBlock:
  2000.         if (Offset > 0)
  2001. >         Stream.JumpToBit(CurrentBit);
  2002.         return Error::success();
  2003.       case BitstreamEntry::Record:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:1999: error: DEAD_STORE
  The value written to &R (type int) is never used.
  1997.     if (ConstantFPSDNode *N1C = dyn_cast<ConstantFPSDNode>(N1)) {
  1998.       if (ConstantFPSDNode *N2C = dyn_cast<ConstantFPSDNode>(N2)) {
  1999. >       APFloat::cmpResult R = N1C->getValueAPF().compare(N2C->getValueAPF());
  2000.         switch (Cond) {
  2001.         default: break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:2034: error: DEAD_STORE
  The value written to &CS (type llvm::CallSite*) is never used.
  2032.     for (unsigned i = 0, e = TailCalls.size(); i != e; ++i) {
  2033.       CallInst *CI = TailCalls[i];
  2034. >     CallSite CS(CI);
  2035.   
  2036.       // Make sure the call instruction is followed by an unconditional branch to

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:2023: error: NULL_DEREFERENCE
  pointer `CE` last assigned on line 2018 could be null and is dereferenced at line 2023, column 11.
  2021.     }
  2022.   
  2023. >   switch (CE->getOpcode()) {
  2024.     default:
  2025.       // If the code isn't optimized, there may be outstanding folding

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:2028: error: UNINITIALIZED_VALUE
  The value read from NewOpc was never initialized.
  2026.             llvm_unreachable("Unexpected shift opcode");
  2027.         }
  2028. >       return DAG.getNode(NewOpc, SDLoc(Op), ty(Op), Op.getOperand(0), S);
  2029.       }
  2030.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:2057: error: NULL_DEREFERENCE
  pointer `Condition` last assigned on line 2055 could be null and is dereferenced at line 2057, column 33.
  2055.     Condition = ResolveCondition(Condition, BldCtx.getBlock());
  2056.     PrettyStackTraceLoc CrashInfo(getContext().getSourceManager(),
  2057. >                                 Condition->getBeginLoc(),
  2058.                                   "Error evaluating branch");
  2059.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/CodeGenSchedule.cpp:2059: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `ProcUnitDef` was dereferenced at line 2057 and is tested for null at line 2059, column 11.
  2057.       if (ProcResDef->getValueAsDef("Kind") == ProcResKind
  2058.           && ProcResDef->getValueAsDef("SchedModel") == PM.ModelDef) {
  2059. >       if (ProcUnitDef) {
  2060.           PrintFatalError(Loc,
  2061.                           "Multiple ProcessorResourceUnits associated with "

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:2054: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression (V>>1)` of type unsigned long long at line 2054, column 5.
  2052.       return V >> 1;
  2053.     if (V != 1)
  2054. >     return -(V >> 1);
  2055.     // There is no such thing as -0 with integers.  "-0" really means MININT.
  2056.     return 1ULL << 63;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:2064: error: NULL_DEREFERENCE
  pointer `returned by getStackFrame` could be null and is dereferenced at line 2064, column 10.
  2062.   
  2063.     const LocationContext *LC = N->getLocationContext();
  2064. >   return LC->getStackFrame()->getDecl();
  2065.   }
  2066.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:2110: error: UNINITIALIZED_VALUE
  The value read from LowerOpcode was never initialized.
  2108.       if ((TargetReg >= PPC::F0 && TargetReg <= PPC::F31) ||
  2109.           (TargetReg >= PPC::VSL0 && TargetReg <= PPC::VSL31))
  2110. >       Opcode = LowerOpcode;
  2111.       else
  2112.         Opcode = UpperOpcode;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:2112: error: UNINITIALIZED_VALUE
  The value read from UpperOpcode was never initialized.
  2110.         Opcode = LowerOpcode;
  2111.       else
  2112. >       Opcode = UpperOpcode;
  2113.       MI.setDesc(get(Opcode));
  2114.       return true;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:2089: error: UNINITIALIZED_VALUE
  The value read from OS was never initialized.
  2087.     }
  2088.   
  2089. >   return TargetVersion < alignedAllocMinVersion(OS);
  2090.   }
  2091.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:2082: error: DEAD_STORE
  The value written to &A (type llvm::RegisterAsmPrinter<llvm::ARMAsmPrinter>*) is never used.
  2080.     RegisterAsmPrinter<ARMAsmPrinter> X(getTheARMLETarget());
  2081.     RegisterAsmPrinter<ARMAsmPrinter> Y(getTheARMBETarget());
  2082. >   RegisterAsmPrinter<ARMAsmPrinter> A(getTheThumbLETarget());
  2083.     RegisterAsmPrinter<ARMAsmPrinter> B(getTheThumbBETarget());
  2084.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:2083: error: DEAD_STORE
  The value written to &B (type llvm::RegisterAsmPrinter<llvm::ARMAsmPrinter>*) is never used.
  2081.     RegisterAsmPrinter<ARMAsmPrinter> Y(getTheARMBETarget());
  2082.     RegisterAsmPrinter<ARMAsmPrinter> A(getTheThumbLETarget());
  2083. >   RegisterAsmPrinter<ARMAsmPrinter> B(getTheThumbBETarget());
  2084.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:2080: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<llvm::ARMAsmPrinter>*) is never used.
  2078.   // Force static initialization.
  2079.   extern "C" void LLVMInitializeARMAsmPrinter() {
  2080. >   RegisterAsmPrinter<ARMAsmPrinter> X(getTheARMLETarget());
  2081.     RegisterAsmPrinter<ARMAsmPrinter> Y(getTheARMBETarget());
  2082.     RegisterAsmPrinter<ARMAsmPrinter> A(getTheThumbLETarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:2081: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<llvm::ARMAsmPrinter>*) is never used.
  2079.   extern "C" void LLVMInitializeARMAsmPrinter() {
  2080.     RegisterAsmPrinter<ARMAsmPrinter> X(getTheARMLETarget());
  2081. >   RegisterAsmPrinter<ARMAsmPrinter> Y(getTheARMBETarget());
  2082.     RegisterAsmPrinter<ARMAsmPrinter> A(getTheThumbLETarget());
  2083.     RegisterAsmPrinter<ARMAsmPrinter> B(getTheThumbBETarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:2100: error: NULL_DEREFERENCE
  pointer `CE` last assigned on line 2095 could be null and is dereferenced at line 2100, column 11.
  2098.     }
  2099.   
  2100. >   switch (CE->getOpcode()) {
  2101.     default:
  2102.       // If the code isn't optimized, there may be outstanding folding

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:2122: error: DEAD_STORE
  The value written to &NumLeftover (type int) is never used.
  2120.                        NarrowLeftoverRegs)) {
  2121.         NumParts = NarrowRegs.size();
  2122. >       NumLeftover = NarrowLeftoverRegs.size();
  2123.       }
  2124.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2098: error: DEAD_STORE
  The value written to &Mem (type llvm::MemSDNode*) is never used.
  2096.     SDValue Flag = Node->getOperand(3);
  2097.     SDLoc DL(Node);
  2098. >   MemSDNode *Mem = cast<MemSDNode>(Node);
  2099.   
  2100.     unsigned VecSize;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:2147: error: DEAD_STORE
  The value written to &IdxReg (type unsigned int) is never used.
  2145.       bool BaseRegKill = false;
  2146.   
  2147. >     unsigned IdxReg = ~0U;
  2148.       bool IdxRegKill = true;
  2149.       if (isThumb2) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:2186: error: DEAD_STORE
  The value written to &VoidType (type llvm::Type*) is never used.
  2184.       // Read a record.
  2185.       Record.clear();
  2186. >     Type *VoidType = Type::getVoidTy(Context);
  2187.       Value *V = nullptr;
  2188.       unsigned BitCode = Stream.readRecord(Entry.ID, Record);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:2159: error: DEAD_STORE
  The value written to &NumReleases (type llvm::Statistic&) is never used.
  2157.     Statistic &NumRetains =
  2158.         AfterOptimization ? NumRetainsAfterOpt : NumRetainsBeforeOpt;
  2159. >   Statistic &NumReleases =
  2160.         AfterOptimization ? NumReleasesAfterOpt : NumReleasesBeforeOpt;
  2161.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:2157: error: DEAD_STORE
  The value written to &NumRetains (type llvm::Statistic&) is never used.
  2155.   void
  2156.   ObjCARCOpt::GatherStatistics(Function &F, bool AfterOptimization) {
  2157. >   Statistic &NumRetains =
  2158.         AfterOptimization ? NumRetainsAfterOpt : NumRetainsBeforeOpt;
  2159.     Statistic &NumReleases =

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2175: error: DEAD_STORE
  The value written to &Mem (type llvm::MemSDNode*) is never used.
  2173.     SDValue Offset = N->getOperand(1);
  2174.     unsigned OffsetVal = cast<ConstantSDNode>(Offset)->getZExtValue();
  2175. >   MemSDNode *Mem = cast<MemSDNode>(N);
  2176.   
  2177.     // How many elements do we have?

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2178: error: DEAD_STORE
  The value written to &NumElts (type unsigned int) is never used.
  2176.   
  2177.     // How many elements do we have?
  2178. >   unsigned NumElts = 1;
  2179.     switch (N->getOpcode()) {
  2180.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2174: error: DEAD_STORE
  The value written to &OffsetVal (type unsigned int) is never used.
  2172.     SDValue Chain = N->getOperand(0);
  2173.     SDValue Offset = N->getOperand(1);
  2174. >   unsigned OffsetVal = cast<ConstantSDNode>(Offset)->getZExtValue();
  2175.     MemSDNode *Mem = cast<MemSDNode>(N);
  2176.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:2328: error: DEAD_STORE
  The value written to &NewReg (type unsigned int) is never used.
  2326.             // Make sure the loop value Phi has been processed already.
  2327.             if (LVNumStages > (int)np && VRMap[CurStageNum].count(LoopVal)) {
  2328. >             NewReg = PhiOp2;
  2329.               unsigned ReuseStage = CurStageNum;
  2330.               if (Schedule.isLoopCarried(this, *PhiInst))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:2202: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `NewTI` could be dangling and is dereferenced or freed at line 2202, column 3.
  2200.     }
  2201.   
  2202. >   NewTI->takeName(TI);
  2203.     NewTI->setDebugLoc(TI->getDebugLoc());
  2204.     UnwindDest->removePredecessor(BB);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:2241: error: DEAD_STORE
  The value written to &NeedExt (type _Bool) is never used.
  2239.       bool NeedExt = false;
  2240.       if (EltVT.getSizeInBits() < 16)
  2241. >       NeedExt = true;
  2242.   
  2243.       bool StoreF16x2 = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:2206: error: DEAD_STORE
  The value written to &Cost (type unsigned char) is never used.
  2204.                                              MVT VT) const {
  2205.     const TargetRegisterClass *RRC = nullptr;
  2206. >   uint8_t Cost = 1;
  2207.     switch (VT.SimpleTy) {
  2208.     default:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:2229: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `LC` was dereferenced at line 2226 and is tested for null at line 2229, column 7.
  2227.       const LocationContext *LC = FromLC;
  2228.       while (LC != ToLC) {
  2229. >       assert(LC && "ToLC must be a parent of FromLC!");
  2230.         for (auto I : State->get<ObjectsUnderConstruction>())
  2231.           if (I.first.getLocationContext() == LC) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:2226: error: NULL_DEREFERENCE
  pointer `returned by getStackFrame` could be null and is dereferenced at line 2226, column 35.
  2224.     {
  2225.       const LocationContext *FromLC = Pred->getLocationContext();
  2226. >     const LocationContext *ToLC = FromLC->getStackFrame()->getParent();
  2227.       const LocationContext *LC = FromLC;
  2228.       while (LC != ToLC) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:2354: error: UNINITIALIZED_VALUE
  The value read from Mask0Imm was never initialized.
  2352.       // (and Y, Mask1Imm)' where Mask1Imm is the shifted mask masking off the
  2353.       // bits to be inserted.
  2354. >     if (isShiftedMask(Mask0Imm, VT)) {
  2355.         std::swap(And0, And1);
  2356.         std::swap(Mask0Imm, Mask1Imm);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:2361: error: UNINITIALIZED_VALUE
  The value read from Mask1Imm was never initialized.
  2359.       SDValue Src = And1->getOperand(0);
  2360.       SDValue Dst = And0->getOperand(0);
  2361. >     unsigned LSB = countTrailingZeros(Mask1Imm);
  2362.       int Width = BitWidth - APInt(BitWidth, Mask0Imm).countPopulation();
  2363.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2247: error: DEAD_STORE
  The value written to &Mem (type llvm::MemSDNode*) is never used.
  2245.     SDValue Offset = N->getOperand(2);
  2246.     unsigned OffsetVal = cast<ConstantSDNode>(Offset)->getZExtValue();
  2247. >   MemSDNode *Mem = cast<MemSDNode>(N);
  2248.     SDValue Flag = N->getOperand(N->getNumOperands() - 1);
  2249.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2251: error: DEAD_STORE
  The value written to &NumElts (type unsigned int) is never used.
  2249.   
  2250.     // How many elements do we have?
  2251. >   unsigned NumElts = 1;
  2252.     switch (N->getOpcode()) {
  2253.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2246: error: DEAD_STORE
  The value written to &OffsetVal (type unsigned int) is never used.
  2244.     unsigned ParamVal = cast<ConstantSDNode>(Param)->getZExtValue();
  2245.     SDValue Offset = N->getOperand(2);
  2246. >   unsigned OffsetVal = cast<ConstantSDNode>(Offset)->getZExtValue();
  2247.     MemSDNode *Mem = cast<MemSDNode>(N);
  2248.     SDValue Flag = N->getOperand(N->getNumOperands() - 1);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:2244: error: DEAD_STORE
  The value written to &ParamVal (type unsigned int) is never used.
  2242.     SDValue Chain = N->getOperand(0);
  2243.     SDValue Param = N->getOperand(1);
  2244. >   unsigned ParamVal = cast<ConstantSDNode>(Param)->getZExtValue();
  2245.     SDValue Offset = N->getOperand(2);
  2246.     unsigned OffsetVal = cast<ConstantSDNode>(Offset)->getZExtValue();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:2249: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 2242 could be null and is dereferenced at line 2249, column 31.
  2247.     // Check successor nodes' PHI nodes that expect a constant to be available
  2248.     // from this block.
  2249. >   for (unsigned succ = 0, e = TI->getNumSuccessors(); succ != e; ++succ) {
  2250.       const BasicBlock *SuccBB = TI->getSuccessor(succ);
  2251.       if (!isa<PHINode>(SuccBB->begin()))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:2279: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression (CmpVal&-CmpVal)` of type unsigned long long at line 2279, column 5.
  2277.       // If the low N bits of Op1 are zero than the low N bits of Op0 can
  2278.       // be masked off without changing the result.
  2279. >     MaskVal = -(CmpVal & -CmpVal);
  2280.       NewC.ICmpType = SystemZICMP::UnsignedOnly;
  2281.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:2250: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Part` of type unsigned int at line 2250, column 48.
  2248.         // wide store needs to start at the last vector element.
  2249.         PartPtr = cast<GetElementPtrInst>(
  2250. >           Builder.CreateGEP(ScalarDataTy, Ptr, Builder.getInt32(-Part * VF)));
  2251.         PartPtr->setIsInBounds(InBounds);
  2252.         PartPtr = cast<GetElementPtrInst>(

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParsePragma.cpp:2329: error: UNINITIALIZED_VALUE
  The value read from RepresentationMethod was never initialized.
  2327.     AnnotTok.setLocation(PointersToMembersLoc);
  2328.     AnnotTok.setAnnotationEndLoc(EndLoc);
  2329. >   AnnotTok.setAnnotationValue(
  2330.         reinterpret_cast<void *>(static_cast<uintptr_t>(RepresentationMethod)));
  2331.     PP.EnterToken(AnnotTok);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:2257: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getValue` of type unsigned int at line 2257, column 21.
  2255.       // negation in the assembly source, so twiddle it here.
  2256.       const MCConstantExpr *CE = dyn_cast<MCConstantExpr>(getImm());
  2257. >     Inst.addOperand(MCOperand::createImm(-(uint32_t)CE->getValue()));
  2258.     }
  2259.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2346: error: UNINITIALIZED_VALUE
  The value read from TlsOffset was never initialized.
  2344.           .addImm(1).addReg(0).addImm(-StackSize).addReg(0);
  2345.   
  2346. >     BuildMI(checkMBB, DL, TII.get(IsLP64 ? X86::CMP64rm : X86::CMP32rm)).addReg(ScratchReg)
  2347.         .addReg(0).addImm(1).addReg(0).addImm(TlsOffset).addReg(TlsReg);
  2348.     } else {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2375: error: UNINITIALIZED_VALUE
  The value read from TlsOffset was never initialized.
  2373.       if (STI.isTargetLinux() || STI.isTargetWin32() || STI.isTargetWin64() ||
  2374.           STI.isTargetDragonFly()) {
  2375. >       BuildMI(checkMBB, DL, TII.get(X86::CMP32rm)).addReg(ScratchReg)
  2376.           .addReg(0).addImm(0).addReg(0).addImm(TlsOffset).addReg(TlsReg);
  2377.       } else if (STI.isTargetDarwin()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2403: error: UNINITIALIZED_VALUE
  The value read from TlsOffset was never initialized.
  2401.             .addReg(ScratchReg2, RegState::Kill);
  2402.   
  2403. >       BuildMI(checkMBB, DL, TII.get(X86::MOV32ri), ScratchReg2)
  2404.           .addImm(TlsOffset);
  2405.         BuildMI(checkMBB, DL, TII.get(X86::CMP32rm))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2346: error: UNINITIALIZED_VALUE
  The value read from TlsReg was never initialized.
  2344.           .addImm(1).addReg(0).addImm(-StackSize).addReg(0);
  2345.   
  2346. >     BuildMI(checkMBB, DL, TII.get(IsLP64 ? X86::CMP64rm : X86::CMP32rm)).addReg(ScratchReg)
  2347.         .addReg(0).addImm(1).addReg(0).addImm(TlsOffset).addReg(TlsReg);
  2348.     } else {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2375: error: UNINITIALIZED_VALUE
  The value read from TlsReg was never initialized.
  2373.       if (STI.isTargetLinux() || STI.isTargetWin32() || STI.isTargetWin64() ||
  2374.           STI.isTargetDragonFly()) {
  2375. >       BuildMI(checkMBB, DL, TII.get(X86::CMP32rm)).addReg(ScratchReg)
  2376.           .addReg(0).addImm(0).addReg(0).addImm(TlsOffset).addReg(TlsReg);
  2377.       } else if (STI.isTargetDarwin()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2405: error: UNINITIALIZED_VALUE
  The value read from TlsReg was never initialized.
  2403.         BuildMI(checkMBB, DL, TII.get(X86::MOV32ri), ScratchReg2)
  2404.           .addImm(TlsOffset);
  2405. >       BuildMI(checkMBB, DL, TII.get(X86::CMP32rm))
  2406.           .addReg(ScratchReg)
  2407.           .addReg(ScratchReg2).addImm(1).addReg(0)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:2269: error: DEAD_STORE
  The value written to &RHS (type llvm::Value*) is never used.
  2267.   
  2268.     const Value *LHS = CI->getOperand(0);
  2269. >   const Value *RHS = CI->getOperand(1);
  2270.   
  2271.     MVT VT;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:2288: error: DEAD_STORE
  The value written to &TestBit (type int) is never used.
  2286.     }
  2287.   
  2288. >   int TestBit = -1;
  2289.     bool IsCmpNE;
  2290.     switch (Predicate) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:2265: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getValue` of type unsigned int at line 2265, column 21.
  2263.       // negation in the assembly source, so twiddle it here.
  2264.       const MCConstantExpr *CE = dyn_cast<MCConstantExpr>(getImm());
  2265. >     Inst.addOperand(MCOperand::createImm(-(uint32_t)CE->getValue()));
  2266.     }
  2267.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:62: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  60.     P.Diag(DigraphToken.getLocation(), diag::err_missing_whitespace_digraph)
  61.         << SelectDigraphErrorMessage(Kind)
  62. >       << FixItHint::CreateReplacement(Range, "< ::");
  63.   
  64.     // Update token information to reflect their change in token type.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:63: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  61.         << SelectDigraphErrorMessage(Kind)
  62.         << FixItHint::CreateReplacement(Range, "< ::");
  63. > 
  64.     // Update token information to reflect their change in token type.
  65.     ColonToken.setKind(tok::coloncolon);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:64: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  62.         << FixItHint::CreateReplacement(Range, "< ::");
  63.   
  64. >   // Update token information to reflect their change in token type.
  65.     ColonToken.setKind(tok::coloncolon);
  66.     ColonToken.setLocation(ColonToken.getLocation().getLocWithOffset(-1));

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:65: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  63.   
  64.     // Update token information to reflect their change in token type.
  65. >   ColonToken.setKind(tok::coloncolon);
  66.     ColonToken.setLocation(ColonToken.getLocation().getLocWithOffset(-1));
  67.     ColonToken.setLength(2);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:66: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  64.     // Update token information to reflect their change in token type.
  65.     ColonToken.setKind(tok::coloncolon);
  66. >   ColonToken.setLocation(ColonToken.getLocation().getLocWithOffset(-1));
  67.     ColonToken.setLength(2);
  68.     DigraphToken.setKind(tok::less);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:67: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  65.     ColonToken.setKind(tok::coloncolon);
  66.     ColonToken.setLocation(ColonToken.getLocation().getLocWithOffset(-1));
  67. >   ColonToken.setLength(2);
  68.     DigraphToken.setKind(tok::less);
  69.     DigraphToken.setLength(1);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:68: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  66.     ColonToken.setLocation(ColonToken.getLocation().getLocWithOffset(-1));
  67.     ColonToken.setLength(2);
  68. >   DigraphToken.setKind(tok::less);
  69.     DigraphToken.setLength(1);
  70.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:69: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  67.     ColonToken.setLength(2);
  68.     DigraphToken.setKind(tok::less);
  69. >   DigraphToken.setLength(1);
  70.   
  71.     // Push new tokens back to token stream.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:70: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  68.     DigraphToken.setKind(tok::less);
  69.     DigraphToken.setLength(1);
  70. > 
  71.     // Push new tokens back to token stream.
  72.     PP.EnterToken(ColonToken);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:71: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  69.     DigraphToken.setLength(1);
  70.   
  71. >   // Push new tokens back to token stream.
  72.     PP.EnterToken(ColonToken);
  73.     if (!AtDigraph)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:72: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  70.   
  71.     // Push new tokens back to token stream.
  72. >   PP.EnterToken(ColonToken);
  73.     if (!AtDigraph)
  74.       PP.EnterToken(DigraphToken);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:73: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  71.     // Push new tokens back to token stream.
  72.     PP.EnterToken(ColonToken);
  73. >   if (!AtDigraph)
  74.       PP.EnterToken(DigraphToken);
  75.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:74: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  72.     PP.EnterToken(ColonToken);
  73.     if (!AtDigraph)
  74. >     PP.EnterToken(DigraphToken);
  75.   }
  76.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:75: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  73.     if (!AtDigraph)
  74.       PP.EnterToken(DigraphToken);
  75. > }
  76.   
  77.   // Check for '<::' which should be '< ::' instead of '[:' when following

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:76: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  74.       PP.EnterToken(DigraphToken);
  75.   }
  76. > 
  77.   // Check for '<::' which should be '< ::' instead of '[:' when following
  78.   // a template name.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:77: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  75.   }
  76.   
  77. > // Check for '<::' which should be '< ::' instead of '[:' when following
  78.   // a template name.
  79.   void Parser::CheckForTemplateAndDigraph(Token &Next, ParsedType ObjectType,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:78: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  76.   
  77.   // Check for '<::' which should be '< ::' instead of '[:' when following
  78. > // a template name.
  79.   void Parser::CheckForTemplateAndDigraph(Token &Next, ParsedType ObjectType,
  80.                                           bool EnteringContext,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:79: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  77.   // Check for '<::' which should be '< ::' instead of '[:' when following
  78.   // a template name.
  79. > void Parser::CheckForTemplateAndDigraph(Token &Next, ParsedType ObjectType,
  80.                                           bool EnteringContext,
  81.                                           IdentifierInfo &II, CXXScopeSpec &SS) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:80: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  78.   // a template name.
  79.   void Parser::CheckForTemplateAndDigraph(Token &Next, ParsedType ObjectType,
  80. >                                         bool EnteringContext,
  81.                                           IdentifierInfo &II, CXXScopeSpec &SS) {
  82.     if (!Next.is(tok::l_square) || Next.getLength() != 2)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:81: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  79.   void Parser::CheckForTemplateAndDigraph(Token &Next, ParsedType ObjectType,
  80.                                           bool EnteringContext,
  81. >                                         IdentifierInfo &II, CXXScopeSpec &SS) {
  82.     if (!Next.is(tok::l_square) || Next.getLength() != 2)
  83.       return;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:82: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  80.                                           bool EnteringContext,
  81.                                           IdentifierInfo &II, CXXScopeSpec &SS) {
  82. >   if (!Next.is(tok::l_square) || Next.getLength() != 2)
  83.       return;
  84.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:83: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  81.                                           IdentifierInfo &II, CXXScopeSpec &SS) {
  82.     if (!Next.is(tok::l_square) || Next.getLength() != 2)
  83. >     return;
  84.   
  85.     Token SecondToken = GetLookAheadToken(2);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:84: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  82.     if (!Next.is(tok::l_square) || Next.getLength() != 2)
  83.       return;
  84. > 
  85.     Token SecondToken = GetLookAheadToken(2);
  86.     if (!SecondToken.is(tok::colon) || !areTokensAdjacent(Next, SecondToken))

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:85: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  83.       return;
  84.   
  85. >   Token SecondToken = GetLookAheadToken(2);
  86.     if (!SecondToken.is(tok::colon) || !areTokensAdjacent(Next, SecondToken))
  87.       return;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:86: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  84.   
  85.     Token SecondToken = GetLookAheadToken(2);
  86. >   if (!SecondToken.is(tok::colon) || !areTokensAdjacent(Next, SecondToken))
  87.       return;
  88.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:87: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  85.     Token SecondToken = GetLookAheadToken(2);
  86.     if (!SecondToken.is(tok::colon) || !areTokensAdjacent(Next, SecondToken))
  87. >     return;
  88.   
  89.     TemplateTy Template;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:88: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  86.     if (!SecondToken.is(tok::colon) || !areTokensAdjacent(Next, SecondToken))
  87.       return;
  88. > 
  89.     TemplateTy Template;
  90.     UnqualifiedId TemplateName;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:89: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  87.       return;
  88.   
  89. >   TemplateTy Template;
  90.     UnqualifiedId TemplateName;
  91.     TemplateName.setIdentifier(&II, Tok.getLocation());

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:90: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  88.   
  89.     TemplateTy Template;
  90. >   UnqualifiedId TemplateName;
  91.     TemplateName.setIdentifier(&II, Tok.getLocation());
  92.     bool MemberOfUnknownSpecialization;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:91: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  89.     TemplateTy Template;
  90.     UnqualifiedId TemplateName;
  91. >   TemplateName.setIdentifier(&II, Tok.getLocation());
  92.     bool MemberOfUnknownSpecialization;
  93.     if (!Actions.isTemplateName(getCurScope(), SS, /*hasTemplateKeyword=*/false,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:92: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  90.     UnqualifiedId TemplateName;
  91.     TemplateName.setIdentifier(&II, Tok.getLocation());
  92. >   bool MemberOfUnknownSpecialization;
  93.     if (!Actions.isTemplateName(getCurScope(), SS, /*hasTemplateKeyword=*/false,
  94.                                 TemplateName, ObjectType, EnteringContext,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:93: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  91.     TemplateName.setIdentifier(&II, Tok.getLocation());
  92.     bool MemberOfUnknownSpecialization;
  93. >   if (!Actions.isTemplateName(getCurScope(), SS, /*hasTemplateKeyword=*/false,
  94.                                 TemplateName, ObjectType, EnteringContext,
  95.                                 Template, MemberOfUnknownSpecialization))

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:94: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  92.     bool MemberOfUnknownSpecialization;
  93.     if (!Actions.isTemplateName(getCurScope(), SS, /*hasTemplateKeyword=*/false,
  94. >                               TemplateName, ObjectType, EnteringContext,
  95.                                 Template, MemberOfUnknownSpecialization))
  96.       return;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:95: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  93.     if (!Actions.isTemplateName(getCurScope(), SS, /*hasTemplateKeyword=*/false,
  94.                                 TemplateName, ObjectType, EnteringContext,
  95. >                               Template, MemberOfUnknownSpecialization))
  96.       return;
  97.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:96: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  94.                                 TemplateName, ObjectType, EnteringContext,
  95.                                 Template, MemberOfUnknownSpecialization))
  96. >     return;
  97.   
  98.     FixDigraph(*this, PP, Next, SecondToken, tok::unknown,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:97: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  95.                                 Template, MemberOfUnknownSpecialization))
  96.       return;
  97. > 
  98.     FixDigraph(*this, PP, Next, SecondToken, tok::unknown,
  99.                /*AtDigraph*/false);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:98: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  96.       return;
  97.   
  98. >   FixDigraph(*this, PP, Next, SecondToken, tok::unknown,
  99.                /*AtDigraph*/false);
  100.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:104: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  102.   /// Parse global scope or nested-name-specifier if present.
  103.   ///
  104. > /// Parses a C++ global scope specifier ('::') or nested-name-specifier (which
  105.   /// may be preceded by '::'). Note that this routine will not parse ::new or
  106.   /// ::delete; it will just leave them in the token stream.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:2295: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  2293.   
  2294.           SymbolLocations[SymbolIdx++] = T.getOpenLocation();
  2295. >         SymbolLocations[SymbolIdx++] = T.getCloseLocation();
  2296.           Op = isNew? OO_Array_New : OO_Array_Delete;
  2297.         } else {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:2320: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  2318.   
  2319.         SymbolLocations[SymbolIdx++] = T.getOpenLocation();
  2320. >       SymbolLocations[SymbolIdx++] = T.getCloseLocation();
  2321.         Op = OO_Call;
  2322.         break;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:2334: error: DEAD_STORE
  The value written to &SymbolIdx (type unsigned int) is never used.
  2332.   
  2333.         SymbolLocations[SymbolIdx++] = T.getOpenLocation();
  2334. >       SymbolLocations[SymbolIdx++] = T.getCloseLocation();
  2335.         Op = OO_Subscript;
  2336.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:2271: error: DEAD_STORE
  The value written to &IsFMA (type _Bool) is never used.
  2269.     unsigned Opc = MI.getOpcode();
  2270.     bool IsF16 = false;
  2271. >   bool IsFMA = Opc == AMDGPU::V_FMAC_F32_e32 || Opc == AMDGPU::V_FMAC_F32_e64;
  2272.   
  2273.     switch (Opc) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:2304: error: UNINITIALIZED_VALUE
  The value read from ISDOpc was never initialized.
  2302.     SDValue Hi0orLo0 = DAG.getSetCC(SL, SetCCVT, HiOrLo, Zero, ISD::SETEQ);
  2303.   
  2304. >   SDValue OprLo = DAG.getNode(ISDOpc, SL, MVT::i32, Lo);
  2305.     SDValue OprHi = DAG.getNode(ISDOpc, SL, MVT::i32, Hi);
  2306.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:2305: error: UNINITIALIZED_VALUE
  The value read from ISDOpc was never initialized.
  2303.   
  2304.     SDValue OprLo = DAG.getNode(ISDOpc, SL, MVT::i32, Lo);
  2305. >   SDValue OprHi = DAG.getNode(ISDOpc, SL, MVT::i32, Hi);
  2306.   
  2307.     const SDValue Bits32 = DAG.getConstant(32, SL, MVT::i32);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:2288: error: UNINITIALIZED_VALUE
  The value read from NewOpc was never initialized.
  2286.   
  2287.     if (ZeroUndef && Src.getValueType() == MVT::i32)
  2288. >     return DAG.getNode(NewOpc, SL, MVT::i32, Src);
  2289.   
  2290.     SDValue Vec = DAG.getNode(ISD::BITCAST, SL, MVT::v2i32, Src);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:2277: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 2277, column 7.
  2275.     Type *ScalarType = Val->getScalarType();
  2276.   
  2277. >   if (Index != -1U) {
  2278.       // Legalize the type.
  2279.       std::pair<int, MVT> LT = TLI->getTypeLegalizationCost(DL, Val);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:2295: error: DEAD_STORE
  The value written to &JMD (type llvm::MDNode*) is never used.
  2293.     for (const auto &MD : Metadata) {
  2294.       unsigned Kind = MD.first;
  2295. >     MDNode *JMD = J->getMetadata(Kind);
  2296.       MDNode *KMD = MD.second;
  2297.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:2296: error: DEAD_STORE
  The value written to &KMD (type llvm::MDNode*) is never used.
  2294.       unsigned Kind = MD.first;
  2295.       MDNode *JMD = J->getMetadata(Kind);
  2296. >     MDNode *KMD = MD.second;
  2297.   
  2298.       switch (Kind) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:2297: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 2297, column 9.
  2295.     if (CanVecMem) {
  2296.       OS.indent(Depth) << "Memory dependences are safe";
  2297. >     if (MaxSafeDepDistBytes != -1ULL)
  2298.         OS << " with a maximum dependence distance of " << MaxSafeDepDistBytes
  2299.            << " bytes";

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:2296: error: DEAD_STORE
  The value written to &X (type llvm::RegisterAsmPrinter<llvm::NVPTXAsmPrinter>*) is never used.
  2294.   // Force static initialization.
  2295.   extern "C" void LLVMInitializeNVPTXAsmPrinter() {
  2296. >   RegisterAsmPrinter<NVPTXAsmPrinter> X(getTheNVPTXTarget32());
  2297.     RegisterAsmPrinter<NVPTXAsmPrinter> Y(getTheNVPTXTarget64());
  2298.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:2297: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterAsmPrinter<llvm::NVPTXAsmPrinter>*) is never used.
  2295.   extern "C" void LLVMInitializeNVPTXAsmPrinter() {
  2296.     RegisterAsmPrinter<NVPTXAsmPrinter> X(getTheNVPTXTarget32());
  2297. >   RegisterAsmPrinter<NVPTXAsmPrinter> Y(getTheNVPTXTarget64());
  2298.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:2351: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 2351, column 3.
  2349.   void SelectionDAGBuilder::visitJumpTable(JumpTable &JT) {
  2350.     // Emit the code for the jump table
  2351. >   assert(JT.Reg != -1U && "Should lower JT Header first!");
  2352.     EVT PTy = DAG.getTargetLoweringInfo().getPointerTy(DAG.getDataLayout());
  2353.     SDValue Index = DAG.getCopyFromReg(getControlRoot(), getCurSDLoc(),

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:2372: error: DEAD_STORE
  The value written to &U (type llvm::Operator const *) is never used.
  2370.       return 1;  // Limit search depth.
  2371.   
  2372. >   const Operator *U = dyn_cast<Operator>(V);
  2373.     switch (Operator::getOpcode(V)) {
  2374.     default: break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:2410: error: NULL_DEREFERENCE
  pointer `ET` could be null and is dereferenced at line 2410, column 44.
  2408.     // PPC's long double has odd notions of endianness compared to how LLVM
  2409.     // handles it: p[0] goes first for *big* endian on PPC.
  2410. >   if (AP.getDataLayout().isBigEndian() && !ET->isPPC_FP128Ty()) {
  2411.       int Chunk = API.getNumWords() - 1;
  2412.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:2421: error: NULL_DEREFERENCE
  .
  2419.          UI != UE;) {
  2420.       Use &U = *UI++;
  2421. >     if (!Dominates(Root, U))
  2422.         continue;
  2423.       U.set(To);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:2438: error: NULL_DEREFERENCE
  pointer `TableEnd` last assigned on line 2429 could be null and is dereferenced by call to `emitDebugRangesImpl()` at line 2438, column 3.
  2436.           Asm->getObjFileLowering().getDwarfRangesSection());
  2437.   
  2438. >   emitDebugRangesImpl(*this, Asm, Holder, TableEnd);
  2439.   }
  2440.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:2524: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `PreviousToken` was dereferenced at line 2532 and is tested for null at line 2524, column 9.
  2522.     const FormatToken *PreviousToken = nullptr;
  2523.     for (const UnwrappedLineNode &Node : Line.Tokens) {
  2524. >     if (PreviousToken && PreviousToken->is(tok::l_brace) &&
  2525.           isLineComment(*Node.Tok)) {
  2526.         MinColumnToken = PreviousToken;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Instructions.cpp:2474: error: DEAD_STORE
  The value written to &numCastOps (type unsigned int const ) is never used.
  2472.     // and causes issues when building libgcc.  We disallow fptosi+sext for the
  2473.     // same reason.
  2474. >   const unsigned numCastOps =
  2475.       Instruction::CastOpsEnd - Instruction::CastOpsBegin;
  2476.     static const uint8_t CastResults[numCastOps][numCastOps] = {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:2476: error: UNINITIALIZED_VALUE
  The value read from LROffset was never initialized.
  2474.   
  2475.     RetOps.insert(RetOps.begin() + 1,
  2476. >                 DAG.getConstant(LROffset, DL, MVT::i32, false));
  2477.   
  2478.     return DAG.getNode(ARMISD::INTRET_FLAG, DL, MVT::Other, RetOps);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:2504: error: UNINITIALIZED_VALUE
  The value read from ImplicitDefReg was never initialized.
  2502.   
  2503.     if (Subtarget->hasAVX())
  2504. >     MIB.addReg(ImplicitDefReg);
  2505.   
  2506.     MIB.addReg(OpReg);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:2493: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `FallthroughBB` was dereferenced at line 2490 and is tested for null at line 2493, column 9.
  2491.         continue;
  2492.       // Return a nullptr if we found more than one fallthrough successor.
  2493. >     if (FallthroughBB && FallthroughBB != TBB)
  2494.         return nullptr;
  2495.       FallthroughBB = *SI;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:2501: error: UNINITIALIZED_VALUE
  The value read from Opcode was never initialized.
  2499.     SDValue Ops[] = {N->getOperand(1), N->getOperand(2), N->getOperand(3),
  2500.                      N->getOperand(0)};
  2501. >   SDNode *CmpSwap = CurDAG->getMachineNode(
  2502.         Opcode, SDLoc(N),
  2503.         CurDAG->getVTList(MVT::i32, MVT::i32, MVT::Other), Ops);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Constants.cpp:2528: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Node` was dereferenced at line 2518 and is tested for null at line 2528, column 7.
  2526.       for (ConstantDataSequential *Node = *Entry; ;
  2527.            Entry = &Node->Next, Node = *Entry) {
  2528. >       assert(Node && "Didn't find entry in its uniquing hash table!");
  2529.         // If we found our entry, unlink it from the list and we're done.
  2530.         if (Node == this) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:2522: error: DEAD_STORE
  The value written to &ForwardingOperandReg (type unsigned int) is never used.
  2520.     bool IsForwardingOperandKilled = MI.getOperand(ForwardingOperand).isKill();
  2521.     bool KillFwdDefMI = !SeenIntermediateUse && IsForwardingOperandKilled;
  2522. >   unsigned ForwardingOperandReg = MI.getOperand(ForwardingOperand).getReg();
  2523.     if (KilledDef && KillFwdDefMI)
  2524.       *KilledDef = DefMI;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:2630: error: UNINITIALIZED_VALUE
  The value read from Op was never initialized.
  2628.         // return value.
  2629.         EVT TheStoreType = ExtendIntegerRetVal ? MVT::i32 : VTs[i];
  2630. >       Chain = DAG.getMemIntrinsicNode(Op, dl, DAG.getVTList(MVT::Other),
  2631.                                         StoreOperands, TheStoreType,
  2632.                                         MachinePointerInfo(), /* Align */ 1,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:3471: error: UNINITIALIZED_VALUE
  The value read from TrueValue was never initialized.
  3469.       }
  3470.       Tmp1 = DAG.getNode(ISD::SELECT_CC, dl, VT, Tmp1, Tmp2,
  3471. >                        DAG.getConstant(TrueValue, dl, VT),
  3472.                          DAG.getConstant(0, dl, VT),
  3473.                          Tmp3);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:2743: error: UNINITIALIZED_VALUE
  The value read from ResultReg was never initialized.
  2741.     }
  2742.   
  2743. >   return ResultReg;
  2744.   }
  2745.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:2833: error: DEAD_STORE
  The value written to &AVXLevel (type unsigned int) is never used.
  2831.         { X86::VSQRTSSZr, X86::VSQRTSDZr },
  2832.       };
  2833. >     unsigned AVXLevel = Subtarget->hasAVX512() ? 2 :
  2834.                           Subtarget->hasAVX()    ? 1 :
  2835.                                                    0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/AsmWriter.cpp:2658: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 2658, column 9.
  2656.           // A module id of -1 is a special entry for a regular LTO module created
  2657.           // during the thin link.
  2658. >         ModPath.second.first == -1u ? RegularLTOModuleName
  2659.                                       : (std::string)ModPath.first(),
  2660.           ModPath.second.second);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:2662: error: NULL_DEREFERENCE
  pointer `Receiver` could be null and is dereferenced at line 2662, column 56.
  2660.   
  2661.     // The location of the receiver.
  2662. >   SourceLocation Loc = SuperLoc.isValid() ? SuperLoc : Receiver->getBeginLoc();
  2663.     SourceRange RecRange =
  2664.         SuperLoc.isValid()? SuperLoc : Receiver->getSourceRange();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:2739: error: UNINITIALIZED_VALUE
  The value read from Regs[_] was never initialized.
  2737.   
  2738.     for (int i = 0; i < NumPops; ++i)
  2739. >     BuildMI(MBB, MBBI, DL,
  2740.               TII.get(STI.is64Bit() ? X86::POP64r : X86::POP32r), Regs[i]);
  2741.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGClass.cpp:2725: error: UNINITIALIZED_VALUE
  The value read from SSK was never initialized.
  2723.   
  2724.     SanitizerScope SanScope(this);
  2725. >   EmitSanitizerStatReport(SSK);
  2726.   
  2727.     llvm::Metadata *MD =

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:2698: error: DEAD_STORE
  The value written to &ImmIdx (type unsigned int) is never used.
  2696.       return TTI::TCC_Free;
  2697.   
  2698. >   unsigned ImmIdx = ~0U;
  2699.     switch (Opcode) {
  2700.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:2705: error: NULL_DEREFERENCE
  pointer `F` last assigned on line 2696 could be null and is dereferenced at line 2705, column 15.
  2703.         Result += '|';
  2704.   
  2705. >     Result += F->getEnumName();
  2706.       ++NumFeatures;
  2707.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:2742: error: UNINITIALIZED_VALUE
  The value read from Opcode was never initialized.
  2740.     SDValue Ops[] = {N->getOperand(1), N->getOperand(2), N->getOperand(3),
  2741.                      N->getOperand(0)};
  2742. >   SDNode *CmpSwap = CurDAG->getMachineNode(
  2743.         Opcode, SDLoc(N),
  2744.         CurDAG->getVTList(RegTy, MVT::i32, MVT::Other), Ops);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:2840: error: UNINITIALIZED_VALUE
  The value read from Reg was never initialized.
  2838.       State.addLoc(CCValAssign::getMem(ValNo, ValVT, Offset, LocVT, LocInfo));
  2839.     } else
  2840. >     State.addLoc(CCValAssign::getReg(ValNo, ValVT, Reg, LocVT, LocInfo));
  2841.   
  2842.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParsePragma.cpp:2760: error: UNINITIALIZED_VALUE
  The value read from FPC was never initialized.
  2758.     }
  2759.   
  2760. >   Actions.ActOnPragmaFPContract(FPC);
  2761.     ConsumeAnnotationToken();
  2762.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:2916: error: DEAD_STORE
  The value written to &IsInstrVSel (type _Bool) is never used.
  2914.         // Condition code is after the operand before CPSR except for VSELs.
  2915.         ARMCC::CondCodes CC;
  2916. >       bool IsInstrVSel = true;
  2917.         switch (Instr.getOpcode()) {
  2918.         default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:2815: error: UNINITIALIZED_VALUE
  The value read from ShiftImm was never initialized.
  2813.   
  2814.     if (Opc == ARM::MOVsi)
  2815. >     MIB.addImm(ARM_AM::getSORegOpc(ShiftTy, ShiftImm));
  2816.     else if (Opc == ARM::MOVsr) {
  2817.       MIB.addReg(Reg2);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:2782: error: DEAD_STORE
  The value written to &TII (type llvm::TargetInstrInfo const &) is never used.
  2780.   LegalizerHelper::lowerBitCount(MachineInstr &MI, unsigned TypeIdx, LLT Ty) {
  2781.     unsigned Opc = MI.getOpcode();
  2782. >   auto &TII = *MI.getMF()->getSubtarget().getInstrInfo();
  2783.     auto isSupported = [this](const LegalityQuery &Q) {
  2784.       auto QAction = LI.getAction(Q).Action;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:2868: error: DEAD_STORE
  The value written to &IsRHSNegOne (type _Bool) is never used.
  2866.     bool IsRHSZero = RHSValue == 0;
  2867.     bool IsRHSOne = RHSValue == 1;
  2868. >   bool IsRHSNegOne = RHSValue == -1LL;
  2869.     switch (CC) {
  2870.     default: return SDValue();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:2867: error: DEAD_STORE
  The value written to &IsRHSOne (type _Bool) is never used.
  2865.       return SDValue();
  2866.     bool IsRHSZero = RHSValue == 0;
  2867. >   bool IsRHSOne = RHSValue == 1;
  2868.     bool IsRHSNegOne = RHSValue == -1LL;
  2869.     switch (CC) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:2866: error: DEAD_STORE
  The value written to &IsRHSZero (type _Bool) is never used.
  2864.         CmpInGPR == ICGPR_ZextI64 || CmpInGPR == ICGPR_Sext)
  2865.       return SDValue();
  2866. >   bool IsRHSZero = RHSValue == 0;
  2867.     bool IsRHSOne = RHSValue == 1;
  2868.     bool IsRHSNegOne = RHSValue == -1LL;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:3020: error: UNINITIALIZED_VALUE
  The value read from NumArgs was never initialized.
  3018.         if (SM == CXXCopyAssignment || SM == CXXMoveAssignment)
  3019.           AddMethodCandidate(M, Cand, RD, ThisTy, Classification,
  3020. >                            llvm::makeArrayRef(&Arg, NumArgs), OCS, true);
  3021.         else if (CtorInfo)
  3022.           AddOverloadCandidate(CtorInfo.Constructor, CtorInfo.FoundDecl,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:3023: error: UNINITIALIZED_VALUE
  The value read from NumArgs was never initialized.
  3021.         else if (CtorInfo)
  3022.           AddOverloadCandidate(CtorInfo.Constructor, CtorInfo.FoundDecl,
  3023. >                              llvm::makeArrayRef(&Arg, NumArgs), OCS, true);
  3024.         else
  3025.           AddOverloadCandidate(M, Cand, llvm::makeArrayRef(&Arg, NumArgs), OCS,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:3025: error: UNINITIALIZED_VALUE
  The value read from NumArgs was never initialized.
  3023.                                llvm::makeArrayRef(&Arg, NumArgs), OCS, true);
  3024.         else
  3025. >         AddOverloadCandidate(M, Cand, llvm::makeArrayRef(&Arg, NumArgs), OCS,
  3026.                                true);
  3027.       } else if (FunctionTemplateDecl *Tmpl =

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:3032: error: UNINITIALIZED_VALUE
  The value read from NumArgs was never initialized.
  3030.           AddMethodTemplateCandidate(
  3031.               Tmpl, Cand, RD, nullptr, ThisTy, Classification,
  3032. >             llvm::makeArrayRef(&Arg, NumArgs), OCS, true);
  3033.         else if (CtorInfo)
  3034.           AddTemplateOverloadCandidate(

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:3036: error: UNINITIALIZED_VALUE
  The value read from NumArgs was never initialized.
  3034.           AddTemplateOverloadCandidate(
  3035.               CtorInfo.ConstructorTmpl, CtorInfo.FoundDecl, nullptr,
  3036. >             llvm::makeArrayRef(&Arg, NumArgs), OCS, true);
  3037.         else
  3038.           AddTemplateOverloadCandidate(

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:3039: error: UNINITIALIZED_VALUE
  The value read from NumArgs was never initialized.
  3037.         else
  3038.           AddTemplateOverloadCandidate(
  3039. >             Tmpl, Cand, nullptr, llvm::makeArrayRef(&Arg, NumArgs), OCS, true);
  3040.       } else {
  3041.         assert(isa<UsingDecl>(Cand.getDecl()) &&

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:2881: error: NULL_DEREFERENCE
  pointer `FirstField` last assigned on line 2879 could be null and is dereferenced at line 2881, column 12.
  2879.       llvm::Constant *FirstField = Val->getType()->isStructTy() ?
  2880.         Val->getAggregateElement(0U) : Val;
  2881. >     return FirstField->isNullValue();
  2882.     }
  2883.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:2878: error: NULL_DEREFERENCE
  pointer `Def` last assigned on line 2877 could be null and is dereferenced at line 2878, column 10.
  2876.     SmallPtrSet<MachineInstr *, 8> Visited;
  2877.     MachineInstr *Def = MRI.getVRegDef(Reg);
  2878. >   while (Def->isPHI()) {
  2879.       if (!Visited.insert(Def).second)
  2880.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:2900: error: DEAD_STORE
  The value written to &hiOpc (type unsigned int) is never used.
  2898.   
  2899.     bool hasChain = false;
  2900. >   unsigned hiOpc = Op.getOpcode();
  2901.     switch (Op.getOpcode()) {
  2902.     default: llvm_unreachable("Invalid opcode");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:2905: error: NULL_DEREFERENCE
  pointer `LoopInst` last assigned on line 2897 could be null and is dereferenced at line 2905, column 15.
  2903.         // order is swapped.
  2904.         PrevVal = VRMap[StageNum][LoopVal];
  2905. >     else if (!LoopInst->isPHI() || LoopInst->getParent() != BB)
  2906.         // The loop value hasn't yet been scheduled.
  2907.         PrevVal = LoopVal;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjC.cpp:2947: error: UNINITIALIZED_VALUE
  The value read from result was never initialized.
  2945.       opaques[i].unbind(CGF);
  2946.   
  2947. >   return result;
  2948.   }
  2949.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:3012: error: UNINITIALIZED_VALUE
  The value read from SrcReg was never initialized.
  3010.         llvm_unreachable("Unexpected value type.");
  3011.   
  3012. >     unsigned DstReg = FuncInfo.MF->addLiveIn(SrcReg, RC);
  3013.       // FIXME: Unfortunately it's necessary to emit a copy from the livein copy.
  3014.       // Without this, EmitLiveInCopies may eliminate the livein if its only

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:2979: error: NULL_DEREFERENCE
  pointer `QFB` could be null and is dereferenced at line 2979, column 19.
  2977.     // preserve AA currently so that is dangerous. Be super safe and just
  2978.     // check there are no other memory operations at all.
  2979. >   for (auto &I : *QFB->getSinglePredecessor())
  2980.       if (I.mayReadOrWriteMemory())
  2981.         return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:2949: error: UNINITIALIZED_VALUE
  The value read from isZExt was never initialized.
  2947.   
  2948.     unsigned ResultReg = MI->getOperand(0).getReg();
  2949. >   if (!ARMEmitLoad(VT, ResultReg, Addr, LI->getAlignment(), isZExt, false))
  2950.       return false;
  2951.     MachineBasicBlock::iterator I(MI);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseDecl.cpp:2955: error: DEAD_STORE
  The value written to &EnteringContext (type _Bool) is never used.
  2953.     }
  2954.   
  2955. >   bool EnteringContext = (DSContext == DeclSpecContext::DSC_class ||
  2956.                             DSContext == DeclSpecContext::DSC_top_level);
  2957.     bool AttrsLastTime = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:2949: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 2949, column 5 and is dereferenced or freed at line 2949, column 5.
  2947.       // Make sure we delete the congruence class (probably worth switching to
  2948.       // a unique_ptr at some point.
  2949. >     delete CongruenceClasses[i];
  2950.       CongruenceClasses[i] = nullptr;
  2951.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/Lexer.cpp:2981: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 2981, column 9.
  2979.   
  2980.       unsigned Value = llvm::hexDigitValue(C);
  2981. >     if (Value == -1U) {
  2982.         if (Result && !isLexingRawMode()) {
  2983.           if (i == 0) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:3089: error: UNINITIALIZED_VALUE
  The value read from SpillSubreg was never initialized.
  3087.         if (SpillRC)
  3088.           if (unsigned WidenedSrcReg =
  3089. >                 TRI.getMatchingSuperReg(SrcReg, SpillSubreg, SpillRC)) {
  3090.             storeRegToStackSlot(MBB, InsertPt, WidenedSrcReg, SrcMO.isKill(),
  3091.                                 FrameIndex, SpillRC, &TRI);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:3155: error: UNINITIALIZED_VALUE
  The value read from FailIndex was never initialized.
  3153.         // to match.
  3154.         MatchScope NewEntry;
  3155. >       NewEntry.FailIndex = FailIndex;
  3156.         NewEntry.NodeStack.append(NodeStack.begin(), NodeStack.end());
  3157.         NewEntry.NumRecordedNodes = RecordedNodes.size();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:2986: error: DEAD_STORE
  The value written to &ErrorFound (type _Bool) is never used.
  2984.         *this, ErrorFound, DSAStack->getCurrentDirective());
  2985.     if (!S.isUsable()) {
  2986. >     ErrorFound = true;
  2987.       return StmtError();
  2988.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDecl.cpp:3206: error: DEAD_STORE
  The value written to &NewType (type clang::FunctionType const *) is never used.
  3204.       New->setType(QualType(AdjustedType, 0));
  3205.       NewQType = Context.getCanonicalType(New->getType());
  3206. >     NewType = cast<FunctionType>(NewQType);
  3207.     }
  3208.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:3002: error: DEAD_STORE
  The value written to &hasHardQuad (type _Bool) is never used.
  3000.   LowerOperation(SDValue Op, SelectionDAG &DAG) const {
  3001.   
  3002. >   bool hasHardQuad = Subtarget->hasHardQuad();
  3003.     bool isV9        = Subtarget->isV9();
  3004.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:3003: error: DEAD_STORE
  The value written to &isV9 (type _Bool) is never used.
  3001.   
  3002.     bool hasHardQuad = Subtarget->hasHardQuad();
  3003. >   bool isV9        = Subtarget->isV9();
  3004.   
  3005.     switch (Op.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:3024: error: DEAD_STORE
  The value written to &I (type unsigned int) is never used.
  3022.         VBPtrOffset = Builder.CreateExtractValue(MemPtr, I++);
  3023.       if (MSInheritanceAttr::hasVBTableOffsetField(Inheritance))
  3024. >       VirtualBaseAdjustmentOffset = Builder.CreateExtractValue(MemPtr, I++);
  3025.     }
  3026.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:3037: error: STACK_VARIABLE_ADDRESS_ESCAPE
  Address of stack variable `Action` escapes at line 3037, column 1.
  3035.     CriticalOpGen.setAction(Action);
  3036.     emitInlinedDirective(CGF, OMPD_critical, CriticalOpGen);
  3037. > }
  3038.   
  3039.   void CGOpenMPRuntime::emitMasterRegion(CodeGenFunction &CGF,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:3071: error: NULL_DEREFERENCE
  pointer `InstMap` last assigned on line 3037 could be null and is dereferenced by call to `SwitchSection` at line 3071, column 3.
  3069.     // range of sleds associated with a function.
  3070.     MCSymbol *SledsStart = OutContext.createTempSymbol("xray_sleds_start", true);
  3071. >   OutStreamer->SwitchSection(InstMap);
  3072.     OutStreamer->EmitLabel(SledsStart);
  3073.     for (const auto &Sled : Sleds)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3041: error: DEAD_STORE
  The value written to &IsRHSNegOne (type _Bool) is never used.
  3039.     bool IsRHSZero = RHSValue == 0;
  3040.     bool IsRHSOne = RHSValue == 1;
  3041. >   bool IsRHSNegOne = RHSValue == -1LL;
  3042.   
  3043.     switch (CC) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3040: error: DEAD_STORE
  The value written to &IsRHSOne (type _Bool) is never used.
  3038.       return SDValue();
  3039.     bool IsRHSZero = RHSValue == 0;
  3040. >   bool IsRHSOne = RHSValue == 1;
  3041.     bool IsRHSNegOne = RHSValue == -1LL;
  3042.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3039: error: DEAD_STORE
  The value written to &IsRHSZero (type _Bool) is never used.
  3037.         CmpInGPR == ICGPR_ZextI64 || CmpInGPR == ICGPR_Zext)
  3038.       return SDValue();
  3039. >   bool IsRHSZero = RHSValue == 0;
  3040.     bool IsRHSOne = RHSValue == 1;
  3041.     bool IsRHSNegOne = RHSValue == -1LL;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:3055: error: NULL_DEREFERENCE
  pointer `&Action->ContBlock` last assigned on line 3050 could be null and is dereferenced by call to `Done` at line 3055, column 3.
  3053.     MasterOpGen.setAction(Action);
  3054.     emitInlinedDirective(CGF, OMPD_master, MasterOpGen);
  3055. >   Action.Done(CGF);
  3056.   }
  3057.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:3077: error: DEAD_STORE
  The value written to &ImmVal (type unsigned int) is never used.
  3075.     unsigned UseOpc = UseMI.getOpcode();
  3076.     unsigned NewUseOpc = 0;
  3077. >   uint32_t ImmVal = (uint32_t)DefMI.getOperand(1).getImm();
  3078.     uint32_t SOImmValV1 = 0, SOImmValV2 = 0;
  3079.     bool Commute = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:3062: error: DEAD_STORE
  The value written to &HasAVX (type _Bool) is never used.
  3060.                                         const X86Subtarget &STI,
  3061.                                         bool load) {
  3062. >   bool HasAVX = STI.hasAVX();
  3063.     bool HasAVX512 = STI.hasAVX512();
  3064.     bool HasVLX = STI.hasVLX();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:3063: error: DEAD_STORE
  The value written to &HasAVX512 (type _Bool) is never used.
  3061.                                         bool load) {
  3062.     bool HasAVX = STI.hasAVX();
  3063. >   bool HasAVX512 = STI.hasAVX512();
  3064.     bool HasVLX = STI.hasVLX();
  3065.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:3064: error: DEAD_STORE
  The value written to &HasVLX (type _Bool) is never used.
  3062.     bool HasAVX = STI.hasAVX();
  3063.     bool HasAVX512 = STI.hasAVX512();
  3064. >   bool HasVLX = STI.hasVLX();
  3065.   
  3066.     switch (STI.getRegisterInfo()->getSpillSize(*RC)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3151: error: DEAD_STORE
  The value written to &FPRIdx (type unsigned int) is never used.
  3149.       case MVT::i64: SrcReg = GPR64ArgRegs[GPRIdx++]; break;
  3150.       case MVT::f32: LLVM_FALLTHROUGH;
  3151. >     case MVT::f64: SrcReg = XMMArgRegs[FPRIdx++]; break;
  3152.       }
  3153.       unsigned DstReg = FuncInfo.MF->addLiveIn(SrcReg, RC);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:3086: error: STACK_VARIABLE_ADDRESS_ESCAPE
  Address of stack variable `Action` escapes at line 3086, column 1.
  3084.     TaskgroupOpGen.setAction(Action);
  3085.     emitInlinedDirective(CGF, OMPD_taskgroup, TaskgroupOpGen);
  3086. > }
  3087.   
  3088.   /// Given an array of pointers to variables, project the address of a

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:3138: error: DEAD_STORE
  The value written to &OpNum (type unsigned int) is never used.
  3136.     }
  3137.     if (OpNum != Record.size())
  3138. >     NewGA->setDSOLocal(getDecodedDSOLocal(Record[OpNum++]));
  3139.     inferDSOLocal(NewGA);
  3140.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:3115: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  3113.     llvm::Type *opTy = CGF.CGM.getTypes().ConvertType(Ops.Ty);
  3114.   
  3115. >   llvm::Function *intrinsic = CGF.CGM.getIntrinsic(IID, opTy);
  3116.   
  3117.     Value *resultAndOverflow = Builder.CreateCall(intrinsic, {Ops.LHS, Ops.RHS});

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/TokenAnnotator.cpp:3119: error: NULL_DEREFERENCE
  pointer `Left` last assigned on line 3098 could be null and is dereferenced at line 3119, column 10.
  3117.         return false; // Otherwise automatic semicolon insertion would trigger.
  3118.       if (Right.NestingLevel == 0 &&
  3119. >         (Left.Tok.getIdentifierInfo() ||
  3120.            Left.isOneOf(tok::r_square, tok::r_paren)) &&
  3121.           Right.isOneOf(tok::l_square, tok::l_paren))

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Format/TokenAnnotator.cpp:3123: error: NULL_DEREFERENCE
  pointer `Left` last assigned on line 3098 could be null and is dereferenced at line 3123, column 9.
  3121.           Right.isOneOf(tok::l_square, tok::l_paren))
  3122.         return false; // Otherwise automatic semicolon insertion would trigger.
  3123. >     if (Left.is(TT_JsFatArrow) && Right.is(tok::l_brace))
  3124.         return false;
  3125.       if (Left.is(TT_JsTypeColon))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Instructions.cpp:3108: error: DEAD_STORE
  The value written to &DstBitSize (type unsigned int) is never used.
  3106.     // Get the size of the types in bits, we'll need this later
  3107.     unsigned SrcBitSize = SrcTy->getScalarSizeInBits();
  3108. >   unsigned DstBitSize = DstTy->getScalarSizeInBits();
  3109.   
  3110.     // If these are vector types, get the lengths of the vectors (using zero for

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Instructions.cpp:3115: error: DEAD_STORE
  The value written to &DstLength (type unsigned int) is never used.
  3113.     unsigned SrcLength = SrcTy->isVectorTy() ?
  3114.       cast<VectorType>(SrcTy)->getNumElements() : 0;
  3115. >   unsigned DstLength = DstTy->isVectorTy() ?
  3116.       cast<VectorType>(DstTy)->getNumElements() : 0;
  3117.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Instructions.cpp:3107: error: DEAD_STORE
  The value written to &SrcBitSize (type unsigned int) is never used.
  3105.   
  3106.     // Get the size of the types in bits, we'll need this later
  3107. >   unsigned SrcBitSize = SrcTy->getScalarSizeInBits();
  3108.     unsigned DstBitSize = DstTy->getScalarSizeInBits();
  3109.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Instructions.cpp:3113: error: DEAD_STORE
  The value written to &SrcLength (type unsigned int) is never used.
  3111.     // scalar types means that checking that vector lengths match also checks that
  3112.     // scalars are not being converted to vectors or vectors to scalars).
  3113. >   unsigned SrcLength = SrcTy->isVectorTy() ?
  3114.       cast<VectorType>(SrcTy)->getNumElements() : 0;
  3115.     unsigned DstLength = DstTy->isVectorTy() ?

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3118: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3116.       if (A != RHS)
  3117.         std::swap(A, B);       // smax(A, B) pred A.
  3118. >     EqP = CmpInst::ICMP_SGE; // "A == smax(A, B)" iff "A sge B".
  3119.       // We analyze this as smax(A, B) pred A.
  3120.       P = Pred;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3125: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3123.       if (A != LHS)
  3124.         std::swap(A, B);       // A pred smax(A, B).
  3125. >     EqP = CmpInst::ICMP_SGE; // "A == smax(A, B)" iff "A sge B".
  3126.       // We analyze this as smax(A, B) swapped-pred A.
  3127.       P = CmpInst::getSwappedPredicate(Pred);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3132: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3130.       if (A != RHS)
  3131.         std::swap(A, B);       // smin(A, B) pred A.
  3132. >     EqP = CmpInst::ICMP_SLE; // "A == smin(A, B)" iff "A sle B".
  3133.       // We analyze this as smax(-A, -B) swapped-pred -A.
  3134.       // Note that we do not need to actually form -A or -B thanks to EqP.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3140: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3138.       if (A != LHS)
  3139.         std::swap(A, B);       // A pred smin(A, B).
  3140. >     EqP = CmpInst::ICMP_SLE; // "A == smin(A, B)" iff "A sle B".
  3141.       // We analyze this as smax(-A, -B) pred -A.
  3142.       // Note that we do not need to actually form -A or -B thanks to EqP.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3192: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3190.       if (A != RHS)
  3191.         std::swap(A, B);       // umax(A, B) pred A.
  3192. >     EqP = CmpInst::ICMP_UGE; // "A == umax(A, B)" iff "A uge B".
  3193.       // We analyze this as umax(A, B) pred A.
  3194.       P = Pred;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3199: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3197.       if (A != LHS)
  3198.         std::swap(A, B);       // A pred umax(A, B).
  3199. >     EqP = CmpInst::ICMP_UGE; // "A == umax(A, B)" iff "A uge B".
  3200.       // We analyze this as umax(A, B) swapped-pred A.
  3201.       P = CmpInst::getSwappedPredicate(Pred);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3206: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3204.       if (A != RHS)
  3205.         std::swap(A, B);       // umin(A, B) pred A.
  3206. >     EqP = CmpInst::ICMP_ULE; // "A == umin(A, B)" iff "A ule B".
  3207.       // We analyze this as umax(-A, -B) swapped-pred -A.
  3208.       // Note that we do not need to actually form -A or -B thanks to EqP.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:3214: error: DEAD_STORE
  The value written to &EqP (type int) is never used.
  3212.       if (A != LHS)
  3213.         std::swap(A, B);       // A pred umin(A, B).
  3214. >     EqP = CmpInst::ICMP_ULE; // "A == umin(A, B)" iff "A ule B".
  3215.       // We analyze this as umax(-A, -B) pred -A.
  3216.       // Note that we do not need to actually form -A or -B thanks to EqP.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:3137: error: DEAD_STORE
  The value written to &I (type unsigned int) is never used.
  3135.         VBPtrOffset = Builder.CreateExtractValue(Src, I++);
  3136.       if (MSInheritanceAttr::hasVBTableOffsetField(SrcInheritance))
  3137. >       VirtualBaseAdjustmentOffset = Builder.CreateExtractValue(Src, I++);
  3138.     }
  3139.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:3248: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  3246.         Dst = Builder.CreateInsertValue(Dst, VBPtrOffset, Idx++);
  3247.       if (MSInheritanceAttr::hasVBTableOffsetField(DstInheritance))
  3248. >       Dst = Builder.CreateInsertValue(Dst, VirtualBaseAdjustmentOffset, Idx++);
  3249.     }
  3250.     return Dst;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:3148: error: DEAD_STORE
  The value written to &ImmIdx (type unsigned int) is never used.
  3146.     bool IsSigned = false;
  3147.     // The ImmIdx should be changed case by case if it is not 2.
  3148. >   unsigned ImmIdx = 2;
  3149.     unsigned UnscaledOp = 0;
  3150.     // Set output values in case of early exit.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:3145: error: DEAD_STORE
  The value written to &Scale (type int) is never used.
  3143.                                       unsigned *OutUnscaledOp,
  3144.                                       int *EmittableOffset) {
  3145. >   int Scale = 1;
  3146.     bool IsSigned = false;
  3147.     // The ImmIdx should be changed case by case if it is not 2.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Lex/Lexer.cpp:3235: error: DEAD_STORE
  The value written to &Char (type char) is never used.
  3233.     case '\r':
  3234.       if (CurPtr[0] == '\n')
  3235. >       Char = getAndAdvanceChar(CurPtr, Result);
  3236.       LLVM_FALLTHROUGH;
  3237.     case '\n':

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:3181: error: NULL_DEREFERENCE
  pointer `DI` last assigned on line 3178 could be null and is dereferenced at line 3181, column 11.
  3179.       if (!DI)
  3180.         I.error("Input $" + Pat->getName() + " must be an identifier!");
  3181. >     Rec = DI->getDef();
  3182.     } else {
  3183.       Rec = Pat->getOperator();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp:3326: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  3324.       if (IntInit *SrcIntInit = dyn_cast<IntInit>(SrcInit)) {
  3325.         OperandMatcher &OM =
  3326. >           InsnMatcher.addOperand(OpIdx++, Src->getName(), TempOpIdx);
  3327.         OM.addPredicate<LiteralIntOperandMatcher>(SrcIntInit->getValue());
  3328.       } else

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp:3339: error: DEAD_STORE
  The value written to &OpIdx (type unsigned int) is never used.
  3337.         // here since we don't support ImmLeaf predicates yet. However, we still
  3338.         // need to note the hidden operand to get GIM_CheckNumOperands correct.
  3339. >       InsnMatcher.addOperand(OpIdx++, "", TempOpIdx);
  3340.         return InsnMatcher;
  3341.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3194: error: DEAD_STORE
  The value written to &Callee (type llvm::Value const *) is never used.
  3192.     bool &IsTailCall    = CLI.IsTailCall;
  3193.     bool IsVarArg       = CLI.IsVarArg;
  3194. >   const Value *Callee = CLI.Callee;
  3195.     MCSymbol *Symbol = CLI.Symbol;
  3196.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3190: error: DEAD_STORE
  The value written to &InRegs (type llvm::SmallVector<unsigned int,4>&) is never used.
  3188.     auto &OutRegs       = CLI.OutRegs;
  3189.     auto &Ins           = CLI.Ins;
  3190. >   auto &InRegs        = CLI.InRegs;
  3191.     CallingConv::ID CC  = CLI.CallConv;
  3192.     bool &IsTailCall    = CLI.IsTailCall;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3189: error: DEAD_STORE
  The value written to &Ins (type llvm::SmallVector<llvm::ISD::InputArg,4>&) is never used.
  3187.     auto &OutFlags      = CLI.OutFlags;
  3188.     auto &OutRegs       = CLI.OutRegs;
  3189. >   auto &Ins           = CLI.Ins;
  3190.     auto &InRegs        = CLI.InRegs;
  3191.     CallingConv::ID CC  = CLI.CallConv;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3197: error: DEAD_STORE
  The value written to &Is64Bit (type _Bool) is never used.
  3195.     MCSymbol *Symbol = CLI.Symbol;
  3196.   
  3197. >   bool Is64Bit        = Subtarget->is64Bit();
  3198.     bool IsWin64        = Subtarget->isCallingConvWin64(CC);
  3199.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3192: error: DEAD_STORE
  The value written to &IsTailCall (type _Bool&) is never used.
  3190.     auto &InRegs        = CLI.InRegs;
  3191.     CallingConv::ID CC  = CLI.CallConv;
  3192. >   bool &IsTailCall    = CLI.IsTailCall;
  3193.     bool IsVarArg       = CLI.IsVarArg;
  3194.     const Value *Callee = CLI.Callee;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3193: error: DEAD_STORE
  The value written to &IsVarArg (type _Bool) is never used.
  3191.     CallingConv::ID CC  = CLI.CallConv;
  3192.     bool &IsTailCall    = CLI.IsTailCall;
  3193. >   bool IsVarArg       = CLI.IsVarArg;
  3194.     const Value *Callee = CLI.Callee;
  3195.     MCSymbol *Symbol = CLI.Symbol;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3198: error: DEAD_STORE
  The value written to &IsWin64 (type _Bool) is never used.
  3196.   
  3197.     bool Is64Bit        = Subtarget->is64Bit();
  3198. >   bool IsWin64        = Subtarget->isCallingConvWin64(CC);
  3199.   
  3200.     const CallInst *CI =

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3187: error: DEAD_STORE
  The value written to &OutFlags (type llvm::SmallVector<llvm::ISD::ArgFlagsTy,16>&) is never used.
  3185.   bool X86FastISel::fastLowerCall(CallLoweringInfo &CLI) {
  3186.     auto &OutVals       = CLI.OutVals;
  3187. >   auto &OutFlags      = CLI.OutFlags;
  3188.     auto &OutRegs       = CLI.OutRegs;
  3189.     auto &Ins           = CLI.Ins;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3188: error: DEAD_STORE
  The value written to &OutRegs (type llvm::SmallVector<unsigned int,16>&) is never used.
  3186.     auto &OutVals       = CLI.OutVals;
  3187.     auto &OutFlags      = CLI.OutFlags;
  3188. >   auto &OutRegs       = CLI.OutRegs;
  3189.     auto &Ins           = CLI.Ins;
  3190.     auto &InRegs        = CLI.InRegs;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3186: error: DEAD_STORE
  The value written to &OutVals (type llvm::SmallVector<llvm::Value*,16>&) is never used.
  3184.   
  3185.   bool X86FastISel::fastLowerCall(CallLoweringInfo &CLI) {
  3186. >   auto &OutVals       = CLI.OutVals;
  3187.     auto &OutFlags      = CLI.OutFlags;
  3188.     auto &OutRegs       = CLI.OutRegs;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3195: error: DEAD_STORE
  The value written to &Symbol (type llvm::MCSymbol*) is never used.
  3193.     bool IsVarArg       = CLI.IsVarArg;
  3194.     const Value *Callee = CLI.Callee;
  3195. >   MCSymbol *Symbol = CLI.Symbol;
  3196.   
  3197.     bool Is64Bit        = Subtarget->is64Bit();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:3195: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  3193.   getSingleConstraintMatchWeight(AsmOperandInfo &info,
  3194.                                  const char *constraint) const {
  3195. >   ConstraintWeight weight = CW_Invalid;
  3196.     Value *CallOperandVal = info.CallOperandVal;
  3197.     // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3213: error: DEAD_STORE
  The value written to &IsRHSNegOne (type _Bool) is never used.
  3211.     bool IsRHSZero = RHSValue == 0;
  3212.     bool IsRHSOne = RHSValue == 1;
  3213. >   bool IsRHSNegOne = RHSValue == -1LL;
  3214.     switch (CC) {
  3215.     default: return SDValue();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3212: error: DEAD_STORE
  The value written to &IsRHSOne (type _Bool) is never used.
  3210.       return SDValue();
  3211.     bool IsRHSZero = RHSValue == 0;
  3212. >   bool IsRHSOne = RHSValue == 1;
  3213.     bool IsRHSNegOne = RHSValue == -1LL;
  3214.     switch (CC) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3211: error: DEAD_STORE
  The value written to &IsRHSZero (type _Bool) is never used.
  3209.         CmpInGPR == ICGPR_ZextI32 || CmpInGPR == ICGPR_Sext)
  3210.       return SDValue();
  3211. >   bool IsRHSZero = RHSValue == 0;
  3212.     bool IsRHSOne = RHSValue == 1;
  3213.     bool IsRHSNegOne = RHSValue == -1LL;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3267: error: UNINITIALIZED_VALUE
  The value read from Alignment was never initialized.
  3265.       if (Alignment == 0)
  3266.         Alignment = 1;
  3267. >     if (!isPowerOf2_64(Alignment))
  3268.         ReturnVal |= Error(AlignmentLoc, "alignment must be a power of 2");
  3269.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3294: error: UNINITIALIZED_VALUE
  The value read from Alignment was never initialized.
  3292.     if ((!HasFillExpr || Lexer.getMAI().getTextAlignFillValue() == FillExpr) &&
  3293.         ValueSize == 1 && UseCodeAlign) {
  3294. >     getStreamer().EmitCodeAlignment(Alignment, MaxBytesToFill);
  3295.     } else {
  3296.       // FIXME: Target specific behavior about how the "extra" bytes are filled.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3297: error: UNINITIALIZED_VALUE
  The value read from Alignment was never initialized.
  3295.     } else {
  3296.       // FIXME: Target specific behavior about how the "extra" bytes are filled.
  3297. >     getStreamer().EmitValueToAlignment(Alignment, FillExpr, ValueSize,
  3298.                                          MaxBytesToFill);
  3299.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:3250: error: NULL_DEREFERENCE
  pointer `Val` last assigned on line 3247 could be null and is dereferenced at line 3250, column 32.
  3248.         if (!Val || !Val->getDef()->isSubClassOf("Register"))
  3249.           I.error("implicitly defined value should be a register!");
  3250. >       InstImpResults.push_back(Val->getDef());
  3251.       }
  3252.       return;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:3256: error: STACK_VARIABLE_ADDRESS_ESCAPE
  Address of stack variable `Action` escapes at line 3256, column 1.
  3254.     }
  3255.     emitInlinedDirective(CGF, OMPD_ordered, OrderedOpGen);
  3256. > }
  3257.   
  3258.   unsigned CGOpenMPRuntime::getDefaultFlagsForBarriers(OpenMPDirectiveKind Kind) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:3269: error: DEAD_STORE
  The value written to &NumElts (type unsigned int) is never used.
  3267.     assert((VT.isInteger() || VT.isFloatingPoint()) && "Invalid VT!");
  3268.     unsigned VTBits = VT.getScalarSizeInBits();
  3269. >   unsigned NumElts = DemandedElts.getBitWidth();
  3270.     unsigned Tmp, Tmp2;
  3271.     unsigned FirstAnswer = 1;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:3320: error: DEAD_STORE
  The value written to &I (type unsigned int) is never used.
  3318.         VBPtrOffset = Builder.CreateExtractValue(MemPtr, I++);
  3319.       if (MSInheritanceAttr::hasVBTableOffsetField(Inheritance))
  3320. >       VirtualBaseAdjustmentOffset = Builder.CreateExtractValue(MemPtr, I++);
  3321.     }
  3322.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3410: error: DEAD_STORE
  The value written to &FileNumber (type long long) is never used.
  3408.         if (!FileNumOrErr)
  3409.           return Error(DirectiveLoc, toString(FileNumOrErr.takeError()));
  3410. >       FileNumber = FileNumOrErr.get();
  3411.       }
  3412.       // Alert the user if there are some .file directives with MD5 and some not.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:3335: error: DEAD_STORE
  The value written to &libCall (type int) is never used.
  3333.     SDLoc dl(N);
  3334.   
  3335. >   RTLIB::Libcall libCall = RTLIB::UNKNOWN_LIBCALL;
  3336.   
  3337.     switch (N->getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3370: error: DEAD_STORE
  The value written to &IsRHSNegOne (type _Bool) is never used.
  3368.     bool IsRHSZero = RHSValue == 0;
  3369.     bool IsRHSOne = RHSValue == 1;
  3370. >   bool IsRHSNegOne = RHSValue == -1LL;
  3371.     switch (CC) {
  3372.     default: return SDValue();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3369: error: DEAD_STORE
  The value written to &IsRHSOne (type _Bool) is never used.
  3367.       return SDValue();
  3368.     bool IsRHSZero = RHSValue == 0;
  3369. >   bool IsRHSOne = RHSValue == 1;
  3370.     bool IsRHSNegOne = RHSValue == -1LL;
  3371.     switch (CC) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3368: error: DEAD_STORE
  The value written to &IsRHSZero (type _Bool) is never used.
  3366.         CmpInGPR == ICGPR_ZextI32 || CmpInGPR == ICGPR_Zext)
  3367.       return SDValue();
  3368. >   bool IsRHSZero = RHSValue == 0;
  3369.     bool IsRHSOne = RHSValue == 1;
  3370.     bool IsRHSNegOne = RHSValue == -1LL;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:3460: error: DEAD_STORE
  The value written to &IsWindowsCygnus (type _Bool) is never used.
  3458.       IsWindowsMSVC |= AuxTriple && AuxTriple->isWindowsMSVCEnvironment();
  3459.       IsWindowsGNU |= AuxTriple && AuxTriple->isWindowsGNUEnvironment();
  3460. >     IsWindowsCygnus |= AuxTriple && AuxTriple->isWindowsCygwinEnvironment();
  3461.     }
  3462.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:3459: error: DEAD_STORE
  The value written to &IsWindowsGNU (type _Bool) is never used.
  3457.     if (IsCuda || IsHIP) {
  3458.       IsWindowsMSVC |= AuxTriple && AuxTriple->isWindowsMSVCEnvironment();
  3459. >     IsWindowsGNU |= AuxTriple && AuxTriple->isWindowsGNUEnvironment();
  3460.       IsWindowsCygnus |= AuxTriple && AuxTriple->isWindowsCygwinEnvironment();
  3461.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:3533: error: DEAD_STORE
  The value written to &CurBB (type llvm::BasicBlock*) is never used.
  3531.         }
  3532.   
  3533. >       CurBB = FunctionBBs[0];
  3534.         continue;
  3535.       }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:4757: error: DEAD_STORE
  The value written to &CurBB (type llvm::BasicBlock*) is never used.
  4755.       if (I->isTerminator()) {
  4756.         ++CurBBNo;
  4757. >       CurBB = CurBBNo < FunctionBBs.size() ? FunctionBBs[CurBBNo] : nullptr;
  4758.       }
  4759.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:3960: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  3958.         BasicBlock *UnwindDest = nullptr;
  3959.         if (Record.size() == 2) {
  3960. >         UnwindDest = getBasicBlock(Record[Idx++]);
  3961.           if (!UnwindDest)
  3962.             return error("Invalid record");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:3977: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  3975.         if (!CatchPad)
  3976.           return error("Invalid record");
  3977. >       BasicBlock *BB = getBasicBlock(Record[Idx++]);
  3978.         if (!BB)
  3979.           return error("Invalid record");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:3430: error: DEAD_STORE
  The value written to &NextValueNo (type unsigned int) is never used.
  3428.       ValueList.push_back(&I);
  3429.   
  3430. >   unsigned NextValueNo = ValueList.size();
  3431.     BasicBlock *CurBB = nullptr;
  3432.     unsigned CurBBNo = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:3467: error: DEAD_STORE
  The value written to &NextValueNo (type unsigned int) is never used.
  3465.           if (Error Err = parseConstants())
  3466.             return Err;
  3467. >         NextValueNo = ValueList.size();
  3468.           break;
  3469.         case bitc::VALUE_SYMTAB_BLOCK_ID:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:4762: error: DEAD_STORE
  The value written to &NextValueNo (type unsigned int) is never used.
  4760.       // Non-void values get registered in the value table for future use.
  4761.       if (I && !I->getType()->isVoidTy())
  4762. >       ValueList.assignValue(I, NextValueNo++);
  4763.     }
  4764.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:3520: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  3518.         int bestWeight = -1;
  3519.         // weight:  -1 = invalid match, and 0 = so-so match to 5 = good match.
  3520. >       int weight = -1;
  3521.         unsigned maIndex;
  3522.         // Compute the sums of the weights for each alternative, keeping track

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:3674: error: DEAD_STORE
  The value written to &CC (type int) is never used.
  3672.   
  3673.       unsigned ResultReg1 = 0, ResultReg2 = 0, MulReg = 0;
  3674. >     AArch64CC::CondCode CC = AArch64CC::Invalid;
  3675.       switch (IID) {
  3676.       default: llvm_unreachable("Unexpected intrinsic!");

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:3453: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `CurD` was dereferenced at line 3447 and is tested for null at line 3453, column 34.
  3451.     // N definitions currently takes O(N^2) time here.
  3452.     if (VD->isThisDeclarationADefinition() == VarDecl::Definition) {
  3453. >     for (VarDecl *CurD = PrevVD; CurD; CurD = CurD->getPreviousDecl()) {
  3454.         if (CurD->isThisDeclarationADefinition() == VarDecl::Definition) {
  3455.           Reader.mergeDefinitionVisibility(CurD, VD);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:3479: error: DEAD_STORE
  The value written to &X (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_X86_AsmParser_X86AsmParser.cpp::X86AsmParser>*) is never used.
  3477.   // Force static initialization.
  3478.   extern "C" void LLVMInitializeX86AsmParser() {
  3479. >   RegisterMCAsmParser<X86AsmParser> X(getTheX86_32Target());
  3480.     RegisterMCAsmParser<X86AsmParser> Y(getTheX86_64Target());
  3481.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:3480: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_X86_AsmParser_X86AsmParser.cpp::X86AsmParser>*) is never used.
  3478.   extern "C" void LLVMInitializeX86AsmParser() {
  3479.     RegisterMCAsmParser<X86AsmParser> X(getTheX86_32Target());
  3480. >   RegisterMCAsmParser<X86AsmParser> Y(getTheX86_64Target());
  3481.   }
  3482.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:3528: error: USE_AFTER_LIFETIME
  Variable CGF is used at line line 3528, column 10 after its lifetime ended at line 3528, column 10.
  3526.     llvm::Function *Fn = CGF.GenerateOpenMPCapturedStmtFunction(*S);
  3527.     Fn->setDoesNotRecurse();
  3528. >   return Fn;
  3529.   }
  3530.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:3626: error: DEAD_STORE
  The value written to &NewCC (type int) is never used.
  3624.     bool ShouldUpdateCC = false;
  3625.     bool NoSignFlag = false;
  3626. >   X86::CondCode NewCC = X86::COND_INVALID;
  3627.     if (IsCmpZero && !isDefConvertible(*MI, NoSignFlag)) {
  3628.       // Scan forward from the use until we hit the use we're looking for or the

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3831: error: DEAD_STORE
  The value written to &FPR_idx (type unsigned int) is never used.
  3829.   
  3830.           ArgVal = DAG.getCopyFromReg(Chain, dl, VReg, ObjectVT);
  3831. >         ++FPR_idx;
  3832.         } else if (GPR_idx != Num_GPR_Regs && CallConv != CallingConv::Fast) {
  3833.           // FIXME: We may want to re-enable this for CallingConv::Fast on the P8

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3605: error: DEAD_STORE
  The value written to &Num_QFPR_Regs (type unsigned int) is never used.
  3603.     const unsigned Num_FPR_Regs = useSoftFloat() ? 0 : 13;
  3604.     const unsigned Num_VR_Regs  = array_lengthof(VR);
  3605. >   const unsigned Num_QFPR_Regs = Num_FPR_Regs;
  3606.   
  3607.     // Do a first pass over the arguments to determine whether the ABI

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3635: error: DEAD_STORE
  The value written to &QFPR_idx (type unsigned int&) is never used.
  3633.     unsigned ArgOffset = LinkageSize;
  3634.     unsigned GPR_idx = 0, FPR_idx = 0, VR_idx = 0;
  3635. >   unsigned &QFPR_idx = FPR_idx;
  3636.     SmallVector<SDValue, 8> MemOps;
  3637.     Function::const_arg_iterator FuncArg = MF.getFunction().arg_begin();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3883: error: DEAD_STORE
  The value written to &VR_idx (type unsigned int) is never used.
  3881.             unsigned VReg = MF.addLiveIn(VR[VR_idx], &PPC::VRRCRegClass);
  3882.             ArgVal = DAG.getCopyFromReg(Chain, dl, VReg, ObjectVT);
  3883. >           ++VR_idx;
  3884.           } else {
  3885.             if (CallConv == CallingConv::Fast)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3706: error: UNINITIALIZED_VALUE
  The value read from Align was never initialized.
  3704.           FI = MFI.CreateFixedObject(ArgSize, ArgOffset, false, true);
  3705.         else
  3706. >         FI = MFI.CreateStackObject(ArgSize, Align, false);
  3707.         SDValue FIN = DAG.getFrameIndex(FI, PtrVT);
  3708.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3929: error: UNINITIALIZED_VALUE
  The value read from CurArgOffset was never initialized.
  3927.         if (ObjSize < ArgSize && !isLittleEndian)
  3928.           CurArgOffset += ArgSize - ObjSize;
  3929. >       int FI = MFI.CreateFixedObject(ObjSize, CurArgOffset, isImmutable);
  3930.         SDValue FIN = DAG.getFrameIndex(FI, PtrVT);
  3931.         ArgVal = DAG.getLoad(ObjectVT, dl, Chain, FIN, MachinePointerInfo());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:3582: error: DEAD_STORE
  The value written to &MBB (type llvm::MachineBasicBlock&) is never used.
  3580.                               SmallVectorImpl<MachineCombinerPattern> &Patterns) {
  3581.     unsigned Opc = Root.getOpcode();
  3582. >   MachineBasicBlock &MBB = *Root.getParent();
  3583.     bool Found = false;
  3584.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Driver/Driver.cpp:3621: error: NULL_DEREFERENCE
  pointer `CurAction` last assigned on line 3619 could be null and is dereferenced at line 3621, column 14.
  3619.           CurAction = OA->getHostDependence();
  3620.           if (CanBeCollapsed &&
  3621. >             !CurAction->isCollapsingWithNextDependentActionLegal())
  3622.             return nullptr;
  3623.           SavedOffloadAction.push_back(OA);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3678: error: UNINITIALIZED_VALUE
  The value read from IALine was never initialized.
  3676.       return true;
  3677.   
  3678. >   if (!getStreamer().EmitCVInlineSiteIdDirective(FunctionId, IAFunc, IAFile,
  3679.                                                    IALine, IACol, FunctionIdLoc))
  3680.       return Error(FunctionIdLoc, "function id already allocated");

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:3755: error: UNINITIALIZED_VALUE
  The value read from RMWOp was never initialized.
  3753.     }
  3754.     llvm::Value *Res =
  3755. >       CGF.Builder.CreateAtomicRMW(RMWOp, X.getPointer(), UpdateVal, AO);
  3756.     return std::make_pair(true, RValue::get(Res));
  3757.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:3693: error: DEAD_STORE
  The value written to &MBB (type llvm::MachineBasicBlock&) is never used.
  3691.       return false;
  3692.   
  3693. >   MachineBasicBlock &MBB = *Root.getParent();
  3694.     bool Found = false;
  3695.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3746: error: UNINITIALIZED_VALUE
  The value read from FileNumber was never initialized.
  3744.       return true;
  3745.   
  3746. >   getStreamer().EmitCVLocDirective(FunctionId, FileNumber, LineNumber,
  3747.                                      ColumnPos, PrologueEnd, IsStmt, StringRef(),
  3748.                                      DirectiveLoc);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:3714: error: DEAD_STORE
  The value written to &HRI (type llvm::HexagonRegisterInfo const &) is never used.
  3712.         const MachineInstr &MI) const {
  3713.     unsigned DstReg, SrcReg, Src1Reg, Src2Reg;
  3714. >   const HexagonRegisterInfo &HRI = *Subtarget.getRegisterInfo();
  3715.   
  3716.     switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:3744: error: USE_AFTER_FREE
  pointer `*returned by operator[]` was freed by call to `delete()` at line 3744, column 5 and is dereferenced or freed at line 3744, column 5.
  3742.   void Parser::DeallocateParsedClasses(Parser::ParsingClass *Class) {
  3743.     for (unsigned I = 0, N = Class->LateParsedDeclarations.size(); I != N; ++I)
  3744. >     delete Class->LateParsedDeclarations[I];
  3745.     delete Class;
  3746.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:3759: error: DEAD_STORE
  The value written to &DefCycle (type int) is never used.
  3757.     // latency might be determinable dynamically. Let the target try to
  3758.     // figure it out.
  3759. >   int DefCycle = -1;
  3760.     bool LdmBypass = false;
  3761.     switch (DefMCID.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:3801: error: DEAD_STORE
  The value written to &UseCycle (type int) is never used.
  3799.       DefCycle = 2;
  3800.   
  3801. >   int UseCycle = -1;
  3802.     switch (UseMCID.getOpcode()) {
  3803.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3806: error: UNINITIALIZED_VALUE
  The value read from SourceFileId was never initialized.
  3804.     MCSymbol *FnStartSym = getContext().getOrCreateSymbol(FnStartName);
  3805.     MCSymbol *FnEndSym = getContext().getOrCreateSymbol(FnEndName);
  3806. >   getStreamer().EmitCVInlineLinetableDirective(PrimaryFunctionId, SourceFileId,
  3807.                                                  SourceLineNum, FnStartSym,
  3808.                                                  FnEndSym);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:3806: error: UNINITIALIZED_VALUE
  The value read from SourceLineNum was never initialized.
  3804.     MCSymbol *FnStartSym = getContext().getOrCreateSymbol(FnStartName);
  3805.     MCSymbol *FnEndSym = getContext().getOrCreateSymbol(FnEndName);
  3806. >   getStreamer().EmitCVInlineLinetableDirective(PrimaryFunctionId, SourceFileId,
  3807.                                                  SourceLineNum, FnStartSym,
  3808.                                                  FnEndSym);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:3782: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  3780.   SDValue AMDGPUTargetLowering::PerformDAGCombine(SDNode *N,
  3781.                                                   DAGCombinerInfo &DCI) const {
  3782. >   SelectionDAG &DAG = DCI.DAG;
  3783.     SDLoc DL(N);
  3784.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/IR/Core.cpp:3801: error: UNINITIALIZED_VALUE
  The value read from intop was never initialized.
  3799.       case LLVMAtomicRMWBinOpUMin: intop = AtomicRMWInst::UMin; break;
  3800.     }
  3801. >   return wrap(unwrap(B)->CreateAtomicRMW(intop, unwrap(PTR), unwrap(Val),
  3802.       mapFromLLVMOrdering(ordering), singleThread ? SyncScope::SingleThread
  3803.                                                   : SyncScope::System));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:3800: error: DEAD_STORE
  The value written to &type (type llvm::Type*) is never used.
  3798.     if (!CallOperandVal)
  3799.       return CW_Default;
  3800. >   Type *type = CallOperandVal->getType();
  3801.     // Look at the constraint type.
  3802.     switch (*constraint) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:3794: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  3792.   MipsTargetLowering::getSingleConstraintMatchWeight(
  3793.       AsmOperandInfo &info, const char *constraint) const {
  3794. >   ConstraintWeight weight = CW_Invalid;
  3795.     Value *CallOperandVal = info.CallOperandVal;
  3796.       // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:3918: error: USE_AFTER_LIFETIME
  Variable NewVVal is used at line line 3918, column 1 after its lifetime ended at line 3918, column 1.
  3916.     if (IsSeqCst)
  3917.       CGF.CGM.getOpenMPRuntime().emitFlush(CGF, llvm::None, Loc);
  3918. > }
  3919.   
  3920.   static void emitOMPAtomicExpr(CodeGenFunction &CGF, OpenMPClauseKind Kind,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:3914: error: UNINITIALIZED_VALUE
  The value read from AltOpcode was never initialized.
  3912.       default: llvm_unreachable("Unknown MINMAX opcode");
  3913.       }
  3914. >     if (TLI.isOperationLegal(AltOpcode, VT))
  3915.         return DAG.getNode(AltOpcode, SDLoc(N), VT, N0, N1);
  3916.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:3915: error: UNINITIALIZED_VALUE
  The value read from AltOpcode was never initialized.
  3913.       }
  3914.       if (TLI.isOperationLegal(AltOpcode, VT))
  3915. >       return DAG.getNode(AltOpcode, SDLoc(N), VT, N0, N1);
  3916.     }
  3917.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:3930: error: NULL_DEREFERENCE
  pointer `Context` last accessed on line 3930 could be null and is dereferenced at line 3930, column 7.
  3928.   
  3929.     // Resolve overloaded function references.
  3930. >   if (Context.hasSameType(FromType, Context.OverloadTy)) {
  3931.       DeclAccessPair Found;
  3932.       FunctionDecl *Fn = ResolveAddressOfOverloadedFunction(From, ToType,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3914: error: NULL_DEREFERENCE
  pointer `Bundle` last assigned on line 3912 could be null and is dereferenced at line 3914, column 3.
  3912.     ScheduleData *Bundle = getScheduleData(OpValue);
  3913.     LLVM_DEBUG(dbgs() << "SLP:  cancel scheduling of " << *Bundle << "\n");
  3914. >   assert(!Bundle->IsScheduled &&
  3915.            "Can't cancel bundle which is already scheduled");
  3916.     assert(Bundle->isSchedulingEntity() && Bundle->isPartOfBundle() &&

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3913: error: NULL_DEREFERENCE
  pointer `Bundle` last assigned on line 3912 could be null and is dereferenced by call to `llvm::slpvectorizer::operator<<()` at line 3913, column 3.
  3911.   
  3912.     ScheduleData *Bundle = getScheduleData(OpValue);
  3913. >   LLVM_DEBUG(dbgs() << "SLP:  cancel scheduling of " << *Bundle << "\n");
  3914.     assert(!Bundle->IsScheduled &&
  3915.            "Can't cancel bundle which is already scheduled");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:3914: error: DEAD_STORE
  The value written to &HasAVX512 (type _Bool) is never used.
  3912.   
  3913.     // Get opcode and regclass for the given zero.
  3914. >   bool HasAVX512 = Subtarget->hasAVX512();
  3915.     unsigned Opc = 0;
  3916.     const TargetRegisterClass *RC = nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:3980: error: UNINITIALIZED_VALUE
  The value read from RHS was never initialized.
  3978.     // The result of an assignment in C is the assigned r-value.
  3979.     if (!CGF.getLangOpts().CPlusPlus)
  3980. >     return RHS;
  3981.   
  3982.     // If the lvalue is non-volatile, return the computed value of the assignment.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:3984: error: UNINITIALIZED_VALUE
  The value read from RHS was never initialized.
  3982.     // If the lvalue is non-volatile, return the computed value of the assignment.
  3983.     if (!LHS.isVolatileQualified())
  3984. >     return RHS;
  3985.   
  3986.     // Otherwise, reload the value.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:3972: error: NULL_DEREFERENCE
  pointer `Interface` last assigned on line 3957 could be null and is dereferenced at line 3972, column 7.
  3970.             PtrDiffTy);
  3971.       std::string name = "__objc_ivar_offset_value_" +
  3972. >       Interface->getNameAsString() +"." + Ivar->getNameAsString();
  3973.       CharUnits Align = CGM.getIntAlign();
  3974.       llvm::Value *Offset = TheModule.getGlobalVariable(name);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:3967: error: NULL_DEREFERENCE
  pointer `Interface` last assigned on line 3957 could be null and is dereferenced by call to `ObjCIvarOffsetVariable` at line 3967, column 28.
  3965.             CGF.Builder.CreateAlignedLoad(
  3966.                 Int32Ty, CGF.Builder.CreateAlignedLoad(
  3967. >                            ObjCIvarOffsetVariable(Interface, Ivar),
  3968.                              CGF.getPointerAlign(), "ivar"),
  3969.                 CharUnits::fromQuantity(4)),

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTWriter.cpp:3986: error: DEAD_STORE
  The value written to &Name (type clang::DeclarationName&) is never used.
  3984.   
  3985.     for (auto &Lookup : *DC->buildLookup()) {
  3986. >     auto &Name = Lookup.first;
  3987.       auto &Result = Lookup.second;
  3988.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3983: error: DEAD_STORE
  The value written to &isPPC64 (type _Bool) is never used.
  3981.     EVT PtrVT =
  3982.         CurDAG->getTargetLoweringInfo().getPointerTy(CurDAG->getDataLayout());
  3983. >   bool isPPC64 = (PtrVT == MVT::i64);
  3984.   
  3985.     if (!PPCSubTarget->useCRBits() &&

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Object/MachOObjectFile.cpp:4001: error: UNINITIALIZED_VALUE
  The value read from CurSegAddress was never initialized.
  3999.       Info.SegmentIndex = CurSegIndex - 1;
  4000.       Info.OffsetInSegment = Info.Address - CurSegAddress;
  4001. >     Info.SegmentStartAddress = CurSegAddress;
  4002.       Sections.push_back(Info);
  4003.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:3995: error: NULL_DEREFERENCE
  pointer `MUL` last assigned on line 3993 could be null and is dereferenced at line 3995, column 22.
  3993.     MachineInstr *MUL = MRI.getUniqueVRegDef(Root.getOperand(IdxMulOpd).getReg());
  3994.     unsigned ResultReg = Root.getOperand(0).getReg();
  3995. >   unsigned SrcReg0 = MUL->getOperand(1).getReg();
  3996.     bool Src0IsKill = MUL->getOperand(1).isKill();
  3997.     unsigned SrcReg1 = MUL->getOperand(2).getReg();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:4054: error: DEAD_STORE
  The value written to &BR (type llvm::SDNode*) is never used.
  4052.       SDValue NewBR = DAG.getNode(ISD::BR, DL, BR->getVTList(), Ops);
  4053.       DAG.ReplaceAllUsesWith(BR, NewBR.getNode());
  4054. >     BR = NewBR.getNode();
  4055.     }
  4056.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:4233: error: DEAD_STORE
  The value written to &FPR_idx (type unsigned int) is never used.
  4231.   
  4232.           ArgVal = DAG.getCopyFromReg(Chain, dl, VReg, ObjectVT);
  4233. >         ++FPR_idx;
  4234.         } else {
  4235.           needsLoad = true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:4018: error: DEAD_STORE
  The value written to &Num_FPR_Regs (type unsigned int const ) is never used.
  4016.   
  4017.     const unsigned Num_GPR_Regs = array_lengthof(GPR_32);
  4018. >   const unsigned Num_FPR_Regs = useSoftFloat() ? 0 : 13;
  4019.     const unsigned Num_VR_Regs  = array_lengthof( VR);
  4020.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:4019: error: DEAD_STORE
  The value written to &Num_VR_Regs (type unsigned int const ) is never used.
  4017.     const unsigned Num_GPR_Regs = array_lengthof(GPR_32);
  4018.     const unsigned Num_FPR_Regs = useSoftFloat() ? 0 : 13;
  4019. >   const unsigned Num_VR_Regs  = array_lengthof( VR);
  4020.   
  4021.     unsigned GPR_idx = 0, FPR_idx = 0, VR_idx = 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:4259: error: DEAD_STORE
  The value written to &VR_idx (type unsigned int) is never used.
  4257.             GPR_idx = std::min(GPR_idx+4, Num_GPR_Regs); // FIXME correct for ppc64?
  4258.           }
  4259. >         ++VR_idx;
  4260.         } else {
  4261.           if (!isVarArg && !isPPC64) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:4073: error: DEAD_STORE
  The value written to &VecArgOffset (type unsigned int) is never used.
  4071.     // first 12 parameters; these don't use that memory.
  4072.     VecArgOffset = ((VecArgOffset+15)/16)*16;
  4073. >   VecArgOffset += 12*16;
  4074.   
  4075.     // Add DAG nodes to load the arguments or copy them out of registers.  On

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:4264: error: DEAD_STORE
  The value written to &VecArgOffset (type unsigned int) is never used.
  4262.             // Vectors go after all the nonvectors.
  4263.             CurArgOffset = VecArgOffset;
  4264. >           VecArgOffset += 16;
  4265.           } else {
  4266.             // Vectors are aligned.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4072: error: NULL_DEREFERENCE
  pointer `MUL` last assigned on line 4070 could be null and is dereferenced at line 4072, column 22.
  4070.     MachineInstr *MUL = MRI.getUniqueVRegDef(Root.getOperand(IdxMulOpd).getReg());
  4071.     unsigned ResultReg = Root.getOperand(0).getReg();
  4072. >   unsigned SrcReg0 = MUL->getOperand(1).getReg();
  4073.     bool Src0IsKill = MUL->getOperand(1).isKill();
  4074.     unsigned SrcReg1 = MUL->getOperand(2).getReg();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:4073: error: DEAD_STORE
  The value written to &Val (type llvm::APInt const &) is never used.
  4071.     // other constants.
  4072.     if (ConstantSDNode *C = dyn_cast<ConstantSDNode>(Operand)) {
  4073. >     const APInt &Val = C->getAPIntValue();
  4074.       switch (Opcode) {
  4075.       default: break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4105: error: DEAD_STORE
  The value written to &MRI (type llvm::MachineRegisterInfo&) is never used.
  4103.       DenseMap<unsigned, unsigned> &InstrIdxForVirtReg) const {
  4104.     MachineBasicBlock &MBB = *Root.getParent();
  4105. >   MachineRegisterInfo &MRI = MBB.getParent()->getRegInfo();
  4106.     MachineFunction &MF = *MBB.getParent();
  4107.     const TargetInstrInfo *TII = MF.getSubtarget().getInstrInfo();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4107: error: DEAD_STORE
  The value written to &TII (type llvm::TargetInstrInfo const *) is never used.
  4105.     MachineRegisterInfo &MRI = MBB.getParent()->getRegInfo();
  4106.     MachineFunction &MF = *MBB.getParent();
  4107. >   const TargetInstrInfo *TII = MF.getSubtarget().getInstrInfo();
  4108.   
  4109.     MachineInstr *MUL;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:4163: error: DEAD_STORE
  The value written to &GetMDString (type clang::CodeGen::CGOpenMPRuntime::loadOffloadInfoMetadata::lambda__Users_abisbano_Binaries_llvm_llvm-project_clang_lib_CodeGen_CGOpenMPRuntime.cpp:4163:26&) is never used.
  4161.       };
  4162.   
  4163. >     auto &&GetMDString = [MN](unsigned Idx) {
  4164.         auto *V = cast<llvm::MDString>(MN->getOperand(Idx));
  4165.         return V->getString();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:4155: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 4155, column 5.
  4153.   
  4154.     if (isSigned) // if value is signed
  4155. >     return ~(-1U << (bits - 1));
  4156.     else
  4157.       return ~(-1U << bits);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:4157: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 4157, column 5.
  4155.       return ~(-1U << (bits - 1));
  4156.     else
  4157. >     return ~(-1U << bits);
  4158.   }
  4159.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:4217: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 4217, column 5.
  4215.   
  4216.     if (isSigned) // if value is signed
  4217. >     return -1U << (bits - 1);
  4218.     else
  4219.       return 0;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:4413: error: DEAD_STORE
  The value written to &MaxInRegs (type unsigned int) is never used.
  4411.         // In PIC we need an extra register to formulate the address computation
  4412.         // for the callee.
  4413. >       unsigned MaxInRegs = PositionIndependent ? 2 : 3;
  4414.   
  4415.         for (unsigned i = 0, e = ArgLocs.size(); i != e; ++i) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:4312: error: UNINITIALIZED_VALUE
  The value read from CCK was never initialized.
  4310.     assert(classifyTypeForARCConversion(castExpr->getType()) == ACTC_retainable);
  4311.   
  4312. >   diagnoseObjCARCConversion(*this, castRange, castType, castACTC,
  4313.                               castExpr, realCast, ACTC_retainable, CCK);
  4314.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4319: error: UNINITIALIZED_VALUE
  The value read from column.Val was never initialized.
  4317.   
  4318.     Result =
  4319. >       GET_OR_DISTINCT(DILocation, (Context, line.Val, column.Val, scope.Val,
  4320.                                      inlinedAt.Val, isImplicitCode.Val));
  4321.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4319: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4317.   
  4318.     Result =
  4319. >       GET_OR_DISTINCT(DILocation, (Context, line.Val, column.Val, scope.Val,
  4320.                                      inlinedAt.Val, isImplicitCode.Val));
  4321.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:4336: error: NULL_DEREFERENCE
  pointer `base` could be null and is dereferenced at line 4336, column 7.
  4334.     // at the overload.
  4335.     bool IsMSPropertySubscript = false;
  4336. >   if (base->getType()->isNonOverloadPlaceholderType()) {
  4337.       IsMSPropertySubscript = isMSPropertySubscriptExpr(*this, base);
  4338.       if (!IsMSPropertySubscript) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Analysis/CFG.cpp:4331: error: NULL_DEREFERENCE
  pointer `Block` last assigned on line 4328 could be null and is dereferenced by call to `appendNewAllocator` at line 4331, column 5.
  4329.   
  4330.     if (BuildOpts.AddCXXNewAllocator)
  4331. >     appendNewAllocator(Block, NE);
  4332.   
  4333.     if (NE->isArray())

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaStmt.cpp:4330: error: NULL_DEREFERENCE
  pointer `RSI` last assigned on line 4329 could be null and is dereferenced at line 4330, column 24.
  4328.   
  4329.     CapturedRegionScopeInfo *RSI = getCurCapturedRegion();
  4330. >   RecordDecl *Record = RSI->TheRecordDecl;
  4331.     Record->setInvalidDecl();
  4332.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4334: error: UNINITIALIZED_VALUE
  The value read from tag.Val was never initialized.
  4332.   #undef VISIT_MD_FIELDS
  4333.   
  4334. >   Result = GET_OR_DISTINCT(GenericDINode,
  4335.                              (Context, tag.Val, header.Val, operands.Val));
  4336.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4397: error: UNINITIALIZED_VALUE
  The value read from encoding.Val was never initialized.
  4395.   #undef VISIT_MD_FIELDS
  4396.   
  4397. >   Result = GET_OR_DISTINCT(DIBasicType, (Context, tag.Val, name.Val, size.Val,
  4398.                                            align.Val, encoding.Val, flags.Val));
  4399.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4397: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4395.   #undef VISIT_MD_FIELDS
  4396.   
  4397. >   Result = GET_OR_DISTINCT(DIBasicType, (Context, tag.Val, name.Val, size.Val,
  4398.                                            align.Val, encoding.Val, flags.Val));
  4399.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:4404: error: DEAD_STORE
  The value written to &PredRevOpcode (type int) is never used.
  4402.   // Reverse the branch prediction.
  4403.   unsigned HexagonInstrInfo::reversePrediction(unsigned Opcode) const {
  4404. >   int PredRevOpcode = -1;
  4405.     if (isPredictedTaken(Opcode))
  4406.       PredRevOpcode = Hexagon::notTakenBranchPrediction(Opcode);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4428: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4426.       DWARFAddressSpace = dwarfAddressSpace.Val;
  4427.   
  4428. >   Result = GET_OR_DISTINCT(DIDerivedType,
  4429.                              (Context, tag.Val, name.Val, file.Val, line.Val,
  4430.                               scope.Val, baseType.Val, size.Val, align.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4428: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4426.       DWARFAddressSpace = dwarfAddressSpace.Val;
  4427.   
  4428. >   Result = GET_OR_DISTINCT(DIDerivedType,
  4429.                              (Context, tag.Val, name.Val, file.Val, line.Val,
  4430.                               scope.Val, baseType.Val, size.Val, align.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4428: error: UNINITIALIZED_VALUE
  The value read from tag.Val was never initialized.
  4426.       DWARFAddressSpace = dwarfAddressSpace.Val;
  4427.   
  4428. >   Result = GET_OR_DISTINCT(DIDerivedType,
  4429.                              (Context, tag.Val, name.Val, file.Val, line.Val,
  4430.                               scope.Val, baseType.Val, size.Val, align.Val,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Analysis/CFG.cpp:4462: error: DEAD_STORE
  The value written to &BindToTemporary (type _Bool) is never used.
  4460.       case Stmt::MaterializeTemporaryExprClass: {
  4461.         const MaterializeTemporaryExpr* MTE = cast<MaterializeTemporaryExpr>(E);
  4462. >       BindToTemporary = (MTE->getStorageDuration() != SD_FullExpression);
  4463.         SmallVector<const Expr *, 2> CommaLHSs;
  4464.         SmallVector<SubobjectAdjustment, 2> Adjustments;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4459: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4457.     // If this has an identifier try to build an ODR type.
  4458.     if (identifier.Val)
  4459. >     if (auto *CT = DICompositeType::buildODRType(
  4460.               Context, *identifier.Val, tag.Val, name.Val, file.Val, line.Val,
  4461.               scope.Val, baseType.Val, size.Val, align.Val, offset.Val, flags.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4470: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4468.     // Create a new node, and save it in the context if it belongs in the type
  4469.     // map.
  4470. >   Result = GET_OR_DISTINCT(
  4471.         DICompositeType,
  4472.         (Context, tag.Val, name.Val, file.Val, line.Val, scope.Val, baseType.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4459: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4457.     // If this has an identifier try to build an ODR type.
  4458.     if (identifier.Val)
  4459. >     if (auto *CT = DICompositeType::buildODRType(
  4460.               Context, *identifier.Val, tag.Val, name.Val, file.Val, line.Val,
  4461.               scope.Val, baseType.Val, size.Val, align.Val, offset.Val, flags.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4470: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4468.     // Create a new node, and save it in the context if it belongs in the type
  4469.     // map.
  4470. >   Result = GET_OR_DISTINCT(
  4471.         DICompositeType,
  4472.         (Context, tag.Val, name.Val, file.Val, line.Val, scope.Val, baseType.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4459: error: UNINITIALIZED_VALUE
  The value read from runtimeLang.Val was never initialized.
  4457.     // If this has an identifier try to build an ODR type.
  4458.     if (identifier.Val)
  4459. >     if (auto *CT = DICompositeType::buildODRType(
  4460.               Context, *identifier.Val, tag.Val, name.Val, file.Val, line.Val,
  4461.               scope.Val, baseType.Val, size.Val, align.Val, offset.Val, flags.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4470: error: UNINITIALIZED_VALUE
  The value read from runtimeLang.Val was never initialized.
  4468.     // Create a new node, and save it in the context if it belongs in the type
  4469.     // map.
  4470. >   Result = GET_OR_DISTINCT(
  4471.         DICompositeType,
  4472.         (Context, tag.Val, name.Val, file.Val, line.Val, scope.Val, baseType.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4459: error: UNINITIALIZED_VALUE
  The value read from tag.Val was never initialized.
  4457.     // If this has an identifier try to build an ODR type.
  4458.     if (identifier.Val)
  4459. >     if (auto *CT = DICompositeType::buildODRType(
  4460.               Context, *identifier.Val, tag.Val, name.Val, file.Val, line.Val,
  4461.               scope.Val, baseType.Val, size.Val, align.Val, offset.Val, flags.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4470: error: UNINITIALIZED_VALUE
  The value read from tag.Val was never initialized.
  4468.     // Create a new node, and save it in the context if it belongs in the type
  4469.     // map.
  4470. >   Result = GET_OR_DISTINCT(
  4471.         DICompositeType,
  4472.         (Context, tag.Val, name.Val, file.Val, line.Val, scope.Val, baseType.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:4518: error: DEAD_STORE
  The value written to &Not (type llvm::MachineInstr*) is never used.
  4516.       // unit as necessary.
  4517.       if (Src0IsSGPR) {
  4518. >       Not = BuildMI(MBB, MII, DL, get(AMDGPU::S_NOT_B32), Temp)
  4519.           .add(Src0);
  4520.         Xor = BuildMI(MBB, MII, DL, get(AMDGPU::S_XOR_B32), NewDest)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:4524: error: DEAD_STORE
  The value written to &Not (type llvm::MachineInstr*) is never used.
  4522.         .add(Src1);
  4523.       } else if (Src1IsSGPR) {
  4524. >       Not = BuildMI(MBB, MII, DL, get(AMDGPU::S_NOT_B32), Temp)
  4525.           .add(Src1);
  4526.         Xor = BuildMI(MBB, MII, DL, get(AMDGPU::S_XOR_B32), NewDest)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4487: error: UNINITIALIZED_VALUE
  The value read from cc.Val was never initialized.
  4485.   #undef VISIT_MD_FIELDS
  4486.   
  4487. >   Result = GET_OR_DISTINCT(DISubroutineType,
  4488.                              (Context, flags.Val, cc.Val, types.Val));
  4489.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4487: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4485.   #undef VISIT_MD_FIELDS
  4486.   
  4487. >   Result = GET_OR_DISTINCT(DISubroutineType,
  4488.                              (Context, flags.Val, cc.Val, types.Val));
  4489.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:4491: error: DEAD_STORE
  The value written to &OptLevel (type int) is never used.
  4489.   SDValue NVPTXTargetLowering::PerformDAGCombine(SDNode *N,
  4490.                                                  DAGCombinerInfo &DCI) const {
  4491. >   CodeGenOpt::Level OptLevel = getTargetMachine().getOptLevel();
  4492.     switch (N->getOpcode()) {
  4493.       default: break;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:4500: error: DEAD_STORE
  The value written to &C (type clang::ASTContext&) is never used.
  4498.     assert(!T->isDependentType() && "Cannot evaluate traits of dependent type");
  4499.   
  4500. >   ASTContext &C = Self.Context;
  4501.     switch(UTT) {
  4502.     default: llvm_unreachable("not a UTT");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:4559: error: UNINITIALIZED_VALUE
  The value read from EltMask was never initialized.
  4557.     }
  4558.   
  4559. >   SDValue BuildVec = DAG.getConstant(EltMask, DL, VecVT);
  4560.   
  4561.     // If we couldn't materialize the mask above, then the mask vector will be

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:4568: error: DEAD_STORE
  The value written to &NeedTrunc (type _Bool) is never used.
  4566.     if (EltVT.getSizeInBits() < 16) {
  4567.       EltVT = MVT::i16;
  4568. >     NeedTrunc = true;
  4569.     }
  4570.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:4534: error: UNINITIALIZED_VALUE
  The value read from AlignSizePow2 was never initialized.
  4532.     // Because of AlignSizePow2's verified range we can safely truncate it to
  4533.     // unsigned.
  4534. >   getStreamer().EmitBundleAlignMode(static_cast<unsigned>(AlignSizePow2));
  4535.     return false;
  4536.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:4561: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Entry` was dereferenced at line 4534 and is tested for null at line 4561, column 7.
  4559.   
  4560.     auto GV = GenerateStringLiteral(C, LT, *this, GlobalVariableName, Alignment);
  4561. >   if (Entry)
  4562.       *Entry = GV;
  4563.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4556: error: UNINITIALIZED_VALUE
  The value read from emissionKind.Val was never initialized.
  4554.   #undef VISIT_MD_FIELDS
  4555.   
  4556. >   Result = DICompileUnit::getDistinct(
  4557.         Context, language.Val, file.Val, producer.Val, isOptimized.Val, flags.Val,
  4558.         runtimeVersion.Val, splitDebugFilename.Val, emissionKind.Val, enums.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4556: error: UNINITIALIZED_VALUE
  The value read from language.Val was never initialized.
  4554.   #undef VISIT_MD_FIELDS
  4555.   
  4556. >   Result = DICompileUnit::getDistinct(
  4557.         Context, language.Val, file.Val, producer.Val, isOptimized.Val, flags.Val,
  4558.         runtimeVersion.Val, splitDebugFilename.Val, emissionKind.Val, enums.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4556: error: UNINITIALIZED_VALUE
  The value read from nameTableKind.Val was never initialized.
  4554.   #undef VISIT_MD_FIELDS
  4555.   
  4556. >   Result = DICompileUnit::getDistinct(
  4557.         Context, language.Val, file.Val, producer.Val, isOptimized.Val, flags.Val,
  4558.         runtimeVersion.Val, splitDebugFilename.Val, emissionKind.Val, enums.Val,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaInit.cpp:4657: error: UNINITIALIZED_VALUE
  The value read from FK was never initialized.
  4655.           break;
  4656.         }
  4657. >       Sequence.SetFailed(FK);
  4658.       }
  4659.       return;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4577: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4575.         (match(Op0, m_FSub(m_Value(X), m_Specific(Op1))) ||
  4576.          match(Op1, m_FSub(m_Value(X), m_Specific(Op0)))))
  4577. >     return X;
  4578.   
  4579.     return nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:4645: error: DEAD_STORE
  The value written to &QualifiedDC (type clang::DeclContext*) is never used.
  4643.     // Perform name lookup to find visible, similarly-named entities.
  4644.     bool IsUnqualifiedLookup = false;
  4645. >   DeclContext *QualifiedDC = MemberContext;
  4646.     if (MemberContext) {
  4647.       LookupVisibleDecls(MemberContext, LookupKind, *Consumer);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4610: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4608.           Loc,
  4609.           "missing 'distinct', required for !DISubprogram that is a Definition");
  4610. >   Result = GET_OR_DISTINCT(
  4611.         DISubprogram,
  4612.         (Context, scope.Val, name.Val, linkageName.Val, file.Val, line.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4610: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4608.           Loc,
  4609.           "missing 'distinct', required for !DISubprogram that is a Definition");
  4610. >   Result = GET_OR_DISTINCT(
  4611.         DISubprogram,
  4612.         (Context, scope.Val, name.Val, linkageName.Val, file.Val, line.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4610: error: UNINITIALIZED_VALUE
  The value read from scopeLine.Val was never initialized.
  4608.           Loc,
  4609.           "missing 'distinct', required for !DISubprogram that is a Definition");
  4610. >   Result = GET_OR_DISTINCT(
  4611.         DISubprogram,
  4612.         (Context, scope.Val, name.Val, linkageName.Val, file.Val, line.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4603: error: UNINITIALIZED_VALUE
  The value read from spFlags.Val was never initialized.
  4601.     // older IR versions.
  4602.     DISubprogram::DISPFlags SPFlags =
  4603. >       spFlags.Seen ? spFlags.Val
  4604.                      : DISubprogram::toSPFlags(isLocal.Val, isDefinition.Val,
  4605.                                                isOptimized.Val, virtuality.Val);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4604: error: UNINITIALIZED_VALUE
  The value read from virtuality.Val was never initialized.
  4602.     DISubprogram::DISPFlags SPFlags =
  4603.         spFlags.Seen ? spFlags.Val
  4604. >                    : DISubprogram::toSPFlags(isLocal.Val, isDefinition.Val,
  4605.                                                isOptimized.Val, virtuality.Val);
  4606.     if ((SPFlags & DISubprogram::SPFlagDefinition) && !IsDistinct)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:4587: error: DEAD_STORE
  The value written to &Is64bit (type _Bool) is never used.
  4585.   
  4586.     unsigned DivOpc;
  4587. >   bool Is64bit = (DestVT == MVT::i64);
  4588.     switch (ISDOpcode) {
  4589.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4605: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4603.     if (match(Op0, m_NegZeroFP()) &&
  4604.         match(Op1, m_FSub(m_NegZeroFP(), m_Value(X))))
  4605. >     return X;
  4606.   
  4607.     // fsub 0.0, (fsub 0.0, X) ==> X if signed zeros are ignored.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4610: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4608.     if (FMF.noSignedZeros() && match(Op0, m_AnyZeroFP()) &&
  4609.         match(Op1, m_FSub(m_AnyZeroFP(), m_Value(X))))
  4610. >     return X;
  4611.   
  4612.     // fsub nnan x, x ==> 0.0

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4621: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4619.         (match(Op1, m_FSub(m_Specific(Op0), m_Value(X))) ||
  4620.          match(Op0, m_c_FAdd(m_Specific(Op1), m_Value(X)))))
  4621. >     return X;
  4622.   
  4623.     return nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:4646: error: UNINITIALIZED_VALUE
  The value read from InnerShift was never initialized.
  4644.   
  4645.     //     tmp = x   'opposite logical shift' y
  4646. >   SDValue T0 = DAG.getNode(InnerShift, DL, VT, X, Y);
  4647.     //     ret = tmp 'logical shift' y
  4648.     SDValue T1 = DAG.getNode(OuterShift, DL, VT, T0, Y);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:4648: error: UNINITIALIZED_VALUE
  The value read from OuterShift was never initialized.
  4646.     SDValue T0 = DAG.getNode(InnerShift, DL, VT, X, Y);
  4647.     //     ret = tmp 'logical shift' y
  4648. >   SDValue T1 = DAG.getNode(OuterShift, DL, VT, T0, Y);
  4649.   
  4650.     return T1;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4630: error: UNINITIALIZED_VALUE
  The value read from column.Val was never initialized.
  4628.   #undef VISIT_MD_FIELDS
  4629.   
  4630. >   Result = GET_OR_DISTINCT(
  4631.         DILexicalBlock, (Context, scope.Val, file.Val, line.Val, column.Val));
  4632.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4630: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4628.   #undef VISIT_MD_FIELDS
  4629.   
  4630. >   Result = GET_OR_DISTINCT(
  4631.         DILexicalBlock, (Context, scope.Val, file.Val, line.Val, column.Val));
  4632.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4650: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4648.     if (Op0 == Op1 && match(Op0, m_Intrinsic<Intrinsic::sqrt>(m_Value(X))) &&
  4649.         FMF.allowReassoc() && FMF.noNaNs() && FMF.noSignedZeros())
  4650. >     return X;
  4651.   
  4652.     return nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4648: error: DEAD_STORE
  The value written to &IsNegativeBranch (type _Bool) is never used.
  4646.     case AArch64::CBNZX:
  4647.       TargetBBInMI = 1;
  4648. >     IsNegativeBranch = true;
  4649.       break;
  4650.     case AArch64::TBZW:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4658: error: DEAD_STORE
  The value written to &IsNegativeBranch (type _Bool) is never used.
  4656.     case AArch64::TBNZX:
  4657.       TargetBBInMI = 2;
  4658. >     IsNegativeBranch = true;
  4659.       IsTestAndBranch = true;
  4660.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4643: error: DEAD_STORE
  The value written to &TargetBBInMI (type unsigned int) is never used.
  4641.     case AArch64::CBZW:
  4642.     case AArch64::CBZX:
  4643. >     TargetBBInMI = 1;
  4644.       break;
  4645.     case AArch64::CBNZW:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4647: error: DEAD_STORE
  The value written to &TargetBBInMI (type unsigned int) is never used.
  4645.     case AArch64::CBNZW:
  4646.     case AArch64::CBNZX:
  4647. >     TargetBBInMI = 1;
  4648.       IsNegativeBranch = true;
  4649.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4652: error: DEAD_STORE
  The value written to &TargetBBInMI (type unsigned int) is never used.
  4650.     case AArch64::TBZW:
  4651.     case AArch64::TBZX:
  4652. >     TargetBBInMI = 2;
  4653.       IsTestAndBranch = true;
  4654.       break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:4657: error: DEAD_STORE
  The value written to &TargetBBInMI (type unsigned int) is never used.
  4655.     case AArch64::TBNZW:
  4656.     case AArch64::TBNZX:
  4657. >     TargetBBInMI = 2;
  4658.       IsNegativeBranch = true;
  4659.       IsTestAndBranch = true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:4675: error: DEAD_STORE
  The value written to &NeedTrunc (type _Bool) is never used.
  4673.         if (EltVT.getSizeInBits() < 16) {
  4674.           EltVT = MVT::i16;
  4675. >         NeedTrunc = true;
  4676.         }
  4677.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:4800: error: DEAD_STORE
  The value written to &CanZextLoadProfitably (type _Bool) is never used.
  4798.       // actually legal and isn't going to get expanded, else this is a false
  4799.       // optimisation.
  4800. >     bool CanZextLoadProfitably = TLI.isLoadExtLegal(ISD::ZEXTLOAD,
  4801.                                                       Load->getValueType(0),
  4802.                                                       Load->getMemoryVT());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4676: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4674.   #undef VISIT_MD_FIELDS
  4675.   
  4676. >   Result = GET_OR_DISTINCT(DIMacro,
  4677.                              (Context, type.Val, line.Val, name.Val, value.Val));
  4678.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4676: error: UNINITIALIZED_VALUE
  The value read from type.Val was never initialized.
  4674.   #undef VISIT_MD_FIELDS
  4675.   
  4676. >   Result = GET_OR_DISTINCT(DIMacro,
  4677.                              (Context, type.Val, line.Val, name.Val, value.Val));
  4678.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4698: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4696.       Value *X;
  4697.       if (FMF.allowReassoc() && match(Op0, m_c_FMul(m_Value(X), m_Specific(Op1))))
  4698. >       return X;
  4699.   
  4700.       // -X /  X -> -1.0 and

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4692: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4690.   #undef VISIT_MD_FIELDS
  4691.   
  4692. >   Result = GET_OR_DISTINCT(DIMacroFile,
  4693.                              (Context, type.Val, line.Val, file.Val, nodes.Val));
  4694.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:4884: error: UNINITIALIZED_VALUE
  The value read from Signed was never initialized.
  4882.     };
  4883.   
  4884. >   const SCEV *StartExtended = getExtendedExpr(StartVal, Signed);
  4885.     if (PredIsKnownFalse(StartVal, StartExtended)) {
  4886.       LLVM_DEBUG(dbgs() << "P2 is compile-time false\n";);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:4744: error: DEAD_STORE
  The value written to &TRI (type llvm::ARMBaseRegisterInfo const *) is never used.
  4742.     unsigned Lane;
  4743.     MachineInstrBuilder MIB(*MI.getParent()->getParent(), MI);
  4744. >   const TargetRegisterInfo *TRI = &getRegisterInfo();
  4745.     switch (MI.getOpcode()) {
  4746.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4768: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4766.   
  4767.     Result =
  4768. >       GET_OR_DISTINCT(DIGlobalVariable,
  4769.                         (Context, scope.Val, name.Val, linkageName.Val, file.Val,
  4770.                          line.Val, type.Val, isLocal.Val, isDefinition.Val,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4795: error: UNINITIALIZED_VALUE
  The value read from flags.Val was never initialized.
  4793.   #undef VISIT_MD_FIELDS
  4794.   
  4795. >   Result = GET_OR_DISTINCT(DILocalVariable,
  4796.                              (Context, scope.Val, name.Val, file.Val, line.Val,
  4797.                               type.Val, arg.Val, flags.Val, align.Val));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4795: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4793.   #undef VISIT_MD_FIELDS
  4794.   
  4795. >   Result = GET_OR_DISTINCT(DILocalVariable,
  4796.                              (Context, scope.Val, name.Val, file.Val, line.Val,
  4797.                               type.Val, arg.Val, flags.Val, align.Val));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4812: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4810.   #undef VISIT_MD_FIELDS
  4811.   
  4812. >   Result = GET_OR_DISTINCT(DILabel,
  4813.                              (Context, scope.Val, name.Val, file.Val, line.Val));
  4814.     return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:4926: error: DEAD_STORE
  The value written to &Ordered (type _Bool) is never used.
  4924.       else if (NaNBehavior == SPNB_RETURNS_OTHER)
  4925.         NaNBehavior = SPNB_RETURNS_NAN;
  4926. >     Ordered = !Ordered;
  4927.     }
  4928.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:4864: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 4864, column 3.
  4862.   std::pair<unsigned, unsigned>
  4863.   LoopVectorizationCostModel::getSmallestAndWidestTypes() {
  4864. >   unsigned MinWidth = -1U;
  4865.     unsigned MaxWidth = 8;
  4866.     const DataLayout &DL = TheFunction->getParent()->getDataLayout();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4885: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4883.   #undef VISIT_MD_FIELDS
  4884.   
  4885. >   Result = GET_OR_DISTINCT(DIObjCProperty,
  4886.                              (Context, name.Val, file.Val, line.Val, setter.Val,
  4887.                               getter.Val, attributes.Val, type.Val));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4905: error: UNINITIALIZED_VALUE
  The value read from line.Val was never initialized.
  4903.   #undef VISIT_MD_FIELDS
  4904.   
  4905. >   Result = GET_OR_DISTINCT(
  4906.         DIImportedEntity,
  4907.         (Context, tag.Val, scope.Val, entity.Val, file.Val, line.Val, name.Val));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4905: error: UNINITIALIZED_VALUE
  The value read from tag.Val was never initialized.
  4903.   #undef VISIT_MD_FIELDS
  4904.   
  4905. >   Result = GET_OR_DISTINCT(
  4906.         DIImportedEntity,
  4907.         (Context, tag.Val, scope.Val, entity.Val, file.Val, line.Val, name.Val));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:4940: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 4940, column 7.
  4938.   
  4939.     // We used the distance for the interleave count.
  4940. >   if (Legal->getMaxSafeDepDistBytes() != -1U)
  4941.       return 1;
  4942.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4950: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4948.       // exp(log(x)) -> x
  4949.       if (Q.CxtI->hasAllowReassoc() &&
  4950. >         match(Op0, m_Intrinsic<Intrinsic::log>(m_Value(X)))) return X;
  4951.       break;
  4952.     case Intrinsic::exp2:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4955: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4953.       // exp2(log2(x)) -> x
  4954.       if (Q.CxtI->hasAllowReassoc() &&
  4955. >         match(Op0, m_Intrinsic<Intrinsic::log2>(m_Value(X)))) return X;
  4956.       break;
  4957.     case Intrinsic::log:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4960: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4958.       // log(exp(x)) -> x
  4959.       if (Q.CxtI->hasAllowReassoc() &&
  4960. >         match(Op0, m_Intrinsic<Intrinsic::exp>(m_Value(X)))) return X;
  4961.       break;
  4962.     case Intrinsic::log2:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4967: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4965.           (match(Op0, m_Intrinsic<Intrinsic::exp2>(m_Value(X))) ||
  4966.            match(Op0, m_Intrinsic<Intrinsic::pow>(m_SpecificFP(2.0),
  4967. >                                                 m_Value(X))))) return X;
  4968.       break;
  4969.     case Intrinsic::log10:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:4973: error: UNINITIALIZED_VALUE
  The value read from X was never initialized.
  4971.       if (Q.CxtI->hasAllowReassoc() &&
  4972.           match(Op0, m_Intrinsic<Intrinsic::pow>(m_SpecificFP(10.0),
  4973. >                                                m_Value(X)))) return X;
  4974.       break;
  4975.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:4960: error: DEAD_STORE
  The value written to &UseOp (type int) is never used.
  4958.       return 0;
  4959.     unsigned Reg = MO.getReg();
  4960. >   int UseOp = -1;
  4961.   
  4962.     switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:5019: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  5017.         bool InferExportWildcard = Record[Idx++];
  5018.         bool ConfigMacrosExhaustive = Record[Idx++];
  5019. >       bool ModuleMapIsPrivate = Record[Idx++];
  5020.   
  5021.         Module *ParentModule = nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:4960: error: DEAD_STORE
  The value written to &ModMap (type clang::ModuleMap&) is never used.
  4958.     }
  4959.   
  4960. >   ModuleMap &ModMap = PP.getHeaderSearchInfo().getModuleMap();
  4961.     bool First = true;
  4962.     Module *CurrentModule = nullptr;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:5064: error: DIVIDE_BY_ZERO
  Expression `returned by getPrimitiveSizeInBits` could be zero at line 5064, column 15.
  5062.       if (Modifier & VectorizeRetType)
  5063.         Ty = llvm::VectorType::get(
  5064. >           Ty, VectorSize ? VectorSize / Ty->getPrimitiveSizeInBits() : 1);
  5065.   
  5066.       Tys.push_back(Ty);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:5071: error: DIVIDE_BY_ZERO
  Expression `returned by getPrimitiveSizeInBits` could be zero at line 5071, column 16.
  5069.     // Arguments.
  5070.     if (Modifier & VectorizeArgTypes) {
  5071. >     int Elts = VectorSize ? VectorSize / ArgType->getPrimitiveSizeInBits() : 1;
  5072.       ArgType = llvm::VectorType::get(ArgType, Elts);
  5073.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5203: error: DEAD_STORE
  The value written to &ValueId (type unsigned int) is never used.
  5201.             GlobalValue::LinkageTypes Linkage = getDecodedLinkage(RawLinkage);
  5202.             if (!UseStrtab) {
  5203. >             ValueIdToLinkageMap[ValueId++] = Linkage;
  5204.               break;
  5205.             }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5207: error: DEAD_STORE
  The value written to &ValueId (type unsigned int) is never used.
  5205.             }
  5206.   
  5207. >           setValueGUID(ValueId++, Name, Linkage, SourceFileName);
  5208.             break;
  5209.           }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaLookup.cpp:5152: error: UNINITIALIZED_VALUE
  The value read from DiagID was never initialized.
  5150.       break;
  5151.     }
  5152. >   Diag(DeclLoc, DiagID);
  5153.   
  5154.     // Try to recover by implicitly importing this module.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:5164: error: DEAD_STORE
  The value written to &Quad (type _Bool) is never used.
  5162.     NeonTypeFlags Type(NeonTypeConst.getZExtValue());
  5163.     bool Usgn = Type.isUnsigned();
  5164. >   bool Quad = Type.isQuad();
  5165.     const bool HasLegalHalfType = getTarget().hasLegalHalfType();
  5166.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:5364: error: UNINITIALIZED_VALUE
  The value read from Alignment was never initialized.
  5362.     Fn->setAttributes(PAL);
  5363.     Fn->setUnnamedAddr(UnnamedAddr);
  5364. >   Fn->setAlignment(Alignment);
  5365.     Fn->setSection(Section);
  5366.     Fn->setComdat(C);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:5204: error: DEAD_STORE
  The value written to &MaxNibble (type unsigned char const ) is never used.
  5202.     // The bitmap is a series of skip/scan instructions, aligned to word
  5203.     // boundaries.  The skip is performed first.
  5204. >   const unsigned char MaxNibble = 0xF;
  5205.     const unsigned char SkipMask = 0xF0, SkipShift = 4;
  5206.     const unsigned char ScanMask = 0x0F, ScanShift = 0;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:5206: error: DEAD_STORE
  The value written to &ScanMask (type unsigned char const ) is never used.
  5204.     const unsigned char MaxNibble = 0xF;
  5205.     const unsigned char SkipMask = 0xF0, SkipShift = 4;
  5206. >   const unsigned char ScanMask = 0x0F, ScanShift = 0;
  5207.   
  5208.     assert(!IvarsInfo.empty() && "generating bitmap for no data");

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:5205: error: DEAD_STORE
  The value written to &SkipMask (type unsigned char const ) is never used.
  5203.     // boundaries.  The skip is performed first.
  5204.     const unsigned char MaxNibble = 0xF;
  5205. >   const unsigned char SkipMask = 0xF0, SkipShift = 4;
  5206.     const unsigned char ScanMask = 0x0F, ScanShift = 0;
  5207.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:5205: error: DEAD_STORE
  The value written to &SkipShift (type unsigned char const ) is never used.
  5203.     // boundaries.  The skip is performed first.
  5204.     const unsigned char MaxNibble = 0xF;
  5205. >   const unsigned char SkipMask = 0xF0, SkipShift = 4;
  5206.     const unsigned char ScanMask = 0x0F, ScanShift = 0;
  5207.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:5230: error: NULL_DEREFERENCE
  pointer `&GlobalMetadata` last assigned on line 5223 could be null and is dereferenced by call to `EmitGlobalDeclMetadata()` at line 5230, column 7.
  5228.       // in this module, e.g. if we mangled it for DebugInfo.
  5229.       if (Addr)
  5230. >       EmitGlobalDeclMetadata(*this, GlobalMetadata, I.first, Addr);
  5231.     }
  5232.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:5256: error: NULL_DEREFERENCE
  pointer `&GlobalMetadata` last assigned on line 5244 could be null and is dereferenced by call to `EmitGlobalDeclMetadata()` at line 5256, column 7.
  5254.       } else if (auto *GV = dyn_cast<llvm::GlobalValue>(Addr)) {
  5255.         GlobalDecl GD = GlobalDecl(cast<VarDecl>(D));
  5256. >       EmitGlobalDeclMetadata(CGM, GlobalMetadata, GD, GV);
  5257.       }
  5258.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5321: error: DEAD_STORE
  The value written to &IsOldProfileFormat (type _Bool) is never used.
  5319.     }
  5320.     const uint64_t Version = Record[0];
  5321. >   const bool IsOldProfileFormat = Version == 1;
  5322.     if (Version < 1 || Version > 6)
  5323.       return error("Invalid summary version " + Twine(Version) +

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5573: error: DEAD_STORE
  The value written to &LastSeenGUID (type unsigned long long) is never used.
  5571.         PendingTypeCheckedLoadConstVCalls.clear();
  5572.         LastSeenSummary = FS.get();
  5573. >       LastSeenGUID = VI.getGUID();
  5574.         FS->setModulePath(ModuleIdMap[ModuleId]);
  5575.         TheIndex.addGlobalValueSummary(VI, std::move(FS));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5599: error: DEAD_STORE
  The value written to &LastSeenGUID (type unsigned long long) is never used.
  5597.   
  5598.         ValueInfo VI = getValueInfoFromValueId(ValueID).first;
  5599. >       LastSeenGUID = VI.getGUID();
  5600.         TheIndex.addGlobalValueSummary(VI, std::move(AS));
  5601.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5622: error: DEAD_STORE
  The value written to &LastSeenGUID (type unsigned long long) is never used.
  5620.         FS->setModulePath(ModuleIdMap[ModuleId]);
  5621.         ValueInfo VI = getValueInfoFromValueId(ValueID).first;
  5622. >       LastSeenGUID = VI.getGUID();
  5623.         TheIndex.addGlobalValueSummary(VI, std::move(FS));
  5624.         break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5572: error: DEAD_STORE
  The value written to &LastSeenSummary (type llvm::GlobalValueSummary*) is never used.
  5570.         PendingTypeTestAssumeConstVCalls.clear();
  5571.         PendingTypeCheckedLoadConstVCalls.clear();
  5572. >       LastSeenSummary = FS.get();
  5573.         LastSeenGUID = VI.getGUID();
  5574.         FS->setModulePath(ModuleIdMap[ModuleId]);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5588: error: DEAD_STORE
  The value written to &LastSeenSummary (type llvm::GlobalValueSummary*) is never used.
  5586.         auto Flags = getDecodedGVSummaryFlags(RawFlags, Version);
  5587.         auto AS = llvm::make_unique<AliasSummary>(Flags);
  5588. >       LastSeenSummary = AS.get();
  5589.         AS->setModulePath(ModuleIdMap[ModuleId]);
  5590.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5619: error: DEAD_STORE
  The value written to &LastSeenSummary (type llvm::GlobalValueSummary*) is never used.
  5617.         auto FS =
  5618.             llvm::make_unique<GlobalVarSummary>(Flags, GVF, std::move(Refs));
  5619. >       LastSeenSummary = FS.get();
  5620.         FS->setModulePath(ModuleIdMap[ModuleId]);
  5621.         ValueInfo VI = getValueInfoFromValueId(ValueID).first;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:5397: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  5395.     PPOpts.ImplicitPCHInclude = ReadString(Record, Idx);
  5396.     PPOpts.ObjCXXARCStandardLibrary =
  5397. >     static_cast<ObjCXXARCStandardLibraryKind>(Record[Idx++]);
  5398.     SuggestedPredefines.clear();
  5399.     return Listener.ReadPreprocessorOptions(PPOpts, Complain,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:5437: error: UNINITIALIZED_VALUE
  The value read from OverflowOp was never initialized.
  5435.         getSetCCResultType(DAG.getDataLayout(), *DAG.getContext(), ResultType);
  5436.     SDValue Result =
  5437. >       DAG.getNode(OverflowOp, dl, DAG.getVTList(ResultType, BoolVT), LHS, RHS);
  5438.     SDValue SumDiff = Result.getValue(0);
  5439.     SDValue Overflow = Result.getValue(1);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:5530: error: UNINITIALIZED_VALUE
  The value read from Opc was never initialized.
  5528.       }
  5529.   
  5530. >     return DAG.getAtomic(Opc, SDLoc(Op), M->getMemoryVT(),
  5531.                            M->getOperand(0), M->getOperand(2), M->getOperand(3),
  5532.                            M->getMemOperand());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:5562: error: UNINITIALIZED_VALUE
  The value read from Opc was never initialized.
  5560.       };
  5561.   
  5562. >     return DAG.getMemIntrinsicNode(Opc, SDLoc(Op), M->getVTList(), Ops,
  5563.                                      M->getMemoryVT(), M->getMemOperand());
  5564.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:5503: error: DEAD_STORE
  The value written to &NameID (type int) is never used.
  5501.       // specified, b) name specified "%foo =", c) number specified: "%4 =".
  5502.       LocTy NameLoc = Lex.getLoc();
  5503. >     int NameID = -1;
  5504.       NameStr = "";
  5505.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:5507: error: DEAD_STORE
  The value written to &NameID (type int) is never used.
  5505.   
  5506.       if (Lex.getKind() == lltok::LocalVarID) {
  5507. >       NameID = Lex.getUIntVal();
  5508.         Lex.Lex();
  5509.         if (ParseToken(lltok::equal, "expected '=' after instruction id"))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:5897: error: DEAD_STORE
  The value written to &FPR_idx (type unsigned int) is never used.
  5895.         // First load the argument into the next available FPR.
  5896.         if (FPR_idx != NumFPRs)
  5897. >         RegsToPass.push_back(std::make_pair(FPR[FPR_idx++], Arg));
  5898.   
  5899.         // Next, load the argument into GPR or stack slot if needed.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:5542: error: DEAD_STORE
  The value written to &NumQFPRs (type unsigned int) is never used.
  5540.     const unsigned NumFPRs = useSoftFloat() ? 0 : 13;
  5541.     const unsigned NumVRs  = array_lengthof(VR);
  5542. >   const unsigned NumQFPRs = NumFPRs;
  5543.   
  5544.     // On ELFv2, we can avoid allocating the parameter area if all the arguments

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:5528: error: DEAD_STORE
  The value written to &QFPR_idx (type unsigned int&) is never used.
  5526.     unsigned NumBytes = LinkageSize;
  5527.     unsigned GPR_idx = 0, FPR_idx = 0, VR_idx = 0;
  5528. >   unsigned &QFPR_idx = FPR_idx;
  5529.   
  5530.     static const MCPhysReg GPR[] = {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:6005: error: DEAD_STORE
  The value written to &VR_idx (type unsigned int) is never used.
  6003.                 DAG.getLoad(MVT::v4f32, dl, Store, PtrOff, MachinePointerInfo());
  6004.             MemOpChains.push_back(Load.getValue(1));
  6005. >           RegsToPass.push_back(std::make_pair(VR[VR_idx++], Load));
  6006.           }
  6007.           ArgOffset += 16;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:6023: error: DEAD_STORE
  The value written to &VR_idx (type unsigned int) is never used.
  6021.         // Non-varargs Altivec params go into VRs or on the stack.
  6022.         if (VR_idx != NumVRs) {
  6023. >         RegsToPass.push_back(std::make_pair(VR[VR_idx++], Arg));
  6024.         } else {
  6025.           if (CallConv == CallingConv::Fast)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:5559: error: DEAD_STORE
  The value written to &KeywordVal (type unsigned int) is never used.
  5557.       return TokError("found end of file when expecting more instructions");
  5558.     LocTy Loc = Lex.getLoc();
  5559. >   unsigned KeywordVal = Lex.getUIntVal();
  5560.     Lex.Lex();  // Eat the keyword.
  5561.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:5628: error: DEAD_STORE
  The value written to &Op1Not (type _Bool) is never used.
  5626.             else if (Op.getMachineOpcode() == PPC::CRNOR &&
  5627.                      Op.getOperand(0) == Op.getOperand(1))
  5628. >             Op1Not = true;
  5629.           }
  5630.           }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:5623: error: DEAD_STORE
  The value written to &Op1Set (type _Bool) is never used.
  5621.           if (Op.isMachineOpcode()) {
  5622.             if (Op.getMachineOpcode() == PPC::CRSET)
  5623. >             Op1Set = true;
  5624.             else if (Op.getMachineOpcode() == PPC::CRUNSET)
  5625.               Op1Unset = true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:5625: error: DEAD_STORE
  The value written to &Op1Unset (type _Bool) is never used.
  5623.               Op1Set = true;
  5624.             else if (Op.getMachineOpcode() == PPC::CRUNSET)
  5625. >             Op1Unset = true;
  5626.             else if (Op.getMachineOpcode() == PPC::CRNOR &&
  5627.                      Op.getOperand(0) == Op.getOperand(1))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:5601: error: DEAD_STORE
  The value written to &Op2Not (type _Bool) is never used.
  5599.             else if (Op.getMachineOpcode() == PPC::CRNOR &&
  5600.                      Op.getOperand(0) == Op.getOperand(1))
  5601. >             Op2Not = true;
  5602.           }
  5603.           LLVM_FALLTHROUGH;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:5596: error: DEAD_STORE
  The value written to &Op2Set (type _Bool) is never used.
  5594.           if (Op.isMachineOpcode()) {
  5595.             if (Op.getMachineOpcode() == PPC::CRSET)
  5596. >             Op2Set = true;
  5597.             else if (Op.getMachineOpcode() == PPC::CRUNSET)
  5598.               Op2Unset = true;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:5598: error: DEAD_STORE
  The value written to &Op2Unset (type _Bool) is never used.
  5596.               Op2Set = true;
  5597.             else if (Op.getMachineOpcode() == PPC::CRUNSET)
  5598. >             Op2Unset = true;
  5599.             else if (Op.getMachineOpcode() == PPC::CRNOR &&
  5600.                      Op.getOperand(0) == Op.getOperand(1))

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:5601: error: DEAD_STORE
  The value written to &type (type llvm::Type*) is never used.
  5599.     if (!CallOperandVal)
  5600.       return CW_Default;
  5601. >   Type *type = CallOperandVal->getType();
  5602.     // Look at the constraint type.
  5603.     switch (*constraint) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:5595: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  5593.   AArch64TargetLowering::getSingleConstraintMatchWeight(
  5594.       AsmOperandInfo &info, const char *constraint) const {
  5595. >   ConstraintWeight weight = CW_Invalid;
  5596.     Value *CallOperandVal = info.CallOperandVal;
  5597.     // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:5659: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 5659, column 12 after its lifetime ended at line 5659, column 12.
  5657.   
  5658.       S.Diag(Param->getLocation(), diag::note_template_param_here);
  5659. >     return NPV_Error;
  5660.     }
  5661.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:5665: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 5665, column 12 after its lifetime ended at line 5665, column 12.
  5663.     //   - an address constant expression of type std::nullptr_t
  5664.     if (Arg->getType()->isNullPtrType())
  5665. >     return NPV_NullPointer;
  5666.   
  5667.     //   - a constant expression that evaluates to a null pointer value (4.10); or

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:5678: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 5678, column 14 after its lifetime ended at line 5678, column 14.
  5676.           S.IsQualificationConversion(Arg->getType(), ParamType, false,
  5677.                                        ObjCLifetimeConversion))
  5678. >       return NPV_NullPointer;
  5679.   
  5680.       // The types didn't match, but we know we got a null pointer; complain,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:5685: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 5685, column 12 after its lifetime ended at line 5685, column 12.
  5683.         << Arg->getType() << ParamType << Arg->getSourceRange();
  5684.       S.Diag(Param->getLocation(), diag::note_template_param_here);
  5685. >     return NPV_NullPointer;
  5686.     }
  5687.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:5697: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 5697, column 12 after its lifetime ended at line 5697, column 12.
  5695.                                         ")");
  5696.       S.Diag(Param->getLocation(), diag::note_template_param_here);
  5697. >     return NPV_NullPointer;
  5698.     }
  5699.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:5703: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 5703, column 10 after its lifetime ended at line 5703, column 10.
  5701.     // as non-type template arguments, we should return the ExprResult here to
  5702.     // be interpreted by the caller.
  5703. >   return NPV_NotNullPointer;
  5704.   }
  5705.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:5624: error: DEAD_STORE
  The value written to &Opc2 (type unsigned int) is never used.
  5622.       return false;
  5623.     unsigned Opc1 = Load1->getMachineOpcode();
  5624. >   unsigned Opc2 = Load2->getMachineOpcode();
  5625.     switch (Opc1) {
  5626.     default: return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:5801: error: DEAD_STORE
  The value written to &InputIdx (type unsigned int) is never used.
  5799.         break;
  5800.       case AOK_Input:
  5801. >       OS << '$' << InputIdx++;
  5802.         break;
  5803.       case AOK_Output:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:5804: error: DEAD_STORE
  The value written to &OutputIdx (type unsigned int) is never used.
  5802.         break;
  5803.       case AOK_Output:
  5804. >       OS << '$' << OutputIdx++;
  5805.         break;
  5806.       case AOK_SizeDirective:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:5874: error: UNINITIALIZED_VALUE
  The value read from Imm was never initialized.
  5872.     }
  5873.   
  5874. >   unsigned EncodedVal = ARM_AM::createNEONModImm(OpCmode, Imm);
  5875.     return DAG.getTargetConstant(EncodedVal, dl, MVT::i32);
  5876.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:5874: error: UNINITIALIZED_VALUE
  The value read from OpCmode was never initialized.
  5872.     }
  5873.   
  5874. >   unsigned EncodedVal = ARM_AM::createNEONModImm(OpCmode, Imm);
  5875.     return DAG.getTargetConstant(EncodedVal, dl, MVT::i32);
  5876.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:5861: error: UNINITIALIZED_VALUE
  The value read from V was never initialized.
  5859.       V = (isTrue ? DefSI->getTrueValue() : DefSI->getFalseValue());
  5860.     }
  5861. >   return V;
  5862.   }
  5863.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:5894: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  5892.       }
  5893.       QualType Base = readType(*Loc.F, Record, Idx);
  5894. >     Qualifiers Quals = Qualifiers::fromOpaqueValue(Record[Idx++]);
  5895.       return Context.getQualifiedType(Base, Quals);
  5896.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:6128: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  6126.       QualType Deduced = readType(*Loc.F, Record, Idx);
  6127.       AutoTypeKeyword Keyword = (AutoTypeKeyword)Record[Idx++];
  6128. >     bool IsDependent = Deduced.isNull() ? Record[Idx++] : false;
  6129.       return Context.getAutoType(Deduced, Keyword, IsDependent);
  6130.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:6135: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  6133.       TemplateName Name = ReadTemplateName(*Loc.F, Record, Idx);
  6134.       QualType Deduced = readType(*Loc.F, Record, Idx);
  6135. >     bool IsDependent = Deduced.isNull() ? Record[Idx++] : false;
  6136.       return Context.getDeducedTemplateSpecializationType(Name, Deduced,
  6137.                                                           IsDependent);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:6239: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  6237.       for (unsigned I = 0; I != NumProtos; ++I)
  6238.         Protos.push_back(ReadDeclAs<ObjCProtocolDecl>(*Loc.F, Record, Idx));
  6239. >     bool IsKindOf = Record[Idx++];
  6240.       return Context.getObjCObjectType(Base, TypeArgs, Protos, IsKindOf);
  6241.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDecl.cpp:5886: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 5886, column 5.
  5884.     if (lifetime == Qualifiers::OCL_Autoreleasing) {
  5885.       // Various kinds of declaration aren't allowed to be __autoreleasing.
  5886. >     unsigned kind = -1U;
  5887.       if (VarDecl *var = dyn_cast<VarDecl>(decl)) {
  5888.         if (var->hasAttr<BlocksAttr>())

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:5934: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 5934, column 7.
  5932.   
  5933.     std::string ProducerIdentification;
  5934. >   if (IdentificationBit != -1ull) {
  5935.       Stream.JumpToBit(IdentificationBit);
  5936.       Expected<std::string> ProducerIdentificationOrErr =

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:6583: error: DEAD_STORE
  The value written to &usgn (type _Bool) is never used.
  6581.     // Determine the type of this overloaded NEON intrinsic.
  6582.     NeonTypeFlags Type(Result.getZExtValue());
  6583. >   bool usgn = Type.isUnsigned();
  6584.     bool rightShift = false;
  6585.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:6078: warning: NULL_TEST_AFTER_DEREFERENCE
  Pointer `Copyprivate` was dereferenced at line 6074 and is tested for null at line 6078, column 9.
  6076.       else if (Clause->getClauseKind() == OMPC_copyprivate)
  6077.         Copyprivate = Clause;
  6078. >     if (Copyprivate && Nowait) {
  6079.         Diag(Copyprivate->getBeginLoc(),
  6080.              diag::err_omp_single_copyprivate_with_nowait);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:6373: error: DEAD_STORE
  The value written to &FPR_idx (type unsigned int) is never used.
  6371.       case MVT::f64:
  6372.         if (FPR_idx != NumFPRs) {
  6373. >         RegsToPass.push_back(std::make_pair(FPR[FPR_idx++], Arg));
  6374.   
  6375.           if (isVarArg) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:6271: error: DEAD_STORE
  The value written to &NumFPRs (type unsigned int const ) is never used.
  6269.     };
  6270.     const unsigned NumGPRs = array_lengthof(GPR_32);
  6271. >   const unsigned NumFPRs = 13;
  6272.     const unsigned NumVRs  = array_lengthof(VR);
  6273.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:6440: error: DEAD_STORE
  The value written to &VR_idx (type unsigned int) is never used.
  6438.                 DAG.getLoad(MVT::v4f32, dl, Store, PtrOff, MachinePointerInfo());
  6439.             MemOpChains.push_back(Load.getValue(1));
  6440. >           RegsToPass.push_back(std::make_pair(VR[VR_idx++], Load));
  6441.           }
  6442.           ArgOffset += 16;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:6460: error: DEAD_STORE
  The value written to &VR_idx (type unsigned int) is never used.
  6458.         if (VR_idx != NumVRs) {
  6459.           // Doesn't have GPR space allocated.
  6460. >         RegsToPass.push_back(std::make_pair(VR[VR_idx++], Arg));
  6461.         } else if (nAltivecParamsAtEnd==0) {
  6462.           // We are emitting Altivec params in order.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:6368: error: DEAD_STORE
  The value written to &ReplaceFlags (type _Bool) is never used.
  6366.   
  6367.       unsigned Flags = 0;
  6368. >     bool ReplaceFlags = true;
  6369.   
  6370.       // When the feeding operation is an add-immediate of some sort,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:6324: error: DEAD_STORE
  The value written to &RequiresMod4Offset (type _Bool) is never used.
  6322.       case PPC::DFLOADf64:
  6323.       case PPC::DFLOADf32:
  6324. >       RequiresMod4Offset = true;
  6325.         LLVM_FALLTHROUGH;
  6326.       case PPC::LBZ:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:6342: error: DEAD_STORE
  The value written to &RequiresMod4Offset (type _Bool) is never used.
  6340.       case PPC::DFSTOREf64:
  6341.       case PPC::DFSTOREf32:
  6342. >       RequiresMod4Offset = true;
  6343.         LLVM_FALLTHROUGH;
  6344.       case PPC::STB:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaChecking.cpp:6503: error: UNINITIALIZED_VALUE
  The value read from CommonResult was never initialized.
  6501.         }
  6502.         if (!IsFirst)
  6503. >         return CommonResult;
  6504.   
  6505.         if (const auto *FD = dyn_cast<FunctionDecl>(ND)) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:6439: error: NULL_DEREFERENCE
  pointer `R` last assigned on line 6438 could be null and is dereferenced at line 6439, column 9.
  6437.     for (unsigned I = 0, N = Results.size(); I != N; ++I) {
  6438.       Result &R = ResultsData[I];
  6439. >     if (R.Kind == Result::RK_Declaration &&
  6440.           isa<ObjCMethodDecl>(R.Declaration)) {
  6441.         if (R.Priority <= BestPriority) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:6512: error: NULL_DEREFERENCE
  pointer `PVD` last assigned on line 6511 could be null and is dereferenced at line 6512, column 19.
  6510.     for (unsigned I = 0, E = getFunctionOrMethodNumParams(D); I != E; ++I) {
  6511.       auto *PVD = const_cast<ParmVarDecl *>(getFunctionOrMethodParam(D, I));
  6512. >     QualType Ty = PVD->getType();
  6513.   
  6514.       // If a user wrote a parameter with __strong explicitly, then assume they

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:6644: error: UNINITIALIZED_VALUE
  The value read from forProtocol was never initialized.
  6642.     auto methodArray = values.beginArray(ObjCTypes.MethodTy);
  6643.     for (auto MD : methods) {
  6644. >     emitMethodConstant(methodArray, MD, forProtocol);
  6645.     }
  6646.     methodArray.finishAndAddTo(values);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:6782: error: DEAD_STORE
  The value written to &LHSCastKind (type int) is never used.
  6780.   
  6781.     unsigned MergedCVRQual = lhQual.getCVRQualifiers() | rhQual.getCVRQualifiers();
  6782. >   auto LHSCastKind = CK_BitCast, RHSCastKind = CK_BitCast;
  6783.     lhQual.removeCVRQualifiers();
  6784.     rhQual.removeCVRQualifiers();

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:6782: error: DEAD_STORE
  The value written to &RHSCastKind (type int) is never used.
  6780.   
  6781.     unsigned MergedCVRQual = lhQual.getCVRQualifiers() | rhQual.getCVRQualifiers();
  6782. >   auto LHSCastKind = CK_BitCast, RHSCastKind = CK_BitCast;
  6783.     lhQual.removeCVRQualifiers();
  6784.     rhQual.removeCVRQualifiers();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:6774: error: UNINITIALIZED_VALUE
  The value read from Shift was never initialized.
  6772.           Mov = DAG.getNode(NewOp, dl, MovTy, *LHS,
  6773.                             DAG.getConstant(Value, dl, MVT::i32),
  6774. >                           DAG.getConstant(Shift, dl, MVT::i32));
  6775.         else
  6776.           Mov = DAG.getNode(NewOp, dl, MovTy,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:6778: error: UNINITIALIZED_VALUE
  The value read from Shift was never initialized.
  6776.           Mov = DAG.getNode(NewOp, dl, MovTy,
  6777.                             DAG.getConstant(Value, dl, MVT::i32),
  6778. >                           DAG.getConstant(Shift, dl, MVT::i32));
  6779.   
  6780.         return DAG.getNode(AArch64ISD::NVCAST, dl, VT, Mov);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:6814: error: UNINITIALIZED_VALUE
  The value read from Shift was never initialized.
  6812.           Mov = DAG.getNode(NewOp, dl, MovTy, *LHS,
  6813.                             DAG.getConstant(Value, dl, MVT::i32),
  6814. >                           DAG.getConstant(Shift, dl, MVT::i32));
  6815.         else
  6816.           Mov = DAG.getNode(NewOp, dl, MovTy,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:6818: error: UNINITIALIZED_VALUE
  The value read from Shift was never initialized.
  6816.           Mov = DAG.getNode(NewOp, dl, MovTy,
  6817.                             DAG.getConstant(Value, dl, MVT::i32),
  6818. >                           DAG.getConstant(Shift, dl, MVT::i32));
  6819.   
  6820.         return DAG.getNode(AArch64ISD::NVCAST, dl, VT, Mov);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:6850: error: UNINITIALIZED_VALUE
  The value read from Shift was never initialized.
  6848.         SDValue Mov = DAG.getNode(NewOp, dl, MovTy,
  6849.                                   DAG.getConstant(Value, dl, MVT::i32),
  6850. >                                 DAG.getConstant(Shift, dl, MVT::i32));
  6851.         return DAG.getNode(AArch64ISD::NVCAST, dl, VT, Mov);
  6852.       }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:7229: error: DEAD_STORE
  The value written to &quad (type _Bool) is never used.
  7227.   
  7228.     bool usgn = Type.isUnsigned();
  7229. >   bool quad = Type.isQuad();
  7230.   
  7231.     // Handle non-overloaded intrinsics first.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:7228: error: DEAD_STORE
  The value written to &usgn (type _Bool) is never used.
  7226.       Type = NeonTypeFlags(Result.getZExtValue());
  7227.   
  7228. >   bool usgn = Type.isUnsigned();
  7229.     bool quad = Type.isQuad();
  7230.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:6943: error: DEAD_STORE
  The value written to &SSID (type unsigned char) is never used.
  6941.     bool AteExtraComma = false;
  6942.     AtomicOrdering Ordering = AtomicOrdering::NotAtomic;
  6943. >   SyncScope::ID SSID = SyncScope::System;
  6944.     bool isVolatile = false;
  6945.     bool IsFP = false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/AsmParser/LLParser.cpp:6949: error: DEAD_STORE
  The value written to &isVolatile (type _Bool) is never used.
  6947.   
  6948.     if (EatIfPresent(lltok::kw_volatile))
  6949. >     isVolatile = true;
  6950.   
  6951.     switch (Lex.getKind()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaTemplate.cpp:7185: error: NULL_DEREFERENCE
  pointer `Ctx` last assigned on line 7177 could be null and is dereferenced at line 7185, column 9.
  7183.       return true;
  7184.     }
  7185. >   Ctx = Ctx->getRedeclContext();
  7186.   
  7187.     // C++ [temp]p2:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:7200: error: DEAD_STORE
  The value written to &FI (type int) is never used.
  7198.         return SDValue();
  7199.   
  7200. >     int FI = -1;
  7201.       int64_t Offset = 0;
  7202.       if (FrameIndexSDNode *FINode = dyn_cast<FrameIndexSDNode>(Ptr)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:7259: error: DEAD_STORE
  The value written to &C (type unsigned int) is never used.
  7257.       return ~0;
  7258.   
  7259. >   uint32_t C = N1->getZExtValue();
  7260.   
  7261.     switch (V.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:7686: error: DEAD_STORE
  The value written to &IsZero (type _Bool) is never used.
  7684.     APInt UndefBits(VT.getSizeInBits(), 0);
  7685.     bool IsCnst = BVN && resolveBuildVector(BVN, CnstBits, UndefBits);
  7686. >   bool IsZero = IsCnst && (CnstBits == 0);
  7687.   
  7688.     if (SrcVT.getVectorElementType().isFloatingPoint()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaType.cpp:7798: error: UNINITIALIZED_VALUE
  The value read from IM was never initialized.
  7796.       }
  7797.   
  7798. >     RD->addAttr(MSInheritanceAttr::CreateImplicit(
  7799.           S.getASTContext(), IM,
  7800.           /*BestCase=*/S.MSPointerToMemberRepresentationMethod ==

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:7903: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 7903, column 39.
  7901.     SDValue RHS = Op.getOperand(2);
  7902.     AtomicSDNode *AN = cast<AtomicSDNode>(Op.getNode());
  7903. >   RHS = DAG.getNode(ISD::XOR, dl, VT, DAG.getConstant(-1ULL, dl, VT), RHS);
  7904.     return DAG.getAtomic(ISD::ATOMIC_LOAD_CLR, dl, AN->getMemoryVT(),
  7905.                          Op.getOperand(0), Op.getOperand(1), RHS,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:8129: error: UNINITIALIZED_VALUE
  The value read from diag was never initialized.
  8127.             << ObjCProperty->getDeclName() << property_note_select;
  8128.     } else if (!UnknownObjCClass) {
  8129. >     S.Diag(Loc, diag) << ReferringDecl << FixIts;
  8130.       if (ObjCProperty)
  8131.         S.Diag(ObjCProperty->getLocation(), diag::note_property_attribute)

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:8134: error: UNINITIALIZED_VALUE
  The value read from diag_fwdclass_message was never initialized.
  8132.             << ObjCProperty->getDeclName() << property_note_select;
  8133.     } else {
  8134. >     S.Diag(Loc, diag_fwdclass_message) << ReferringDecl << FixIts;
  8135.       S.Diag(UnknownObjCClass->getLocation(), diag::note_forward_class);
  8136.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:8124: error: UNINITIALIZED_VALUE
  The value read from diag_message was never initialized.
  8122.   
  8123.     if (!Message.empty()) {
  8124. >     S.Diag(Loc, diag_message) << ReferringDecl << Message << FixIts;
  8125.       if (ObjCProperty)
  8126.         S.Diag(ObjCProperty->getLocation(), diag::note_property_attribute)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:8137: error: DEAD_STORE
  The value written to &MultipleInitValues (type _Bool) is never used.
  8135.                       InitValue = PN->getIncomingValue(i);
  8136.                     else if (InitValue != PN->getIncomingValue(i)) {
  8137. >                     MultipleInitValues = true;
  8138.                       break;
  8139.                     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:8153: error: NULL_DEREFERENCE
  pointer `User` last assigned on line 8144 could be null and is dereferenced at line 8153, column 29.
  8151.     const TargetOptions &Options = getTargetMachine().Options;
  8152.     const DataLayout &DL = I->getModule()->getDataLayout();
  8153. >   EVT VT = getValueType(DL, User->getOperand(0)->getType());
  8154.   
  8155.     return !(isFMAFasterThanFMulAndFAdd(VT) &&

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:8499: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression IndexFromEnd` of type unsigned int at line 8499, column 12.
  8497.       unsigned IndexFromEnd = ID >> 1;
  8498.       assert(IndexFromEnd && "got reference to unknown module file");
  8499. >     return getModuleManager().pch_modules().end()[-IndexFromEnd];
  8500.     }
  8501.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:8583: error: UNINITIALIZED_VALUE
  The value read from X86Opcode was never initialized.
  8581.         bool isUndefLO = NumUndefsLO == Half;
  8582.         bool isUndefHI = NumUndefsHI == Half;
  8583. >       return ExpandHorizontalBinOp(V0, V1, DL, DAG, X86Opcode, false, isUndefLO,
  8584.                                      isUndefHI);
  8585.       }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:8568: error: DEAD_STORE
  The value written to &scalarCast (type int) is never used.
  8566.     // The conversion to apply to the scalar before splatting it,
  8567.     // if necessary.
  8568. >   CastKind scalarCast = CK_NoOp;
  8569.   
  8570.     if (vectorEltTy->isIntegralType(S.Context)) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:8632: error: DEAD_STORE
  The value written to &TLI (type llvm::TargetLowering const &) is never used.
  8630.     MVT VT = Op->getSimpleValueType(0);
  8631.     unsigned NumElems = VT.getVectorNumElements();
  8632. >   const TargetLowering &TLI = DAG.getTargetLoweringInfo();
  8633.   
  8634.     // Check that all elements have the same opcode.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:8838: error: UNINITIALIZED_VALUE
  The value read from Flags was never initialized.
  8836.       break;
  8837.     }
  8838. >   OffloadEntriesInfoManager.registerDeviceGlobalVarEntryInfo(
  8839.         VarName, Addr, VarSize, Flags, Linkage);
  8840.   }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:8838: error: UNINITIALIZED_VALUE
  The value read from Linkage was never initialized.
  8836.       break;
  8837.     }
  8838. >   OffloadEntriesInfoManager.registerDeviceGlobalVarEntryInfo(
  8839.         VarName, Addr, VarSize, Flags, Linkage);
  8840.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:9052: error: DANGLING_POINTER_DEREFERENCE
  uninitialized pointer `GV` could be dangling and is dereferenced or freed at line 9052, column 64.
  9050.     int64_t GVOffset = 0;
  9051.     if (TLI->isGAPlusOffset(Ptr.getNode(), GV, GVOffset)) {
  9052. >     unsigned IdxWidth = getDataLayout().getIndexTypeSizeInBits(GV->getType());
  9053.       KnownBits Known(IdxWidth);
  9054.       llvm::computeKnownBits(GV, Known, getDataLayout());

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaInit.cpp:9083: error: NULL_DEREFERENCE
  pointer `SCS` last assigned on line 9066 could be null and is dereferenced at line 9083, column 11.
  9081.     APValue ConstantValue;
  9082.     QualType ConstantType;
  9083. >   switch (SCS->getNarrowingKind(S.Context, PostInit, ConstantValue,
  9084.                                   ConstantType)) {
  9085.     case NK_Not_Narrowing:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:9204: error: UNINITIALIZED_VALUE
  The value read from RTLFn was never initialized.
  9202.         break;
  9203.       }
  9204. >     CGF.EmitRuntimeCall(createRuntimeFunction(RTLFn), OffloadingArgs);
  9205.     };
  9206.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Serialization/ASTReader.cpp:9192: error: DEAD_STORE
  The value written to &Idx (type unsigned int) is never used.
  9190.               (RawComment::CommentKind) Record[Idx++];
  9191.           bool IsTrailingComment = Record[Idx++];
  9192. >         bool IsAlmostTrailingComment = Record[Idx++];
  9193.           Comments.push_back(new (Context) RawComment(
  9194.               SR, Kind, IsTrailingComment, IsAlmostTrailingComment));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:9255: error: DEAD_STORE
  The value written to &isThumb2 (type _Bool) is never used.
  9253.     const TargetInstrInfo *TII = Subtarget->getInstrInfo();
  9254.     DebugLoc dl = MI.getDebugLoc();
  9255. >   bool isThumb2 = Subtarget->isThumb2();
  9256.     switch (MI.getOpcode()) {
  9257.     default: {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:9351: error: UNINITIALIZED_VALUE
  The value read from Pred was never initialized.
  9349.     }
  9350.   
  9351. >   Value *Cmp = CGF.Builder.CreateICmp(Pred, Op0, Op1);
  9352.     Value *Res = CGF.Builder.CreateSExt(Cmp, Ty);
  9353.     return Res;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:9376: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 9376, column 22.
  9374.     // case can be handled in TableGen.
  9375.     unsigned Bits = VT.getScalarSizeInBits();
  9376. >   uint64_t BitMask = Bits == 64 ? -1ULL : ((1ULL << Bits) - 1);
  9377.     for (int i = 1; i >= 0; --i)
  9378.       for (int j = 1; j >= 0; --j) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:9595: error: NULL_DEREFERENCE
  pointer `TI` last assigned on line 9589 could be null and is dereferenced at line 9595, column 31.
  9593.     // Check PHI nodes in successors that expect a value to be available from this
  9594.     // block.
  9595. >   for (unsigned succ = 0, e = TI->getNumSuccessors(); succ != e; ++succ) {
  9596.       const BasicBlock *SuccBB = TI->getSuccessor(succ);
  9597.       if (!isa<PHINode>(SuccBB->begin())) continue;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:9681: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  9679.       llvm_unreachable("Unexpected intrinsic");
  9680.   
  9681. >   Value *Ternlog = CGF.Builder.CreateCall(CGF.CGM.getIntrinsic(IID),
  9682.                                             Ops.drop_back());
  9683.     Value *PassThru = ZeroMask ? ConstantAggregateZero::get(Ty) : Ops[0];

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:9773: error: DEAD_STORE
  The value written to &LoadMnemonic (type int) is never used.
  9771.     const TargetInstrInfo *TII = Subtarget.getInstrInfo();
  9772.   
  9773. >   auto LoadMnemonic = PPC::LDARX;
  9774.     auto StoreMnemonic = PPC::STDCX;
  9775.     switch (AtomicSize) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:9774: error: DEAD_STORE
  The value written to &StoreMnemonic (type int) is never used.
  9772.   
  9773.     auto LoadMnemonic = PPC::LDARX;
  9774. >   auto StoreMnemonic = PPC::STDCX;
  9775.     switch (AtomicSize) {
  9776.     default:

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:10039: error: UNINITIALIZED_VALUE
  The value read from ConflictKind was never initialized.
  10037.           Diag(ELoc, diag::err_omp_variable_in_given_clause_and_dsa)
  10038.               << getOpenMPClauseName(OMPC_private)
  10039. >             << getOpenMPClauseName(ConflictKind)
  10040.               << getOpenMPDirectiveName(CurrDir);
  10041.           reportOriginalDsa(*this, DSAStack, D, DVar);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:10011: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  10009.                                          TargetLowering::DAGCombinerInfo &DCI,
  10010.                                          const AArch64Subtarget *Subtarget) {
  10011. >   SelectionDAG &DAG = DCI.DAG;
  10012.     unsigned IID = getIntrinsicID(N);
  10013.     switch (IID) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:10275: error: UNINITIALIZED_VALUE
  The value read from ConflictKind was never initialized.
  10273.             Diag(ELoc, diag::err_omp_variable_in_given_clause_and_dsa)
  10274.                 << getOpenMPClauseName(OMPC_firstprivate)
  10275. >               << getOpenMPClauseName(ConflictKind)
  10276.                 << getOpenMPDirectiveName(DSAStack->getCurrentDirective());
  10277.             reportOriginalDsa(*this, DSAStack, D, DVar);

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOverload.cpp:10289: error: DEAD_STORE
  The value written to &ParentClass (type clang::CXXRecordDecl*) is never used.
  10287.     CXXMethodDecl *Meth = dyn_cast<CXXMethodDecl>(Callee);
  10288.     if (Meth != nullptr && Meth->isImplicit()) {
  10289. >     CXXRecordDecl *ParentClass = Meth->getParent();
  10290.       Sema::CXXSpecialMember CSM;
  10291.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOverload.cpp:10280: error: NULL_DEREFERENCE
  pointer `Callee` last assigned on line 10271 could be null and is dereferenced at line 10280, column 10.
  10278.         ClassifyOverloadCandidate(S, Cand->FoundDecl, Callee, FnDesc);
  10279.   
  10280. >   S.Diag(Callee->getLocation(), diag::note_ovl_candidate_bad_target)
  10281.         << (unsigned)FnKindPair.first << (unsigned)ocs_non_template
  10282.         << FnDesc /* Ignored */

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:10617: error: DEAD_STORE
  The value written to &LoadMnemonic (type int) is never used.
  10615.       bool is64bit = MI.getOpcode() == PPC::ATOMIC_CMP_SWAP_I64;
  10616.   
  10617. >     auto LoadMnemonic = PPC::LDARX;
  10618.       auto StoreMnemonic = PPC::STDCX;
  10619.       switch (MI.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:10618: error: DEAD_STORE
  The value written to &StoreMnemonic (type int) is never used.
  10616.   
  10617.       auto LoadMnemonic = PPC::LDARX;
  10618. >     auto StoreMnemonic = PPC::STDCX;
  10619.       switch (MI.getOpcode()) {
  10620.       default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:10376: error: DEAD_STORE
  The value written to &A (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_ARM_AsmParser_ARMAsmParser.cpp::ARMAsmParser>*) is never used.
  10374.     RegisterMCAsmParser<ARMAsmParser> X(getTheARMLETarget());
  10375.     RegisterMCAsmParser<ARMAsmParser> Y(getTheARMBETarget());
  10376. >   RegisterMCAsmParser<ARMAsmParser> A(getTheThumbLETarget());
  10377.     RegisterMCAsmParser<ARMAsmParser> B(getTheThumbBETarget());
  10378.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:10377: error: DEAD_STORE
  The value written to &B (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_ARM_AsmParser_ARMAsmParser.cpp::ARMAsmParser>*) is never used.
  10375.     RegisterMCAsmParser<ARMAsmParser> Y(getTheARMBETarget());
  10376.     RegisterMCAsmParser<ARMAsmParser> A(getTheThumbLETarget());
  10377. >   RegisterMCAsmParser<ARMAsmParser> B(getTheThumbBETarget());
  10378.   }
  10379.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:10374: error: DEAD_STORE
  The value written to &X (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_ARM_AsmParser_ARMAsmParser.cpp::ARMAsmParser>*) is never used.
  10372.   /// Force static initialization.
  10373.   extern "C" void LLVMInitializeARMAsmParser() {
  10374. >   RegisterMCAsmParser<ARMAsmParser> X(getTheARMLETarget());
  10375.     RegisterMCAsmParser<ARMAsmParser> Y(getTheARMBETarget());
  10376.     RegisterMCAsmParser<ARMAsmParser> A(getTheThumbLETarget());

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:10375: error: DEAD_STORE
  The value written to &Y (type llvm::RegisterMCAsmParser<anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_ARM_AsmParser_ARMAsmParser.cpp::ARMAsmParser>*) is never used.
  10373.   extern "C" void LLVMInitializeARMAsmParser() {
  10374.     RegisterMCAsmParser<ARMAsmParser> X(getTheARMLETarget());
  10375. >   RegisterMCAsmParser<ARMAsmParser> Y(getTheARMBETarget());
  10376.     RegisterMCAsmParser<ARMAsmParser> A(getTheThumbLETarget());
  10377.     RegisterMCAsmParser<ARMAsmParser> B(getTheThumbBETarget());

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:10602: error: DEAD_STORE
  The value written to &Redeclaration (type _Bool) is never used.
  10600.                            /*ExplicitInstantiationOrSpecialization*/false);
  10601.       if (!Previous.empty()) {
  10602. >       Redeclaration = true;
  10603.   
  10604.         OldDecl = Previous.getAsSingle<TypeAliasTemplateDecl>();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:10721: error: DEAD_STORE
  The value written to &MaxBECount (type llvm::SCEV const *) is never used.
  10719.   
  10720.   
  10721. >   const SCEV *MaxBECount = getCouldNotCompute();
  10722.     if (isa<SCEVConstant>(BECount))
  10723.       MaxBECount = BECount;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:10677: error: DEAD_STORE
  The value written to &Op (type anonymous_namespace__Users_abisbano_Binaries_llvm_llvm-project_llvm_lib_Target_ARM_AsmParser_ARMAsmParser.cpp::ARMOperand&) is never used.
  10675.   unsigned ARMAsmParser::validateTargetOperandClass(MCParsedAsmOperand &AsmOp,
  10676.                                                     unsigned Kind) {
  10677. >   ARMOperand &Op = static_cast<ARMOperand &>(AsmOp);
  10678.     // If the kind is a token for a literal immediate, check if our asm
  10679.     // operand matches. This is for InstAliases which have a fixed-value

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:11205: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned long long at line 11205, column 3.
  11203.       return SDValue();
  11204.   
  11205. >   uint64_t MinOffset = -1ull;
  11206.     for (SDNode *N : GN->uses()) {
  11207.       if (N->getOpcode() != ISD::ADD)

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:11249: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  11247.   SDValue AArch64TargetLowering::PerformDAGCombine(SDNode *N,
  11248.                                                    DAGCombinerInfo &DCI) const {
  11249. >   SelectionDAG &DAG = DCI.DAG;
  11250.     switch (N->getOpcode()) {
  11251.     default:

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:11400: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression RHSC` of type unsigned long long at line 11400, column 7.
  11398.       int64_t RHSC = RHS->getSExtValue();
  11399.       if (Op->getOpcode() == ISD::SUB)
  11400. >       RHSC = -(uint64_t)RHSC;
  11401.       if (!isInt<9>(RHSC))
  11402.         return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:11404: error: DIVIDE_BY_ZERO
  Expression `0` could be zero at line 11404, column 19.
  11402.       for (int i = 0; i * Scale < NumElements; ++i) {
  11403.         int SrcIdx = i + Offset;
  11404. >       ShMask[i] = SafeOffset(SrcIdx) ? SrcIdx : -1;
  11405.       }
  11406.       return DAG.getVectorShuffle(VT, DL, V, DAG.getUNDEF(VT), ShMask);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:11553: error: UNINITIALIZED_VALUE
  The value read from Opcode was never initialized.
  11551.       }
  11552.   
  11553. >     MachineSDNode *CmpSwap = DAG.getMachineNode(
  11554.           Opcode, SDLoc(N), DAG.getVTList(MVT::Untyped, MVT::Other), Ops);
  11555.       DAG.setNodeMemRefs(CmpSwap, {MemOp});

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaChecking.cpp:12175: error: STACK_VARIABLE_ADDRESS_ESCAPE
  Address of stack variable `Sequenced` escapes at line 12175, column 3.
  12173.       for (unsigned I = 0; I < Elts.size(); ++I)
  12174.         Tree.merge(Elts[I]);
  12175. >   }
  12176.   
  12177.     void VisitInitListExpr(InitListExpr *ILE) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDecl.cpp:12300: error: NULL_DEREFERENCE
  pointer `DeducedDecl` last assigned on line 12284 could be null and is dereferenced at line 12300, column 25.
  12298.                diag::err_auto_different_deductions)
  12299.             << (AT ? (unsigned)AT->getKeyword() : 3)
  12300. >           << Deduced << DeducedDecl->getDeclName()
  12301.             << DT->getDeducedType() << D->getDeclName()
  12302.             << DeducedDecl->getInit()->getSourceRange()

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOverload.cpp:12412: error: DEAD_STORE
  The value written to &LHS (type clang::Expr*) is never used.
  12410.                               Expr *LHS, Expr *RHS, bool PerformADL) {
  12411.     Expr *Args[2] = { LHS, RHS };
  12412. >   LHS=RHS=nullptr; // Please use only Args instead of LHS/RHS couple
  12413.   
  12414.     OverloadedOperatorKind Op = BinaryOperator::getOverloadedOperator(Opc);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:12632: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  12630.   SDValue PPCTargetLowering::PerformDAGCombine(SDNode *N,
  12631.                                                DAGCombinerInfo &DCI) const {
  12632. >   SelectionDAG &DAG = DCI.DAG;
  12633.     SDLoc dl(N);
  12634.     switch (N->getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:12956: error: NULL_DEREFERENCE
  pointer `Constructor` could be null and is dereferenced by call to `BuildCXXConstructExpr` at line 12956, column 10.
  12954.     }
  12955.   
  12956. >   return BuildCXXConstructExpr(ConstructLoc, DeclInitType,
  12957.                                  FoundDecl, Constructor,
  12958.                                  Elidable, ExprArgs, HadMultipleCandidates,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:13319: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  13317.       }
  13318.       Value *Result =
  13319. >         Builder.CreateCall(CGM.getIntrinsic(IID, Src->getType()), {Src, Ldm});
  13320.   
  13321.       // Save returned values.

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:13380: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  13378.         llvm_unreachable("Unexpected builtin ID.");
  13379.       }
  13380. >     Function *Intrinsic = CGM.getIntrinsic(IID, Dst->getType());
  13381.       llvm::Type *ParamType = Intrinsic->getFunctionType()->getParamType(1);
  13382.       SmallVector<Value *, 10> Values = {Dst};

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:13511: error: UNINITIALIZED_VALUE
  The value read from IID was never initialized.
  13509.   
  13510.       SmallVector<Value *, 24> Values;
  13511. >     Function *Intrinsic = CGM.getIntrinsic(IID);
  13512.       llvm::Type *ABType = Intrinsic->getFunctionType()->getParamType(0);
  13513.       // Load A

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:13067: error: UNINITIALIZED_VALUE
  The value read from ADWord was never initialized.
  13065.             assert(NumFlippedAToBInputs != 0 && "Impossible given predicates!");
  13066.             int APinnedIdx = ThreeAInputs ? TripleNonInputIdx : OneInput;
  13067. >           FixFlippedInputs(APinnedIdx, ADWord, AToBInputs);
  13068.           }
  13069.         }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:13074: error: UNINITIALIZED_VALUE
  The value read from ADWord was never initialized.
  13072.       int PSHUFDMask[] = {0, 1, 2, 3};
  13073.       PSHUFDMask[ADWord] = BDWord;
  13074. >     PSHUFDMask[BDWord] = ADWord;
  13075.       V = DAG.getBitcast(
  13076.           VT,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:13063: error: UNINITIALIZED_VALUE
  The value read from BDWord was never initialized.
  13061.             int BPinnedIdx =
  13062.                 BToAInputs.size() == 3 ? TripleNonInputIdx : OneInput;
  13063. >           FixFlippedInputs(BPinnedIdx, BDWord, BToBInputs);
  13064.           } else {
  13065.             assert(NumFlippedAToBInputs != 0 && "Impossible given predicates!");

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:13073: error: UNINITIALIZED_VALUE
  The value read from BDWord was never initialized.
  13071.   
  13072.       int PSHUFDMask[] = {0, 1, 2, 3};
  13073. >     PSHUFDMask[ADWord] = BDWord;
  13074.       PSHUFDMask[BDWord] = ADWord;
  13075.       V = DAG.getBitcast(

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13028: error: DEAD_STORE
  The value written to &AllowsUnaligned (type _Bool) is never used.
  13026.   
  13027.     // The AllowsUnaliged flag models the SCTLR.A setting in ARM cpus
  13028. >   bool AllowsUnaligned = Subtarget->allowsUnalignedMem();
  13029.   
  13030.     switch (VT.getSimpleVT().SimpleTy) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13242: error: DEAD_STORE
  The value written to &Scale (type unsigned int) is never used.
  13240.       return false;
  13241.   
  13242. >   unsigned Scale = 1;
  13243.     switch (VT.getSimpleVT().SimpleTy) {
  13244.     default: return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13270: error: DEAD_STORE
  The value written to &V (type long long) is never used.
  13268.     if (V < 0) {
  13269.       isNeg = true;
  13270. >     V = - V;
  13271.     }
  13272.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13269: error: DEAD_STORE
  The value written to &isNeg (type _Bool) is never used.
  13267.     bool isNeg = false;
  13268.     if (V < 0) {
  13269. >     isNeg = true;
  13270.       V = - V;
  13271.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13313: error: DEAD_STORE
  The value written to &V (type long long) is never used.
  13311.     // ARM mode.
  13312.     if (V < 0)
  13313. >     V = - V;
  13314.     switch (VT.getSimpleVT().SimpleTy) {
  13315.     default: return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13418: error: DEAD_STORE
  The value written to &Scale (type int) is never used.
  13416.         return isLegalT2ScaledAddressingMode(AM, VT);
  13417.   
  13418. >     int Scale = AM.Scale;
  13419.       switch (VT.getSimpleVT().SimpleTy) {
  13420.       default: return false;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13460: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Imm` of type unsigned int at line 13460, column 12.
  13458.     if (!Subtarget->isThumb())
  13459.       return ARM_AM::getSOImmVal((uint32_t)Imm) != -1 ||
  13460. >            ARM_AM::getSOImmVal(-(uint32_t)Imm) != -1;
  13461.     if (Subtarget->isThumb2())
  13462.       return ARM_AM::getT2SOImmVal((uint32_t)Imm) != -1 ||

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13463: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression Imm` of type unsigned int at line 13463, column 12.
  13461.     if (Subtarget->isThumb2())
  13462.       return ARM_AM::getT2SOImmVal((uint32_t)Imm) != -1 ||
  13463. >            ARM_AM::getT2SOImmVal(-(uint32_t)Imm) != -1;
  13464.     // Thumb1 doesn't have cmn, and only 8-bit immediates.
  13465.     return Imm >= 0 && Imm <= 255;

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:13484: error: DEAD_STORE
  The value written to &InCompoundScope (type _Bool) is never used.
  13482.     llvm::DenseMap<QualType, SourceLocation> PreviousRedeclTypes;
  13483.     OMPDeclareReductionDecl *PrevDRD = nullptr;
  13484. >   bool InCompoundScope = true;
  13485.     if (S != nullptr) {
  13486.       // Find previous declaration with the same name not referenced in other

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:13494: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  13492.   PPCTargetLowering::getSingleConstraintMatchWeight(
  13493.       AsmOperandInfo &info, const char *constraint) const {
  13494. >   ConstraintWeight weight = CW_Invalid;
  13495.     Value *CallOperandVal = info.CallOperandVal;
  13496.       // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:13757: error: UNINITIALIZED_VALUE
  The value read from IntNo was never initialized.
  13755.       Value *LHS = EmitScalarExpr(E->getArg(0));
  13756.       Value *RHS = EmitScalarExpr(E->getArg(1));
  13757. >     Function *Callee = CGM.getIntrinsic(IntNo, ConvertType(E->getType()));
  13758.       return Builder.CreateCall(Callee, {LHS, RHS});
  13759.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:13794: error: UNINITIALIZED_VALUE
  The value read from IntNo was never initialized.
  13792.       }
  13793.       Value *Vec = EmitScalarExpr(E->getArg(0));
  13794. >     Function *Callee = CGM.getIntrinsic(IntNo, Vec->getType());
  13795.       return Builder.CreateCall(Callee, {Vec});
  13796.     }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13677: error: DEAD_STORE
  The value written to &BitWidth (type unsigned int) is never used.
  13675.                                                         const SelectionDAG &DAG,
  13676.                                                         unsigned Depth) const {
  13677. >   unsigned BitWidth = Known.getBitWidth();
  13678.     Known.resetAll();
  13679.     switch (Op.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:13736: error: DEAD_STORE
  The value written to &InCompoundScope (type _Bool) is never used.
  13734.     llvm::DenseMap<QualType, SourceLocation> PreviousRedeclTypes;
  13735.     OMPDeclareMapperDecl *PrevDMD = nullptr;
  13736. >   bool InCompoundScope = true;
  13737.     if (S != nullptr) {
  13738.       // Find previous declaration with the same name not referenced in other

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:13919: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression returned by getStoreSize` of type unsigned int at line 13919, column 5.
  13917.       Info.memVT = VT;
  13918.       Info.ptrVal = I.getArgOperand(0);
  13919. >     Info.offset = -VT.getStoreSize()+1;
  13920.       Info.size = 2*VT.getStoreSize()-1;
  13921.       Info.align = 1;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13943: error: DEAD_STORE
  The value written to &type (type llvm::Type*) is never used.
  13941.     if (!CallOperandVal)
  13942.       return CW_Default;
  13943. >   Type *type = CallOperandVal->getType();
  13944.     // Look at the constraint type.
  13945.     switch (*constraint) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:13937: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  13935.   ARMTargetLowering::getSingleConstraintMatchWeight(
  13936.       AsmOperandInfo &info, const char *constraint) const {
  13937. >   ConstraintWeight weight = CW_Invalid;
  13938.     Value *CallOperandVal = info.CallOperandVal;
  13939.       // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:14103: error: DEAD_STORE
  The value written to &IsMemberSpecialization (type _Bool) is never used.
  14101.         Diag(TemplateParams->getTemplateLoc(), diag::err_template_tag_noparams)
  14102.           << TypeWithKeyword::getTagTypeKindName(Kind) << Name;
  14103. >       IsMemberSpecialization = true;
  14104.       }
  14105.     }

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:14458: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 14458, column 12 after its lifetime ended at line 14458, column 12.
  14456.       if (Result)
  14457.         *Result = EvalResult.Val.getInt();
  14458. >     return E;
  14459.     }
  14460.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:14477: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 14477, column 22 after its lifetime ended at line 14477, column 22.
  14475.       }
  14476.   
  14477. >     return ExprError();
  14478.     }
  14479.   

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:14486: error: USE_AFTER_LIFETIME
  Variable EvalResult is used at line line 14486, column 10 after its lifetime ended at line 14486, column 10.
  14484.     if (Result)
  14485.       *Result = EvalResult.Val.getInt();
  14486. >   return E;
  14487.   }
  14488.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:14467: error: DEAD_STORE
  The value written to &NegConstant (type long long) is never used.
  14465.   
  14466.     assert(Constant && "Constant Should not be a null pointer.");
  14467. >   int64_t NegConstant = 0 - Constant->getSExtValue();
  14468.   
  14469.     switch(cast<CondCodeSDNode>(Cmp.getOperand(2))->get()) {

/Users/abisbano/Binaries/llvm/llvm-project/clang/lib/Sema/SemaExpr.cpp:14635: error: UNINITIALIZED_VALUE
  The value read from D was never initialized.
  14633.   
  14634.         for (const auto *L : Rec.Lambdas)
  14635. >         Diag(L->getBeginLoc(), D);
  14636.       } else {
  14637.         // Mark the capture expressions odr-used. This was deferred

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:14680: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  14678.            "Only combine this when P9 altivec supported!");
  14679.   
  14680. >   SelectionDAG &DAG = DCI.DAG;
  14681.     SDLoc dl(N);
  14682.     SDValue Cond = N->getOperand(0);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:17076: error: USE_AFTER_LIFETIME
  Variable MinVT is used at line line 17076, column 44 after its lifetime ended at line 17067, column 9.
  17074.   
  17075.         if (ISD::UNDEF == Op.getOpcode())
  17076. >         Opnds.append(NumElts, DAG.getUNDEF(MinVT));
  17077.   
  17078.         if (ISD::BUILD_VECTOR == Op.getOpcode()) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:17085: error: USE_AFTER_LIFETIME
  Variable MinVT is used at line line 17085, column 54 after its lifetime ended at line 17067, column 9.
  17083.             for (unsigned i = 0; i != NumElts; ++i)
  17084.               Opnds.push_back(
  17085. >                 DAG.getNode(ISD::TRUNCATE, SDLoc(N), MinVT, Op.getOperand(i)));
  17086.           }
  17087.         }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:17092: error: USE_AFTER_LIFETIME
  Variable MinVT is used at line line 17092, column 50 after its lifetime ended at line 17067, column 9.
  17090.       assert(VT.getVectorNumElements() == Opnds.size() &&
  17091.              "Concat vector type mismatch");
  17092. >     return DAG.getBuildVector(VT, SDLoc(N), Opnds);
  17093.     }
  17094.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:18917: error: UNINITIALIZED_VALUE
  The value read from HOpcode was never initialized.
  18915.     // add (extractelt (X, 1), extractelt (X, 0)) --> extractelt (hadd X, X), 0
  18916.     // sub (extractelt (X, 0), extractelt (X, 1)) --> extractelt (hsub X, X), 0
  18917. >   SDValue HOp = DAG.getNode(HOpcode, DL, X.getValueType(), X, X);
  18918.     return DAG.getNode(ISD::EXTRACT_VECTOR_ELT, DL, Op.getSimpleValueType(), HOp,
  18919.                        DAG.getIntPtrConstant(0, DL));

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:21508: error: UNINITIALIZED_VALUE
  The value read from ArgMode was never initialized.
  21506.     // VAARG_64 returns two values: Variable Argument Address, Chain
  21507.     SDValue InstOps[] = {Chain, SrcPtr, DAG.getConstant(ArgSize, dl, MVT::i32),
  21508. >                        DAG.getConstant(ArgMode, dl, MVT::i8),
  21509.                          DAG.getConstant(Align, dl, MVT::i32)};
  21510.     SDVTList VTs = DAG.getVTList(getPointerTy(DAG.getDataLayout()), MVT::Other);

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:22429: error: DEAD_STORE
  The value written to &TestOpc (type unsigned int) is never used.
  22427.     case Intrinsic::x86_avx_vtestc_pd_256:
  22428.     case Intrinsic::x86_avx_vtestnzc_pd_256: {
  22429. >     unsigned TestOpc = X86ISD::PTEST;
  22430.       X86::CondCode X86CC;
  22431.       switch (IntNo) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:22910: error: NULL_DEREFERENCE
  pointer `EHInfo` last assigned on line 22902 could be null and is dereferenced at line 22910, column 3.
  22908.     if (!FINode)
  22909.       report_fatal_error("llvm.x86.seh.ehregnode expects a static alloca");
  22910. >   EHInfo->EHRegNodeFrameIndex = FINode->getIndex();
  22911.   
  22912.     // Return the chain operand without making any DAG nodes.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:22910: error: NULL_DEREFERENCE
  pointer `FINode` last assigned on line 22907 could be null and is dereferenced at line 22910, column 33.
  22908.     if (!FINode)
  22909.       report_fatal_error("llvm.x86.seh.ehregnode expects a static alloca");
  22910. >   EHInfo->EHRegNodeFrameIndex = FINode->getIndex();
  22911.   
  22912.     // Return the chain operand without making any DAG nodes.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:22928: error: NULL_DEREFERENCE
  pointer `EHInfo` last assigned on line 22920 could be null and is dereferenced at line 22928, column 3.
  22926.     if (!FINode)
  22927.       report_fatal_error("llvm.x86.seh.ehguard expects a static alloca");
  22928. >   EHInfo->EHGuardFrameIndex = FINode->getIndex();
  22929.   
  22930.     // Return the chain operand without making any DAG nodes.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:22928: error: NULL_DEREFERENCE
  pointer `FINode` last assigned on line 22925 could be null and is dereferenced at line 22928, column 31.
  22926.     if (!FINode)
  22927.       report_fatal_error("llvm.x86.seh.ehguard expects a static alloca");
  22928. >   EHInfo->EHGuardFrameIndex = FINode->getIndex();
  22929.   
  22930.     // Return the chain operand without making any DAG nodes.

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:23981: error: UNINITIALIZED_VALUE
  The value read from CC was never initialized.
  23979.     }
  23980.   
  23981. >   SDValue Cond = DAG.getSetCC(DL, VT, N0, N1, CC);
  23982.     return DAG.getSelect(DL, VT, Cond, N0, N1);
  23983.   }

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:30104: error: DEAD_STORE
  The value written to &MF (type llvm::MachineFunction*) is never used.
  30102.   X86TargetLowering::EmitInstrWithCustomInserter(MachineInstr &MI,
  30103.                                                  MachineBasicBlock *BB) const {
  30104. >   MachineFunction *MF = BB->getParent();
  30105.     const TargetInstrInfo *TII = Subtarget.getInstrInfo();
  30106.     DebugLoc DL = MI.getDebugLoc();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:30105: error: DEAD_STORE
  The value written to &TII (type llvm::X86InstrInfo const *) is never used.
  30103.                                                  MachineBasicBlock *BB) const {
  30104.     MachineFunction *MF = BB->getParent();
  30105. >   const TargetInstrInfo *TII = Subtarget.getInstrInfo();
  30106.     DebugLoc DL = MI.getDebugLoc();
  30107.   

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:30440: error: DEAD_STORE
  The value written to &BitWidth (type unsigned int) is never used.
  30438.                                                         const SelectionDAG &DAG,
  30439.                                                         unsigned Depth) const {
  30440. >   unsigned BitWidth = Known.getBitWidth();
  30441.     unsigned Opc = Op.getOpcode();
  30442.     EVT VT = Op.getValueType();

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:32060: error: DEAD_STORE
  The value written to &CombineOp (type unsigned int) is never used.
  32058.   
  32059.         // Search for a half-shuffle which we can combine with.
  32060. >       unsigned CombineOp =
  32061.             V.getOpcode() == X86ISD::UNPCKL ? X86ISD::PSHUFLW : X86ISD::PSHUFHW;
  32062.         if (V.getOperand(0) != V.getOperand(1) ||

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:39998: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 39998, column 3.
  39996.   int getMCOpcodeGen(uint16_t Opcode, enum Subtarget inSubtarget) {
  39997.   static const uint16_t getMCOpcodeGenTable[][7] = {
  39998. >   { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  39999.     { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40000.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:39999: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 39999, column 3.
  39997.   static const uint16_t getMCOpcodeGenTable[][7] = {
  39998.     { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  39999. >   { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40000.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40001.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40000: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40000, column 3.
  39998.     { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  39999.     { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40000. >   { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40001.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40002.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40001: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40001, column 3.
  39999.     { AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40000.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40001. >   { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40002.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40003.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40002: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40002, column 3.
  40000.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40001.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40002. >   { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40003.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40004.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40003: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40003, column 3.
  40001.     { AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40002.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40003. >   { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40004.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40005.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40004: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40004, column 3.
  40002.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40003.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40004. >   { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40005.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40006.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40005: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40005, column 3.
  40003.     { AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40004.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40005. >   { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40006.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40007.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40006: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40006, column 3.
  40004.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40005.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40006. >   { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40007.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40008.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40007: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40007, column 3.
  40005.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40006.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40007. >   { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40008.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40009.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40008: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40008, column 3.
  40006.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40007.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40008. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40009.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40010.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40009: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40009, column 3.
  40007.     { AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40008.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40009. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40010.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40011.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40010: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40010, column 3.
  40008.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40009.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40010. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40011.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40012.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40011: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40011, column 3.
  40009.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40010.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40011. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40012.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40013.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40012: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40012, column 3.
  40010.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40011.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40012. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40013.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40014.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40013: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40013, column 3.
  40011.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40012.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40013. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40014.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40015.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40014: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40014, column 3.
  40012.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40013.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40014. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40015.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40016.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40015: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40015, column 3.
  40013.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40014.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40015. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40016.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40017.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40016: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40016, column 3.
  40014.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40015.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40016. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40017.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40018.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40017: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40017, column 3.
  40015.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40016.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40017. >   { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40018.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40019.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40018: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40018, column 3.
  40016.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40017.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40018. >   { AMDGPU::BUFFER_ATOMIC_AND_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40019.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40020.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40019: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40019, column 3.
  40017.     { AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40018.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40019. >   { AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40020.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40021.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40020: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40020, column 3.
  40018.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40019.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40020. >   { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40021.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40022.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40021: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40021, column 3.
  40019.     { AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40020.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40021. >   { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40022.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40023.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40022: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40022, column 3.
  40020.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40021.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40022. >   { AMDGPU::BUFFER_ATOMIC_AND_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40023.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40024.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40023: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40023, column 3.
  40021.     { AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40022.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40023. >   { AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40024.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40025.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40024: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40024, column 3.
  40022.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40023.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40024. >   { AMDGPU::BUFFER_ATOMIC_AND_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40025.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40026.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40025: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40025, column 3.
  40023.     { AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40024.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40025. >   { AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40026.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40027.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40026: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40026, column 3.
  40024.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40025.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40026. >   { AMDGPU::BUFFER_ATOMIC_AND_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40027.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40028.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40027: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40027, column 3.
  40025.     { AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40026.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40027. >   { AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40028.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40029.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40028: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40028, column 3.
  40026.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40027.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40028. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40029.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40030.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40029: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40029, column 3.
  40027.     { AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40028.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40029. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40030.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40031.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40030: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40030, column 3.
  40028.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40029.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40030. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40031.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40032.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40031: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40031, column 3.
  40029.     { AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40030.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40031. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40032.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40033.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40032: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40032, column 3.
  40030.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40031.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40032. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40033.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40034.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40033: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40033, column 3.
  40031.     { AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40032.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40033. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40034.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40035.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40034: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40034, column 3.
  40032.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40033.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40034. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40035.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40036.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40035: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40035, column 3.
  40033.     { AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40034.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40035. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40036.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40037.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40036: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40036, column 3.
  40034.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40035.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40036. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40037.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40038.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40037: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40037, column 3.
  40035.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40036.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40037. >   { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40038.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40039.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40038: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40038, column 3.
  40036.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40037.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40038. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40039.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40040.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40039: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40039, column 3.
  40037.     { AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40038.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40039. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40040.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40041.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40040: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40040, column 3.
  40038.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40039.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40040. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40041.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40042.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40041: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40041, column 3.
  40039.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40040.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40041. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40042.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40043.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40042: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40042, column 3.
  40040.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40041.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40042. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40043.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40044.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40043: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40043, column 3.
  40041.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40042.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40043. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40044.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40045.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40044: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40044, column 3.
  40042.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40043.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40044. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40045.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40046.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40045: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40045, column 3.
  40043.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40044.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40045. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40046.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40047.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40046: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40046, column 3.
  40044.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40045.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40046. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40047.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40048.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40047: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40047, column 3.
  40045.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40046.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40047. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40048.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40049.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40048: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40048, column 3.
  40046.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40047.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40048. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40049.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40050.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40049: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40049, column 3.
  40047.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40048.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40049. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40050.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40051.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40050: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40050, column 3.
  40048.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40049.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40050. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40051.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40052.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40051: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40051, column 3.
  40049.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40050.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40051. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40052.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40053.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40052: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40052, column 3.
  40050.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40051.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40052. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40053.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40054.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40053: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40053, column 3.
  40051.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40052.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40053. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40054.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40055.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40054: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40054, column 3.
  40052.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40053.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40054. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40055.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40056.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40055: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40055, column 3.
  40053.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40054.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40055. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40056.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40057.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40056: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40056, column 3.
  40054.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40055.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40056. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40057.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40058.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40057: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40057, column 3.
  40055.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40056.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40057. >   { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40058.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40059.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40058: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40058, column 3.
  40056.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40057.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40058. >   { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40059.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40060.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40059: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40059, column 3.
  40057.     { AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40058.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40059. >   { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40060.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40061.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40060: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40060, column 3.
  40058.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40059.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40060. >   { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40061.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40062.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40061: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40061, column 3.
  40059.     { AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40060.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40061. >   { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40062.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40063.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40062: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40062, column 3.
  40060.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40061.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40062. >   { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40063.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40064.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40063: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40063, column 3.
  40061.     { AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40062.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40063. >   { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40064.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40065.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40064: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40064, column 3.
  40062.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40063.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40064. >   { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40065.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40066.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40065: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40065, column 3.
  40063.     { AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40064.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40065. >   { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40066.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40067.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40066: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40066, column 3.
  40064.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40065.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40066. >   { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40067.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40068.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40067: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40067, column 3.
  40065.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40066.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40067. >   { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40068.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40069.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40068: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40068, column 3.
  40066.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40067.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40068. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40069.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40070.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40069: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40069, column 3.
  40067.     { AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40068.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40069. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40070.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40071.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40070: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40070, column 3.
  40068.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40069.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40070. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40071.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40072.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40071: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40071, column 3.
  40069.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40070.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40071. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40072.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40073.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40072: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40072, column 3.
  40070.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40071.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40072. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40073.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40074.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40073: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40073, column 3.
  40071.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40072.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40073. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40074.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40075.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40074: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40074, column 3.
  40072.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40073.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40074. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40075.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40076.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40075: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40075, column 3.
  40073.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40074.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40075. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40076.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40077.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40076: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40076, column 3.
  40074.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40075.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40076. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40077.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40078.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40077: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40077, column 3.
  40075.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40076.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40077. >   { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40078.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40079.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40078: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40078, column 3.
  40076.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40077.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40078. >   { AMDGPU::BUFFER_ATOMIC_INC_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40079.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40080.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40079: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40079, column 3.
  40077.     { AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40078.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40079. >   { AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40080.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40081.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40080: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40080, column 3.
  40078.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40079.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40080. >   { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40081.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40082.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40081: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40081, column 3.
  40079.     { AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40080.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40081. >   { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40082.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40083.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40082: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40082, column 3.
  40080.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40081.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40082. >   { AMDGPU::BUFFER_ATOMIC_INC_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40083.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40084.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40083: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40083, column 3.
  40081.     { AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40082.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40083. >   { AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40084.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40085.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40084: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40084, column 3.
  40082.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40083.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40084. >   { AMDGPU::BUFFER_ATOMIC_INC_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40085.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40086.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40085: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40085, column 3.
  40083.     { AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40084.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40085. >   { AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40086.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40087.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40086: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40086, column 3.
  40084.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40085.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40086. >   { AMDGPU::BUFFER_ATOMIC_INC_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40087.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40088.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40087: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40087, column 3.
  40085.     { AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40086.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40087. >   { AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40088.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40089.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40088: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40088, column 3.
  40086.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40087.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40088. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40089.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40090.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40089: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40089, column 3.
  40087.     { AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40088.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40089. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40090.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40091.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40090: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40090, column 3.
  40088.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40089.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40090. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40091.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40092.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40091: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40091, column 3.
  40089.     { AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40090.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40091. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40092.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40093.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40092: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40092, column 3.
  40090.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40091.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40092. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40093.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40094.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40093: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40093, column 3.
  40091.     { AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40092.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40093. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40094.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40095.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40094: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40094, column 3.
  40092.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40093.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40094. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40095.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40096.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40095: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40095, column 3.
  40093.     { AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40094.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40095. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40096.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40097.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40096: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40096, column 3.
  40094.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40095.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40096. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40097.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40098.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40097: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40097, column 3.
  40095.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40096.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40097. >   { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40098.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40099.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40098: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40098, column 3.
  40096.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40097.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40098. >   { AMDGPU::BUFFER_ATOMIC_OR_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40099.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40100.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40099: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40099, column 3.
  40097.     { AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40098.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40099. >   { AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40100.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40101.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40100: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40100, column 3.
  40098.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40099.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40100. >   { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40101.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40102.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40101: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40101, column 3.
  40099.     { AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40100.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40101. >   { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40102.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40103.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40102: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40102, column 3.
  40100.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40101.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40102. >   { AMDGPU::BUFFER_ATOMIC_OR_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40103.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40104.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40103: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40103, column 3.
  40101.     { AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40102.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40103. >   { AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40104.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40105.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40104: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40104, column 3.
  40102.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40103.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40104. >   { AMDGPU::BUFFER_ATOMIC_OR_OFFEN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40105.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40106.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40105: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40105, column 3.
  40103.     { AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40104.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40105. >   { AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40106.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40107.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40106: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40106, column 3.
  40104.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40105.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40106. >   { AMDGPU::BUFFER_ATOMIC_OR_OFFSET, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40107.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40108.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40107: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40107, column 3.
  40105.     { AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40106.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40107. >   { AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40108.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40109.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40108: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40108, column 3.
  40106.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40107.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40108. >   { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40109.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40110.     { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40109: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40109, column 3.
  40107.     { AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40108.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40109. >   { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40110.     { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40111.     { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40110: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40110, column 3.
  40108.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40109.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40110. >   { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40111.     { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40112.     { AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

lib/Target/AMDGPU/AMDGPUGenInstrInfo.inc:40111: warning: UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION
  A unary minus is applied to `expression 1` of type unsigned int at line 40111, column 3.
  40109.     { AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_RTN_si, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40110.     { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40111. >   { AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40112.     { AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },
  40113.     { AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_RTN, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_RTN_si, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_RTN_vi, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U, (uint16_t)-1U },

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:42290: error: DEAD_STORE
  The value written to &DAG (type llvm::SelectionDAG&) is never used.
  42288.   SDValue X86TargetLowering::PerformDAGCombine(SDNode *N,
  42289.                                                DAGCombinerInfo &DCI) const {
  42290. >   SelectionDAG &DAG = DCI.DAG;
  42291.     switch (N->getOpcode()) {
  42292.     default: break;

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:42808: error: DEAD_STORE
  The value written to &type (type llvm::Type*) is never used.
  42806.     if (!CallOperandVal)
  42807.       return CW_Default;
  42808. >   Type *type = CallOperandVal->getType();
  42809.     // Look at the constraint type.
  42810.     switch (*constraint) {

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:42802: error: DEAD_STORE
  The value written to &weight (type int) is never used.
  42800.     X86TargetLowering::getSingleConstraintMatchWeight(
  42801.       AsmOperandInfo &info, const char *constraint) const {
  42802. >   ConstraintWeight weight = CW_Invalid;
  42803.     Value *CallOperandVal = info.CallOperandVal;
  42804.       // If we don't have a value, we can't do a match,

/Users/abisbano/Binaries/llvm/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:43273: error: DEAD_STORE
  The value written to &VConstraint (type _Bool) is never used.
  43271.       case 'x':   // SSE_REGS if SSE1 allowed or AVX_REGS if AVX allowed
  43272.         if (!Subtarget.hasSSE1()) break;
  43273. >       bool VConstraint = (Constraint[0] == 'v');
  43274.   
  43275.         switch (VT.SimpleTy) {

Summary of the reports

                                  DEAD_STORE: 647
                         UNINITIALIZED_VALUE: 311
                            NULL_DEREFERENCE: 230
  UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION: 191
                 NULL_TEST_AFTER_DEREFERENCE: 29
                              USE_AFTER_FREE: 20
                          USE_AFTER_LIFETIME: 14
                DANGLING_POINTER_DEREFERENCE: 11
                                 MEMORY_LEAK: 7
               STACK_VARIABLE_ADDRESS_ESCAPE: 5
                              DIVIDE_BY_ZERO: 4
          STATIC_INITIALIZATION_ORDER_FIASCO: 1